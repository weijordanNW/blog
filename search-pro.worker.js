const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":456,\"nextId\":456,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\",\"4\":\"4\",\"5\":\"4@0\",\"6\":\"5\",\"7\":\"5@0\",\"8\":\"6\",\"9\":\"7\",\"10\":\"7@0\",\"11\":\"8\",\"12\":\"8@0\",\"13\":\"9\",\"14\":\"9@0\",\"15\":\"9@1\",\"16\":\"10\",\"17\":\"10@0\",\"18\":\"10@1\",\"19\":\"11\",\"20\":\"11@0\",\"21\":\"11@1\",\"22\":\"12\",\"23\":\"12#markdown-introduction\",\"24\":\"12#markdown-config\",\"25\":\"12#markdown-extension\",\"26\":\"12#vuepress-enhancement\",\"27\":\"12#theme-enhancement\",\"28\":\"12#code-tabs\",\"29\":\"12#tabs\",\"30\":\"12#footnote\",\"31\":\"12#include-files\",\"32\":\"12#tex\",\"33\":\"12#tasklist\",\"34\":\"12#image-enhancement\",\"35\":\"12#superscript-and-subscript\",\"36\":\"12#component\",\"37\":\"12@0\",\"38\":\"12@1\",\"39\":\"13\",\"40\":\"13#page-title\",\"41\":\"13#page-information\",\"42\":\"13#page-content\",\"43\":\"13#components\",\"44\":\"13@0\",\"45\":\"13@1\",\"46\":\"14\",\"47\":\"14@0\",\"48\":\"15\",\"49\":\"15@0\",\"50\":\"16\",\"51\":\"17\",\"52\":\"17@0\",\"53\":\"18\",\"54\":\"18#常见的水平垂直居中实现方案\",\"55\":\"18#利用定位-父相子绝-位移\",\"56\":\"18#利用定位-margin-负值\",\"57\":\"18#table布局\",\"58\":\"18#flex弹性布局\",\"59\":\"18#grid网格布局\",\"60\":\"18#拓展\",\"61\":\"18#内联元素居中布局\",\"62\":\"18#块级元素居中布局\",\"63\":\"18#bfc问题\",\"64\":\"18#一、bfc的定义-一个独立的渲染区\",\"65\":\"18#二、触发bfc的条件\",\"66\":\"18#四、bfc的应用场景-https-blog-csdn-net-qq-63299825-article-details-131048599\",\"67\":\"18#_1-避免外边距重叠\",\"68\":\"18#_2-清除浮动\",\"69\":\"18#_3-实现两栏布局\",\"70\":\"18#_4-实现三栏布局\",\"71\":\"18#三、外边距合并问题\",\"72\":\"18#flex-1-是哪些属性的缩写-对应的属性代表什么含义\",\"73\":\"18#隐藏元素-的属性有哪些\",\"74\":\"18@0\",\"75\":\"19\",\"76\":\"19#js-类型判断ttps-blog-csdn-net-mywpython-article-details-134671186\",\"77\":\"19#怎么判断两个对象相等\",\"78\":\"19#总结\",\"79\":\"19#如何判断空对象\",\"80\":\"19#判断空对象\",\"81\":\"19#object-getownpropertynames\",\"82\":\"19#reflect-ownkeys\",\"83\":\"19#总结-1\",\"84\":\"19#数组的foreach和map方法有哪些区别-常用哪些方法去对数组进行增、删、改\",\"85\":\"19#foreach-方法\",\"86\":\"19#map-方法\",\"87\":\"19#增删改方法\",\"88\":\"19#闭包和作用域\",\"89\":\"19#如何实现继承-原型和原型链\",\"90\":\"19#总结-2\",\"91\":\"19#_2-4-原型相关的面试题目\",\"92\":\"19#_2-4-1-说说你对原型和原型链的理解\",\"93\":\"19#六、寄生式组合继承【必会】\",\"94\":\"19#小结\",\"95\":\"19#七、es6-继承\",\"96\":\"19#_7-1-代码实现\",\"97\":\"19#箭头函数和普通函数有什么区别\",\"98\":\"19#浏览器的事件循环机制\",\"99\":\"19#列举宿主对象、内置对象、原生对象并说明其定义\",\"100\":\"19#宿主对象-host-objects\",\"101\":\"19#内置对象-built-in-objects\",\"102\":\"19#原生对象-native-objects\",\"103\":\"19#总结-3\",\"104\":\"19#和-的区别\",\"105\":\"19#严格相等运算符-span-class-ne-text-span\",\"106\":\"19#相等运算符-span-class-ne-text-span\",\"107\":\"19#推荐使用\",\"108\":\"19#例子\",\"109\":\"19#null-undefined的区别\",\"110\":\"19#null\",\"111\":\"19#undefined\",\"112\":\"19#区别\",\"113\":\"19#例子-1\",\"114\":\"19#怎么获取当前日期-年-月-日时-分-秒\",\"115\":\"19#类数组-数组-对象-之间的-关系和互相转换方法\",\"116\":\"19#类数组-伪数组-与数组\",\"117\":\"19#类数组转数组\",\"118\":\"19#数组转类数组\",\"119\":\"19#数组与对象\",\"120\":\"19#数组转对象\",\"121\":\"19#对象转数组\",\"122\":\"19#变量提升是什么-与函数提升的区别\",\"123\":\"19#变量提升\",\"124\":\"19#函数提升\",\"125\":\"19#区别-1\",\"126\":\"19#函数表达式与函数声明的区别\",\"127\":\"19#什么是作用域链-如何延长\",\"128\":\"19#如何实现数组的随机排序\",\"129\":\"19#dom节点的attribute和property有何区别\",\"130\":\"19#attribute\",\"131\":\"19#property\",\"132\":\"19#区别-2\",\"133\":\"19#示例\",\"134\":\"19#dom结构操作怎样添加、移除、移动、复制、创建和查找节点\",\"135\":\"19#添加节点\",\"136\":\"19#移除节点\",\"137\":\"19#移动节点\",\"138\":\"19#替换节点\",\"139\":\"19#复制节点\",\"140\":\"19#创建节点\",\"141\":\"19#查找节点\",\"142\":\"19#什么是事件冒泡-它是如何工作的-如何阻止事件冒泡\",\"143\":\"19#事件冒泡-event-bubbling\",\"144\":\"19#工作原理\",\"145\":\"19#示例-1\",\"146\":\"19#如何阻止事件冒泡\",\"147\":\"19#示例-2\",\"148\":\"19#总结-4\",\"149\":\"19#什么是事件捕获-它是如何工作的\",\"150\":\"19#工作原理-1\",\"151\":\"19#事件传播的三个阶段\",\"152\":\"19#如何使用事件捕获\",\"153\":\"19#示例-3\",\"154\":\"19#如何阻止事件捕获\",\"155\":\"19#总结-5\",\"156\":\"19#dom的事件模型\",\"157\":\"19#dom-事件模型\",\"158\":\"19#事件模型\",\"159\":\"19#dom-level-2事件模型\",\"160\":\"19#事件对象\",\"161\":\"19#事件委托\",\"162\":\"19#事件三要素是什么\",\"163\":\"19#事件对象-event-object\",\"164\":\"19#示例-4\",\"165\":\"19#获取元素位置\",\"166\":\"19#_1-span-class-ne-text-offsetleft-span-和-span-class-ne-text-offsettop-span\",\"167\":\"19#_2-span-class-ne-text-getboundingclientrect-span\",\"168\":\"19#_3-span-class-ne-text-offsetparent-span\",\"169\":\"19#_4-span-class-ne-text-clientleft-span-和-span-class-ne-text-clienttop-span\",\"170\":\"19#_5-span-class-ne-text-scrollleft-span-和-span-class-ne-text-scrolltop-span\",\"171\":\"19#示例-获取元素相对于视口的位置\",\"172\":\"19#settimeout和setinterval的区别及用法是什么\",\"173\":\"19#settimeout\",\"174\":\"19#setinterval\",\"175\":\"19#区别-3\",\"176\":\"19#停止定时器\",\"177\":\"19#注意事项\",\"178\":\"19#settimeout来实现setinterval\",\"179\":\"19#mysetinterval-函数\",\"180\":\"19#myclearinterval-函数\",\"181\":\"19#使用示例\",\"182\":\"19#注意事项-1\",\"183\":\"19#document-write和innerhtml的区别\",\"184\":\"19#document-write\",\"185\":\"19#innerhtml\",\"186\":\"19#区别-4\",\"187\":\"19#示例-5\",\"188\":\"19#元素拖动如何实现-原理是怎样\",\"189\":\"19#使用原生javascript\",\"190\":\"19#示例代码\",\"191\":\"19#使用html5拖放api\",\"192\":\"19#示例代码-1\",\"193\":\"19#原理\",\"194\":\"19#图片懒加载和预加载实现\",\"195\":\"19#图片懒加载\",\"196\":\"19#图片预加载\",\"197\":\"19#选择懒加载还是预加载\",\"198\":\"19#mouseover和mouseenter的区别\",\"199\":\"19#mouseover\",\"200\":\"19#mouseenter\",\"201\":\"19#区别总结\",\"202\":\"19#示例-6\",\"203\":\"19#new操作符做了哪些事情\",\"204\":\"19#平时是怎么调试-s的\",\"205\":\"19#解释一下webworker\",\"206\":\"19#web-worker-有以下几个使用注意点。\",\"207\":\"19#如何使用web-worker\",\"208\":\"19#navigator-javascript-navigator对象详解\",\"209\":\"19#一、属性和方法概览\",\"210\":\"19#三、注意事项\",\"211\":\"19#三种事件模型是什么\",\"212\":\"19@0\",\"213\":\"20\",\"214\":\"20#虚拟dom\",\"215\":\"20#双端diff算法和快速diff算法\",\"216\":\"20#vue-2的双端diff算法\",\"217\":\"20#vue-3的快速diff算法\",\"218\":\"20#总结\",\"219\":\"20#vue2和vue3有哪些不同\",\"220\":\"20#vue3双向绑定实现\",\"221\":\"20#vue3中的ref、toref、torefs总结\",\"222\":\"20#总结-1\",\"223\":\"20#ref\",\"224\":\"20#toref\",\"225\":\"20#torefs\",\"226\":\"20#总结-2\",\"227\":\"20#computed和watch的区别\",\"228\":\"20#vue-router的路由守卫\",\"229\":\"20#composition-api对比-option-api的优势\",\"230\":\"20@0\",\"231\":\"21\",\"232\":\"21#标题-2\",\"233\":\"21#标题-3\",\"234\":\"21@0\",\"235\":\"22\",\"236\":\"22#标题-2\",\"237\":\"22#标题-3\",\"238\":\"22@0\",\"239\":\"23\",\"240\":\"23#标题-2\",\"241\":\"23#标题-3\",\"242\":\"23@0\",\"243\":\"24\",\"244\":\"24#标题-2\",\"245\":\"24#标题-3\",\"246\":\"24@0\",\"247\":\"25\",\"248\":\"25#标题-2\",\"249\":\"25#标题-3\",\"250\":\"25@0\",\"251\":\"26\",\"252\":\"26#常见的水平垂直居中实现方案\",\"253\":\"26#利用定位-父相子绝-位移\",\"254\":\"26#利用定位-margin-负值\",\"255\":\"26#table布局\",\"256\":\"26#flex弹性布局\",\"257\":\"26#grid网格布局\",\"258\":\"26#拓展\",\"259\":\"26#内联元素居中布局\",\"260\":\"26#块级元素居中布局\",\"261\":\"26#bfc问题\",\"262\":\"26#一、bfc的定义-一个独立的渲染区\",\"263\":\"26#二、触发bfc的条件\",\"264\":\"26#四、bfc的应用场景-https-blog-csdn-net-qq-63299825-article-details-131048599\",\"265\":\"26#_1-避免外边距重叠\",\"266\":\"26#_2-清除浮动\",\"267\":\"26#_3-实现两栏布局\",\"268\":\"26#_4-实现三栏布局\",\"269\":\"26#三、外边距合并问题\",\"270\":\"26#flex-1-是哪些属性的缩写-对应的属性代表什么含义\",\"271\":\"26#隐藏元素-的属性有哪些\",\"272\":\"26@0\",\"273\":\"27\",\"274\":\"27#js-类型判断ttps-blog-csdn-net-mywpython-article-details-134671186\",\"275\":\"27#怎么判断两个对象相等\",\"276\":\"27#总结\",\"277\":\"27#如何判断空对象\",\"278\":\"27#判断空对象\",\"279\":\"27#object-getownpropertynames\",\"280\":\"27#reflect-ownkeys\",\"281\":\"27#总结-1\",\"282\":\"27#数组的foreach和map方法有哪些区别-常用哪些方法去对数组进行增、删、改\",\"283\":\"27#foreach-方法\",\"284\":\"27#map-方法\",\"285\":\"27#增删改方法\",\"286\":\"27#闭包和作用域\",\"287\":\"27#如何实现继承-原型和原型链\",\"288\":\"27#总结-2\",\"289\":\"27#_2-4-原型相关的面试题目\",\"290\":\"27#_2-4-1-说说你对原型和原型链的理解\",\"291\":\"27#六、寄生式组合继承【必会】\",\"292\":\"27#小结\",\"293\":\"27#七、es6-继承\",\"294\":\"27#_7-1-代码实现\",\"295\":\"27#箭头函数和普通函数有什么区别\",\"296\":\"27#浏览器的事件循环机制\",\"297\":\"27#列举宿主对象、内置对象、原生对象并说明其定义\",\"298\":\"27#宿主对象-host-objects\",\"299\":\"27#内置对象-built-in-objects\",\"300\":\"27#原生对象-native-objects\",\"301\":\"27#总结-3\",\"302\":\"27#和-的区别\",\"303\":\"27#严格相等运算符-span-class-ne-text-span\",\"304\":\"27#相等运算符-span-class-ne-text-span\",\"305\":\"27#推荐使用\",\"306\":\"27#例子\",\"307\":\"27#null-undefined的区别\",\"308\":\"27#null\",\"309\":\"27#undefined\",\"310\":\"27#区别\",\"311\":\"27#例子-1\",\"312\":\"27#怎么获取当前日期-年-月-日时-分-秒\",\"313\":\"27#类数组-数组-对象-之间的-关系和互相转换方法\",\"314\":\"27#类数组-伪数组-与数组\",\"315\":\"27#类数组转数组\",\"316\":\"27#数组转类数组\",\"317\":\"27#数组与对象\",\"318\":\"27#数组转对象\",\"319\":\"27#对象转数组\",\"320\":\"27#变量提升是什么-与函数提升的区别\",\"321\":\"27#变量提升\",\"322\":\"27#函数提升\",\"323\":\"27#区别-1\",\"324\":\"27#函数表达式与函数声明的区别\",\"325\":\"27#什么是作用域链-如何延长\",\"326\":\"27#如何实现数组的随机排序\",\"327\":\"27#dom节点的attribute和property有何区别\",\"328\":\"27#attribute\",\"329\":\"27#property\",\"330\":\"27#区别-2\",\"331\":\"27#示例\",\"332\":\"27#dom结构操作怎样添加、移除、移动、复制、创建和查找节点\",\"333\":\"27#添加节点\",\"334\":\"27#移除节点\",\"335\":\"27#移动节点\",\"336\":\"27#替换节点\",\"337\":\"27#复制节点\",\"338\":\"27#创建节点\",\"339\":\"27#查找节点\",\"340\":\"27#什么是事件冒泡-它是如何工作的-如何阻止事件冒泡\",\"341\":\"27#事件冒泡-event-bubbling\",\"342\":\"27#工作原理\",\"343\":\"27#示例-1\",\"344\":\"27#如何阻止事件冒泡\",\"345\":\"27#示例-2\",\"346\":\"27#总结-4\",\"347\":\"27#什么是事件捕获-它是如何工作的\",\"348\":\"27#工作原理-1\",\"349\":\"27#事件传播的三个阶段\",\"350\":\"27#如何使用事件捕获\",\"351\":\"27#示例-3\",\"352\":\"27#如何阻止事件捕获\",\"353\":\"27#总结-5\",\"354\":\"27#dom的事件模型\",\"355\":\"27#dom-事件模型\",\"356\":\"27#事件模型\",\"357\":\"27#dom-level-2事件模型\",\"358\":\"27#事件对象\",\"359\":\"27#事件委托\",\"360\":\"27#事件三要素是什么\",\"361\":\"27#事件对象-event-object\",\"362\":\"27#示例-4\",\"363\":\"27#获取元素位置\",\"364\":\"27#_1-span-class-ne-text-offsetleft-span-和-span-class-ne-text-offsettop-span\",\"365\":\"27#_2-span-class-ne-text-getboundingclientrect-span\",\"366\":\"27#_3-span-class-ne-text-offsetparent-span\",\"367\":\"27#_4-span-class-ne-text-clientleft-span-和-span-class-ne-text-clienttop-span\",\"368\":\"27#_5-span-class-ne-text-scrollleft-span-和-span-class-ne-text-scrolltop-span\",\"369\":\"27#示例-获取元素相对于视口的位置\",\"370\":\"27#settimeout和setinterval的区别及用法是什么\",\"371\":\"27#settimeout\",\"372\":\"27#setinterval\",\"373\":\"27#区别-3\",\"374\":\"27#停止定时器\",\"375\":\"27#注意事项\",\"376\":\"27#settimeout来实现setinterval\",\"377\":\"27#mysetinterval-函数\",\"378\":\"27#myclearinterval-函数\",\"379\":\"27#使用示例\",\"380\":\"27#注意事项-1\",\"381\":\"27#document-write和innerhtml的区别\",\"382\":\"27#document-write\",\"383\":\"27#innerhtml\",\"384\":\"27#区别-4\",\"385\":\"27#示例-5\",\"386\":\"27#元素拖动如何实现-原理是怎样\",\"387\":\"27#使用原生javascript\",\"388\":\"27#示例代码\",\"389\":\"27#使用html5拖放api\",\"390\":\"27#示例代码-1\",\"391\":\"27#原理\",\"392\":\"27#图片懒加载和预加载实现\",\"393\":\"27#图片懒加载\",\"394\":\"27#图片预加载\",\"395\":\"27#选择懒加载还是预加载\",\"396\":\"27#mouseover和mouseenter的区别\",\"397\":\"27#mouseover\",\"398\":\"27#mouseenter\",\"399\":\"27#区别总结\",\"400\":\"27#示例-6\",\"401\":\"27#new操作符做了哪些事情\",\"402\":\"27#平时是怎么调试-s的\",\"403\":\"27#解释一下webworker\",\"404\":\"27#web-worker-有以下几个使用注意点。\",\"405\":\"27#如何使用web-worker\",\"406\":\"27#navigator-javascript-navigator对象详解\",\"407\":\"27#一、属性和方法概览\",\"408\":\"27#三、注意事项\",\"409\":\"27#三种事件模型是什么\",\"410\":\"27@0\",\"411\":\"28\",\"412\":\"28#虚拟dom\",\"413\":\"28#双端diff算法和快速diff算法\",\"414\":\"28#vue-2的双端diff算法\",\"415\":\"28#vue-3的快速diff算法\",\"416\":\"28#总结\",\"417\":\"28#vue2和vue3有哪些不同\",\"418\":\"28#vue3双向绑定实现\",\"419\":\"28#vue3中的ref、toref、torefs总结\",\"420\":\"28#总结-1\",\"421\":\"28#ref\",\"422\":\"28#toref\",\"423\":\"28#torefs\",\"424\":\"28#总结-2\",\"425\":\"28#computed和watch的区别\",\"426\":\"28#vue-router的路由守卫\",\"427\":\"28#composition-api对比-option-api的优势\",\"428\":\"28@0\",\"429\":\"29\",\"430\":\"29#标题-2\",\"431\":\"29#标题-3\",\"432\":\"29@0\",\"433\":\"30\",\"434\":\"30#标题-2\",\"435\":\"30#标题-3\",\"436\":\"30@0\",\"437\":\"31\",\"438\":\"31#标题-2\",\"439\":\"31#标题-3\",\"440\":\"31@0\",\"441\":\"32\",\"442\":\"32#标题-2\",\"443\":\"32#标题-3\",\"444\":\"32@0\",\"445\":\"33\",\"446\":\"33#标题-2\",\"447\":\"33#标题-3\",\"448\":\"33@0\",\"449\":\"34\",\"450\":\"35\",\"451\":\"36\",\"452\":\"37\",\"453\":\"38\",\"454\":\"39\",\"455\":\"40\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,11],\"1\":[1,2],\"2\":[1,30],\"3\":[2,7],\"4\":[1,6],\"5\":[null,null,1],\"6\":[2],\"7\":[null,null,1],\"8\":[1,7],\"9\":[1,6],\"10\":[null,null,2],\"11\":[2],\"12\":[null,null,1],\"13\":[4,40],\"14\":[null,null,1],\"15\":[null,null,1],\"16\":[2,10],\"17\":[null,null,1],\"18\":[null,null,1],\"19\":[1,44],\"20\":[null,null,1],\"21\":[null,null,1],\"22\":[2,32],\"23\":[2,19],\"24\":[2,25],\"25\":[2,18],\"26\":[2,16],\"27\":[2,18],\"28\":[2,2],\"29\":[1,2],\"30\":[1,9],\"31\":[2,2],\"32\":[1,26],\"33\":[1,6],\"34\":[2,8],\"35\":[3,4],\"36\":[1],\"37\":[null,null,1],\"38\":[null,null,1],\"39\":[2,10],\"40\":[2,20],\"41\":[2,27],\"42\":[2,30],\"43\":[1,29],\"44\":[null,null,1],\"45\":[null,null,3],\"46\":[1,6],\"47\":[null,null,1],\"48\":[2],\"49\":[null,null,1],\"50\":[1,7],\"51\":[1,6],\"52\":[null,null,2],\"53\":[1],\"54\":[1,10],\"55\":[4,31],\"56\":[2,25],\"57\":[1,25],\"58\":[1,21],\"59\":[1,21],\"60\":[1,10],\"61\":[1,35],\"62\":[1,50],\"63\":[1,10],\"64\":[3,34],\"65\":[2,26],\"66\":[1],\"67\":[1,39],\"68\":[1,32],\"69\":[2,25],\"70\":[2,32],\"71\":[2,29],\"72\":[4,49],\"73\":[2,105],\"74\":[null,null,1],\"75\":[1,18],\"76\":[1,81],\"77\":[2,5],\"78\":[1,69],\"79\":[2,30],\"80\":[1,20],\"81\":[3,32],\"82\":[3,53],\"83\":[1,72],\"84\":[4,12],\"85\":[2,29],\"86\":[2,32],\"87\":[1,65],\"88\":[1,129],\"89\":[3,16],\"90\":[1,14],\"91\":[3],\"92\":[4,50],\"93\":[4,50],\"94\":[1,15],\"95\":[3],\"96\":[3,100],\"97\":[1,81],\"98\":[1,19],\"99\":[3,12],\"100\":[4,28],\"101\":[5,30],\"102\":[4,16],\"103\":[1,12],\"104\":[3,12],\"105\":[2,27],\"106\":[2,29],\"107\":[1,15],\"108\":[1,28],\"109\":[2,27],\"110\":[1,22],\"111\":[1,18],\"112\":[1,30],\"113\":[1,34],\"114\":[7,69],\"115\":[5,7],\"116\":[3,13],\"117\":[1,28],\"118\":[1,15],\"119\":[1,3],\"120\":[1,28],\"121\":[1,43],\"122\":[3,9],\"123\":[1,51],\"124\":[1,32],\"125\":[1,20],\"126\":[1,44],\"127\":[3,6],\"128\":[2,74],\"129\":[2,23],\"130\":[1,36],\"131\":[1,33],\"132\":[1,29],\"133\":[1,33],\"134\":[6,12],\"135\":[1,18],\"136\":[1,17],\"137\":[1,10],\"138\":[1,20],\"139\":[1,28],\"140\":[1,19],\"141\":[1,32],\"142\":[4,5],\"143\":[4,9],\"144\":[1,15],\"145\":[1,40],\"146\":[1,13],\"147\":[1,29],\"148\":[1,14],\"149\":[3,40],\"150\":[1,8],\"151\":[1,8],\"152\":[1,13],\"153\":[1,29],\"154\":[1,27],\"155\":[1,14],\"156\":[1,1],\"157\":[2,11],\"158\":[1,99],\"159\":[3,80],\"160\":[1,46],\"161\":[1,69],\"162\":[2,34],\"163\":[4,30],\"164\":[1,36],\"165\":[2,8],\"166\":[2,19],\"167\":[2,31],\"168\":[2,25],\"169\":[2,15],\"170\":[2,11],\"171\":[2,41],\"172\":[2,26],\"173\":[1,32],\"174\":[1,35],\"175\":[1,24],\"176\":[1,36],\"177\":[1,20],\"178\":[1,42],\"179\":[2,35],\"180\":[2,23],\"181\":[1,12],\"182\":[1,22],\"183\":[3,16],\"184\":[2,23],\"185\":[1,19],\"186\":[1,33],\"187\":[1,29],\"188\":[3,35],\"189\":[1,13],\"190\":[1,31],\"191\":[1,21],\"192\":[1,34],\"193\":[1,33],\"194\":[1,27],\"195\":[1,40],\"196\":[1,49],\"197\":[2,13],\"198\":[1,20],\"199\":[1,14],\"200\":[1,17],\"201\":[1,16],\"202\":[1,39],\"203\":[1,92],\"204\":[2,128],\"205\":[1,23],\"206\":[4,42],\"207\":[2,188],\"208\":[3,18],\"209\":[2,51],\"210\":[2,39],\"211\":[2,103],\"212\":[null,null,1],\"213\":[1],\"214\":[1,23],\"215\":[1,11],\"216\":[2,13],\"217\":[2,21],\"218\":[1,11],\"219\":[1,110],\"220\":[1,72],\"221\":[3],\"222\":[1,31],\"223\":[1,51],\"224\":[1,32],\"225\":[1,30],\"226\":[1,19],\"227\":[1,18],\"228\":[2,61],\"229\":[4,12],\"230\":[null,null,1],\"231\":[1],\"232\":[2,2],\"233\":[2,2],\"234\":[null,null,1],\"235\":[2],\"236\":[2,2],\"237\":[2,2],\"238\":[null,null,2],\"239\":[1,4],\"240\":[2,2],\"241\":[2,2],\"242\":[null,null,1],\"243\":[1],\"244\":[2,2],\"245\":[2,2],\"246\":[null,null,1],\"247\":[1],\"248\":[2,2],\"249\":[2,2],\"250\":[null,null,1],\"251\":[1],\"252\":[1,10],\"253\":[4,31],\"254\":[2,25],\"255\":[1,25],\"256\":[1,21],\"257\":[1,21],\"258\":[1,10],\"259\":[1,35],\"260\":[1,50],\"261\":[1,10],\"262\":[3,34],\"263\":[2,26],\"264\":[1],\"265\":[1,39],\"266\":[1,32],\"267\":[2,25],\"268\":[2,32],\"269\":[2,29],\"270\":[4,49],\"271\":[2,105],\"272\":[null,null,1],\"273\":[1,18],\"274\":[1,81],\"275\":[2,5],\"276\":[1,69],\"277\":[2,30],\"278\":[1,20],\"279\":[3,32],\"280\":[3,53],\"281\":[1,72],\"282\":[4,12],\"283\":[2,29],\"284\":[2,32],\"285\":[1,65],\"286\":[1,129],\"287\":[3,16],\"288\":[1,14],\"289\":[3],\"290\":[4,50],\"291\":[4,50],\"292\":[1,15],\"293\":[3],\"294\":[3,100],\"295\":[1,81],\"296\":[1,19],\"297\":[3,12],\"298\":[4,28],\"299\":[5,30],\"300\":[4,16],\"301\":[1,12],\"302\":[3,12],\"303\":[2,27],\"304\":[2,29],\"305\":[1,15],\"306\":[1,28],\"307\":[2,27],\"308\":[1,22],\"309\":[1,18],\"310\":[1,30],\"311\":[1,34],\"312\":[7,69],\"313\":[5,7],\"314\":[3,13],\"315\":[1,28],\"316\":[1,15],\"317\":[1,3],\"318\":[1,28],\"319\":[1,43],\"320\":[3,9],\"321\":[1,51],\"322\":[1,32],\"323\":[1,20],\"324\":[1,44],\"325\":[3,6],\"326\":[2,74],\"327\":[2,23],\"328\":[1,36],\"329\":[1,33],\"330\":[1,29],\"331\":[1,33],\"332\":[6,12],\"333\":[1,18],\"334\":[1,17],\"335\":[1,10],\"336\":[1,20],\"337\":[1,28],\"338\":[1,19],\"339\":[1,32],\"340\":[4,5],\"341\":[4,9],\"342\":[1,15],\"343\":[1,40],\"344\":[1,13],\"345\":[1,29],\"346\":[1,14],\"347\":[3,40],\"348\":[1,8],\"349\":[1,8],\"350\":[1,13],\"351\":[1,29],\"352\":[1,27],\"353\":[1,14],\"354\":[1,1],\"355\":[2,11],\"356\":[1,99],\"357\":[3,80],\"358\":[1,46],\"359\":[1,69],\"360\":[2,34],\"361\":[4,30],\"362\":[1,36],\"363\":[2,8],\"364\":[2,19],\"365\":[2,31],\"366\":[2,25],\"367\":[2,15],\"368\":[2,11],\"369\":[2,41],\"370\":[2,26],\"371\":[1,32],\"372\":[1,35],\"373\":[1,24],\"374\":[1,36],\"375\":[1,20],\"376\":[1,42],\"377\":[2,35],\"378\":[2,23],\"379\":[1,12],\"380\":[1,22],\"381\":[3,16],\"382\":[2,23],\"383\":[1,19],\"384\":[1,33],\"385\":[1,29],\"386\":[3,35],\"387\":[1,13],\"388\":[1,31],\"389\":[1,21],\"390\":[1,34],\"391\":[1,33],\"392\":[1,27],\"393\":[1,40],\"394\":[1,49],\"395\":[2,13],\"396\":[1,20],\"397\":[1,14],\"398\":[1,17],\"399\":[1,16],\"400\":[1,39],\"401\":[1,92],\"402\":[2,128],\"403\":[1,23],\"404\":[4,42],\"405\":[2,188],\"406\":[3,18],\"407\":[2,51],\"408\":[2,39],\"409\":[2,103],\"410\":[null,null,1],\"411\":[1],\"412\":[1,23],\"413\":[1,11],\"414\":[2,13],\"415\":[2,21],\"416\":[1,11],\"417\":[1,110],\"418\":[1,72],\"419\":[3],\"420\":[1,31],\"421\":[1,51],\"422\":[1,32],\"423\":[1,30],\"424\":[1,19],\"425\":[1,18],\"426\":[2,61],\"427\":[4,12],\"428\":[null,null,1],\"429\":[1],\"430\":[2,2],\"431\":[2,2],\"432\":[null,null,1],\"433\":[2],\"434\":[2,2],\"435\":[2,2],\"436\":[null,null,2],\"437\":[1,4],\"438\":[2,2],\"439\":[2,2],\"440\":[null,null,1],\"441\":[1],\"442\":[2,2],\"443\":[2,2],\"444\":[null,null,1],\"445\":[1],\"446\":[2,2],\"447\":[2,2],\"448\":[null,null,1],\"449\":[1,3],\"450\":[1],\"451\":[1],\"452\":[1],\"453\":[1],\"454\":[1],\"455\":[1]},\"averageFieldLength\":[1.7032496993306767,28.57283860882305,0.7610071069701319],\"storedFields\":{\"0\":{\"h\":\"主页\",\"t\":[\"这是一个博客主页的案例。\",\"要使用此布局，你应该在页面前端设置 layout: BlogHome 和 home: true。\",\"相关配置文档请见 博客主页。\"]},\"1\":{\"h\":\"介绍页\",\"t\":[\"将你的个人介绍和档案放置在此处。\"]},\"2\":{\"h\":\"主页\",\"t\":[\"This is a blog home page demo.\",\"To use this layout, you should set both layout: BlogHome and home: true in the page front matter.\",\"For related configuration docs, please see blog homepage.\"]},\"3\":{\"h\":\"Intro Page\",\"t\":[\"Place your introduction and profile here.\"]},\"4\":{\"h\":\"CSDN\",\"t\":[\"地址 https://www.csdn.net/\"]},\"5\":{\"c\":[\"csdn\"]},\"6\":{\"h\":\"Flow-us\"},\"7\":{\"c\":[\"flowus\"]},\"8\":{\"h\":\"GitHub\",\"t\":[\"地址:https://github.com/weijordanNW/blog/actions\"]},\"9\":{\"h\":\"语雀\",\"t\":[\"地址 https://www.yuque.com/dashboard\"]},\"10\":{\"c\":[\"文章\",\"语雀\"]},\"11\":{\"h\":\"Features demo\"},\"12\":{\"c\":[\"Guide\"]},\"13\":{\"h\":\"Disabling layout and features\",\"t\":[\"You can disable some function and layout on the page by setting the Frontmatter of the page.\",\"This page is an demo that disables the following features:\",\"Navbar\",\"Sidebar\",\"Breadcrumb\",\"Page information\",\"Contributors\",\"Edit link\",\"Update time\",\"Prev/Next link\",\"Comment\",\"Footer\",\"Back to top button\"]},\"14\":{\"c\":[\"Guide\"]},\"15\":{\"c\":[\"disable\"]},\"16\":{\"h\":\"Encryption Article\",\"t\":[\"The actual article content.\",\"Paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text.\",\"Paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text.\"]},\"17\":{\"c\":[\"Guide\"]},\"18\":{\"c\":[\"encryption\"]},\"19\":{\"h\":\"Layout\",\"t\":[\"The layout contains:\",\"Navbar\",\"Sidebar\",\"Footer\",\"Also each page can contain:\",\"BreadCrumb\",\"Title and information\",\"TOC (Table of Contents)\",\"Meta information including update time and contributors\",\"Comments\",\"The theme also has the following elements:\",\"Darkmode button\",\"Back to top button\",\"Print button\",\"You can customize them in theme options and page frontmatter.\"]},\"20\":{\"c\":[\"Guide\"]},\"21\":{\"c\":[\"Layout\"]},\"22\":{\"h\":\"Markdown Enhance\",\"t\":[\"VuePress basically generate pages from Markdown files. So you can use it to generate documentation or blog sites easily.\",\"You should create and write Markdown files, so that VuePress can convert them to different pages according to file structure.\"]},\"23\":{\"h\":\"Markdown Introduction\",\"t\":[\"If you are a new learner and don't know how to write Markdown, please read Markdown Intro and Markdown Demo.\"]},\"24\":{\"h\":\"Markdown Config\",\"t\":[\"VuePress introduce configuration for each markdown page using Frontmatter.\",\"Frontmatter\",\"Frontmatter is an important concept in VuePress. If you don't know it, you need to read Frontmatter Introduction.\"]},\"25\":{\"h\":\"Markdown Extension\",\"t\":[\"The Markdown content in VuePress will be parsed by markdown-it, which supports syntax extensions via markdown-it plugins.\"]},\"26\":{\"h\":\"VuePress Enhancement\",\"t\":[\"To enrich document writing, VuePress has extended Markdown syntax.\",\"For these extensions, please read Markdown extensions in VuePress.\"]},\"27\":{\"h\":\"Theme Enhancement\",\"t\":[\"By using vuepress-plugin-md-enhance, the theme extends more Markdown syntax and provides richer writing functions.\"]},\"28\":{\"h\":\"Code Tabs\",\"t\":[\"View Detail\"]},\"29\":{\"h\":\"Tabs\",\"t\":[\"View Detail\"]},\"30\":{\"h\":\"Footnote\",\"t\":[\"This text has footnote[^first].\",\"[^first]: This is footnote content\",\"View Detail\"]},\"31\":{\"h\":\"Include files\",\"t\":[\"View Detail\"]},\"32\":{\"h\":\"TeX\",\"t\":[\"$$ \\\\frac {\\\\partial^r} {\\\\partial \\\\omega^r} \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) = \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) \\\\left{(\\\\log y)^r + \\\\sum_{i=1}^r \\\\frac {(-1)^i r \\\\cdots (r-i+1) (\\\\log y)^{r-i}} {\\\\omega^i} \\\\right} $$\",\"View Detail\"]},\"33\":{\"h\":\"Tasklist\",\"t\":[\" Plan A\",\" Plan B\",\"View Detail\"]},\"34\":{\"h\":\"Image Enhancement\",\"t\":[\"Support setting color scheme and size.\",\"View Detail\"]},\"35\":{\"h\":\"Superscript and Subscript\",\"t\":[\"19th H2O\",\"View Detail\"]},\"36\":{\"h\":\"Component\"},\"37\":{\"c\":[\"Guide\"]},\"38\":{\"c\":[\"Markdown\"]},\"39\":{\"h\":\"Page Config\",\"t\":[\"Content before more comment is regarded as page excerpt.\"]},\"40\":{\"h\":\"Page Title\",\"t\":[\"The first H1 title in Markdown will be regarded as page title.\",\"You can also set title in Markdown's Frontmatter:\",\"--- title: Page Title ---\"]},\"41\":{\"h\":\"Page Information\",\"t\":[\"You can set page information in Markdown's Frontmatter.\",\"The author is Ms.Hope.\",\"The writing date is January 1, 2020\",\"Category is \\\"Guide\\\"\",\"Tags are \\\"Page Config\\\" and \\\"Guide\\\"\"]},\"42\":{\"h\":\"Page Content\",\"t\":[\"You are free to write your Markdown here.\",\"Assets\",\"You can place images besides your Markdown files nd use relative links.\",\"For images in .vuepress/public directory, please use absolute links (i.e.: starting with /).\"]},\"43\":{\"h\":\"Components\",\"t\":[\"Each markdown page is converted into a Vue component, which means you can use Vue syntax in Markdown:\",\"{{ 1 + 1 }}\",\"{{ i }}\",\"You can also create and import your own components.\"]},\"44\":{\"c\":[\"Guide\"]},\"45\":{\"c\":[\"Page config\",\"Guide\"]},\"46\":{\"h\":\"CSDN\",\"t\":[\"地址 https://www.csdn.net/\"]},\"47\":{\"c\":[\"csdn\"]},\"48\":{\"h\":\"Flow-us\"},\"49\":{\"c\":[\"flowus\"]},\"50\":{\"h\":\"GitHub\",\"t\":[\"地址:https://github.com/weijordanNW/blog/actions\"]},\"51\":{\"h\":\"语雀\",\"t\":[\"地址 https://www.yuque.com/dashboard\"]},\"52\":{\"c\":[\"文章\",\"语雀\"]},\"53\":{\"h\":\"Html5和CSS3\"},\"54\":{\"h\":\"常见的水平垂直居中实现方案\",\"t\":[\"https://blog.csdn.net/m0_70705683/article/details/135777987\",\"方案总结\",\"方案总结\"]},\"55\":{\"h\":\"利用定位(父相子绝) + 位移\",\"t\":[\"-- 父相子绝 + 子 margin:auto;\",\"-- 父相子绝 + 子 top,left 位移50%; transform:translate(-50%,-50%);\",\"<style> .father{ //width,height,其他省略 position: relative; } .son{ position: absolute; top:0; left:0; right:0; bottom:0; margin:auto; } </style> <div class=\\\"father\\\"> <div class=\\\"son\\\"></div> </div>\"]},\"56\":{\"h\":\"利用定位+margin:负值\",\"t\":[\"<style> .father { position: relative; width: 200px; height: 200px; background: skyblue; } .son { position: absolute; top: 50%; left: 50%; margin-left:-50px; margin-top:-50px; width: 100px; height: 100px; background: red; } </style> <div class=\\\"father\\\"> <div class=\\\"son\\\"></div> </div>\"]},\"57\":{\"h\":\"table布局\",\"t\":[\"<style> .father { //width,height,其他省略 display: table-cell; text-align: center;//水平居中 vertical-align: middle;//垂直居中 } .son { //width,height,其他省略 display: inline-block; } </style> <div class=\\\"father\\\"> <div class=\\\"son\\\"></div> </div>\"]},\"58\":{\"h\":\"flex弹性布局\",\"t\":[\"<style> .father { display: flex; justify-content: center;//主轴居中,默认水平居中 align-items: center;//交叉轴居中,默认垂直居中 } .son { } </style> <div class=\\\"father\\\"> <div class=\\\"son\\\"></div> </div>\"]},\"59\":{\"h\":\"grid网格布局\",\"t\":[\"<style> .father { display: grid; justify-content: center;//主轴居中,默认水平居中 align-items: center;//交叉轴居中,默认垂直居中 } .son { } </style> <div class=\\\"father\\\"> <div class=\\\"son\\\"></div> </div>\"]},\"60\":{\"h\":\"拓展\",\"t\":[\"在CSS中实现元素的水平和垂直居中布局是一个常见需求，不同的元素类型（内联元素和块级元素）和布局方法（如Flexbox、Grid、定位等）提供了多种解决方案。以下是对您提供的文件内容的总结：\"]},\"61\":{\"h\":\"内联元素居中布局\",\"t\":[\"水平居中：\",\"**行内元素可以通过设置父元素的 **<span class=\\\"ne-text\\\">text-align: center;</span> 来实现水平居中。\",\"**使用Flexbox布局，可以设置父元素为 **<span class=\\\"ne-text\\\">display: flex;</span> 并使用 <span class=\\\"ne-text\\\">justify-content: center;</span> 来实现水平居中。\",\"垂直居中：\",\"对于单行文本，可以通过设置父元素的高度等于行高（<span class=\\\"ne-text\\\">height === line-height</span>）来实现垂直居中。\",\"**对于多行文本，可以使用表格单元格布局，将父元素设置为 **<span class=\\\"ne-text\\\">display: table-cell;</span> 并使用 <span class=\\\"ne-text\\\">vertical-align: middle;</span> 来实现垂直居中。\"]},\"62\":{\"h\":\"块级元素居中布局\",\"t\":[\"水平居中：\",\"**对于已定义宽度的元素，可以通过设置 **<span class=\\\"ne-text\\\">margin: 0 auto;</span> 来实现水平居中。\",\"**使用绝对定位，可以将元素的 **<span class=\\\"ne-text\\\">left</span> 属性设置为 <span class=\\\"ne-text\\\">50%</span>，然后使用 <span class=\\\"ne-text\\\">margin-left</span> 设置为元素宽度的一半的负值来实现水平居中。\",\"垂直居中：\",\"**使用绝对定位，可以设置元素的 **<span class=\\\"ne-text\\\">top</span>、<span class=\\\"ne-text\\\">left</span>、<span class=\\\"ne-text\\\">margin-top</span> 和 <span class=\\\"ne-text\\\">margin-left</span>（如果已定义高度）来实现垂直居中。\",\"**通过设置父元素为 **<span class=\\\"ne-text\\\">display: table-cell;</span> 并使用 <span class=\\\"ne-text\\\">vertical-align: middle;</span> 可以实现垂直居中。\",\"**使用 **<span class=\\\"ne-text\\\">transform: translate(x, y);</span> 可以在不知道元素宽高的情况下实现垂直居中。\",\"使用Flexbox（<span class=\\\"ne-text\\\">display: flex;</span>）和Grid（<span class=\\\"ne-text\\\">display: grid;</span>）也可以实现垂直居中，但Grid的兼容性相对较差。\"]},\"63\":{\"h\":\"BFC问题\",\"t\":[\"思维导图\",\"https://blog.csdn.net/qq_63299825/article/details/131048599\"]},\"64\":{\"h\":\"的定义 (一个独立的渲染区)\",\"t\":[\"BFC（Block Formatting Context），即块级格式化上下文，它是页面中的一块渲染区域，并且有一套属于自己的渲染规则,\",\"1.内部的盒子会在垂直方向上一个接一个的放置\",\"2.对于同一个BFC的俩个相邻的盒子的margin会发生重叠，与方向无关。\",\"3.每个元素的左外边距与包含块的左边界相接触（从左到右），即使浮动元素也是如此\",\"4.BFC的区域不会与float的元素区域重叠\",\"5.计算BFC的高度时，浮动子元素也参与计算\",\"6.BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素，反之亦然\",\"BFC目的是形成一个相对于外界完全独立的空间，让内部的子元素不会影响到外部的元素\",\"在页面布局阶段，往往会因为BFC问题导致 页面布局发生错乱，如外边距合并问题，元素高度丢失，两栏布局没有实现自适应。\"]},\"65\":{\"h\":\"二、触发BFC的条件\",\"t\":[\"1.根元素，即HTML元素\",\"2.浮动元素：float值为left、right\",\"3.overflow值不为 visible，为 auto、scroll、hidden\",\"4.display的值为除了none以外的全部值, inline-block、inltable-cell、table-caption、table、inline-table、flex、inline-flex、grid、inline-grid\",\"5.position的值为absolute或fixed\"]},\"66\":{\"h\":\")\"},\"67\":{\"h\":\"\",\"t\":[\"当兄弟盒子设置 同时给兄弟元素设置一个下外边距同时设置一个上外边距,发生外边距合并\",\" <style> div:first-child { width: 100px; height: 100px; background: red; margin-bottom: 10px; } div:last-child { width: 100px; height: 100px; background: green; margin-top: 20px; } </style> <div class=\\\"cube\\\"></div> <div class=\\\"cube\\\"></div>\",\"**最佳方法:**当我们 给第一个盒子一个父盒子，并触发父盒子生成一个BFC,那么两个div就不属于同一个BFC,则不会出现外边距重叠问题。\",\" <style> .cube { width: 100px; height: 100px; background-color: red; margin-bottom: 10px; } .cube1:last-child { width: 100px; height: 100px; background-color: red; margin-top: 20px; } .container { /* 开启bfc属性 */ overflow: hidden; } </style> <div class=\\\"container\\\"> <div class=\\\"cube\\\"></div> </div> <div class=\\\"cube1\\\"></div>\"]},\"68\":{\"h\":\"\",\"t\":[\"在父元素parent计算高度时，并没有计算子元素child的高度。\",\" <style> .parent { border: 10px solid red; } .child { width: 100px; height: 100px; background-color: blue; /* 浮动效果 */ float: left; } </style> <div class=\\\"parent\\\"> <div class=\\\"child\\\"></div> </div>\",\"我们给父元素生成BFC后，父元素在计算高度时就会将浮动子元素child的高度也计算到其中\",\" .parent { border: 10px solid red; /* 开启bfc overflow hidden auto */ overflow: hidden; }\"]},\"69\":{\"h\":\"3.实现两栏布局\",\"t\":[\"左侧设置宽度，右边自适应，右边开启BFC\",\" <style> .left{ width: 300px; background-color: red; float: left; } .right{ background-color: blue; /* 开启bfc */ overflow: hidden; } </style> <div class=\\\"left\\\">左侧定宽</div> <div class=\\\"right\\\">右侧自适应右侧自适应右侧自适应右侧自适应 右侧自适应右侧自适应右侧自适应右侧自适应右侧自适应右侧自适应 右侧自适应右侧自适应右侧自适应右侧自适应右侧自适应右侧自适应 右侧自适应右侧自适应右侧自适应右侧自适应右侧自适应右侧自适应 </div>\",\"实现了两栏布局且右边是自适应\"]},\"70\":{\"h\":\"4.实现三栏布局\",\"t\":[\"思路:左右两边固定宽度，给左盒子float:left;给右盒子float:right，给中间盒子开启BFC,实现左右固定宽度，中间自适应的效果\",\" <style> /* 三列布局 左侧右侧定宽 中间自适应 */ .left, .right { width: 100px; height: 50px; background-color: red; } .left { float: left; } .right { float: right; } .center { height: 100px; background-color: blue; /* 开启bfc */ overflow: hidden; } </style> <div class=\\\"left\\\"></div> <div class=\\\"right\\\"></div> <div class=\\\"center\\\"></div>\"]},\"71\":{\"h\":\"三、外边距合并问题\",\"t\":[\".兄弟级外边距合并\",\"** 合并出现原因:同时给兄弟元素设置一个下外边距同时设置一个上外边距,发生外边距合并**\",\"** 合并解决方案:**\",\"** 1.只给其中一个兄弟元素设置外边距**\",\"** 2.给下边外边距开启BFC**\",\"** 1.display:inline-blick/flex**\",\"** 2.position:absolute/fixed**\",\"** 3.float:left**\",\"** 3.给上边兄弟元素设置一个父元素 给父元素开启BFC**\",\"** overflow hidden/auto **\",\"** 2.父子级外边距合并**\",\"** 合并出现原因:同时给父子元素设置同一方向的一个外边距**\",\"** 合并解决方案:**\",\"** 1.给父元素设置padding属性**\",\"** 2.给父元素设置border边框**\"]},\"72\":{\"h\":\"flex:1:是哪些属性的缩写，对应的属性代表什么含义\",\"t\":[\"flex:1 属性时，\",\"代表 flex-grow: 1、flex-shirnk：1、flex-basis：0%\",\"思维导图\",\"flex:1实际代表的是三个属性的简写\",\"flex-grow是用来增大盒子的，比如，当父盒子的宽度大于子盒子的宽度，父盒子的剩余空间可以利用flex-grow来设置子盒子增大的占比\",\"flex-shrink用来设置子盒子超过父盒子的宽度后，超出部分进行缩小的取值比例\",\"flex-basis是用来设置盒子的基准宽度，并且basis和width同时存在basis会把width干掉\",\"所以flex：1；的逻辑就是用flex-basis把width干掉，然后再用flex-grow和flex-shrink增大的增大缩小的缩小，达成最终的效果**。**\",\"<span class=\\\"ne-text\\\">flex-basis</span>：指定元素在主轴的大小，可以等同 <span class=\\\"ne-text\\\">width</span>或者 <span class=\\\"ne-text\\\">height</span>，优先级要高于 <span class=\\\"ne-text\\\">width</span> 和 <span class=\\\"ne-text\\\">height</span>\",\"https://www.cnblogs.com/mmzuo-798/p/17246920.html\"]},\"73\":{\"h\":\"隐藏元素 的属性有哪些\",\"t\":[\"思维导图\",\"在CSS中，隐藏元素可以通过多种方式实现，每种方式都有其特定的用途和效果。以下是一些常用的方法来隐藏元素：\",\"<span class=\\\"ne-text\\\">display: none;</span>：\",\"完全从文档流中移除元素，不占据任何空间。\",\"元素不会被显示，也不会影响到其他元素的布局。\",\"<span class=\\\"ne-text\\\">visibility: hidden;</span>：\",\"元素在页面上不可见，但它仍占据着原来的空间。\",\"**与 **<span class=\\\"ne-text\\\">display: none;</span> 不同，使用 <span class=\\\"ne-text\\\">visibility: hidden;</span> 隐藏的元素仍会影响布局，因为它仍占据空间。\",\"<span class=\\\"ne-text\\\">opacity: 0;</span>：\",\"将元素的透明度设置为0，使其完全透明，从而看不见。\",\"元素仍然占据空间，并且可以响应交互（如点击）。\",\"<span class=\\\"ne-text\\\">z-index: -1;</span>：\",\"**通过将 **<span class=\\\"ne-text\\\">z-index</span> 属性设置为负值，可以使元素被其他元素覆盖，从而在视觉上“隐藏”。\",\"元素仍然可见，如果页面上没有其他元素覆盖它，或者在某些情况下，它可能会重新可见。\",\"<span class=\\\"ne-text\\\">position: absolute;</span> 与 <span class=\\\"ne-text\\\">left</span>/<span class=\\\"ne-text\\\">top</span> 属性结合：\",\"**将元素通过绝对定位移出视口外，例如设置 **<span class=\\\"ne-text\\\">left: -9999px;</span> 或 <span class=\\\"ne-text\\\">top: -9999px;</span>。\",\"元素不可见，但仍然占据空间。\",\"<span class=\\\"ne-text\\\">clip-path: inset(100%);</span> 或 <span class=\\\"ne-text\\\">clip: rect(0, 0, 0, 0);</span>：\",\"**使用 **<span class=\\\"ne-text\\\">clip-path</span> 或 <span class=\\\"ne-text\\\">clip</span> 属性将元素的可视区域设置为0，从而在视觉上隐藏元素。\",\"元素不可见，且不占据空间。\",\"<span class=\\\"ne-text\\\">height: 0; width: 0;</span>：\",\"将元素的宽度和高度设置为0，使其不可见。\",\"元素不可见，且不占据空间，除非有边框或内边距。\",\"<span class=\\\"ne-text\\\">overflow: hidden;</span>：\",\"**当与 **<span class=\\\"ne-text\\\">height</span> 或 <span class=\\\"ne-text\\\">width</span> 属性结合使用时，可以隐藏元素内溢出的内容。\",\"元素本身仍然可见，但超出部分的内容不可见。\",\"**使用 <span class=\\\"ne-text\\\">aria-hidden=\\\"true\\\"</span> ** 属性：\",\"这是一个无障碍性（accessibility）相关的属性，用于告知辅助技术（如屏幕阅读器）忽略该元素。\",\"元素在视觉上仍然可见，但不会传达给使用辅助技术的用户。\",\"<span class=\\\"ne-text\\\">pointer-events: none;</span>：\",\"禁止元素响应指针事件，如点击、悬停等。\",\"元素在视觉上仍然可见，但用户无法与之交互。\",\"选择哪种方法取决于你的具体需求，比如是否需要元素继续参与文档流的布局，是否需要保持可访问性，或者是否需要元素在某些情况下重新可见。\"]},\"74\":{\"c\":[\"前端\"]},\"75\":{\"h\":\"JavaScript\",\"t\":[\"Js相关\",\"Js的基础类型，typeof和instanceof的区别\",\"数组的forEach和map方法有哪些区别？常用哪些方法去对数组进行增、删、改\",\"闭包和作用域\",\"实现一个类以关键字new功能的函数\",\"如何实现继承（原型和原型链）\",\"箭头函数和普通函数有什么区别\",\"迭代器(iterator)接口和生成器(generator)函数的关系\",\"浏览器的事件循环机制\"]},\"76\":{\"h\":\"\",\"t\":[\"Object.prototype.toString.call\",\"Object.prototype.toString.call方法返回各数据类型的[object xxx]形式：\",\"去掉Object.prototype.toString.call方法返回结果中的\\\"[object\\\"，只保留具体类型：\",\" function getType(data) { return Object.prototype.toString.call(data).replace(/\\\\[object\\\\s+(.+)\\\\]/, '$1' ).toLowerCase() }\",\"四、Object.prototype.toString.call\",\"Object.prototype.toString.call方法返回各数据类型的[object xxx]形式：\",\" const str = 'testme' Object.prototype.toString.call(str) // [object String] const num = 123 Object.prototype.toString.call(num) // [object Number] const bol = true Object.prototype.toString.call(bol) // [object Boolean] const sy = Symbol('a') Object.prototype.toString.call(sy) // [object Symbol] const bi = BigInt(\\\"12345678910111213\\\") Object.prototype.toString.call(bi) // [object BigInt] Object.prototype.toString.call(null) // [object Null] Object.prototype.toString.call(undefined) // [object Undefined] const arr = [1,5,7] Object.prototype.toString.call(arr) // [object Array] const obj = {a:3} Object.prototype.toString.call(obj) // [object Object] function Man(name,age) { this.name = name this.age = age } Object.prototype.toString.call(Man) // [object Function] const man = new Man('Lily', 12) Object.prototype.toString.call(man) // [object Object]\",\"1. 使用typeof判断基本类型： const str = 'testme' typeof str // string const num = 123 typeof num // number const bol = true typeof bol // boolean const nu = null type nu // object typeof undefVar // undefined const sy = Symbol('a') typeof sy // symbol const bi = BigInt(\\\"12345678910111213\\\") typeof bi // bigint 2. 使用typeof判断引用类型： const arr = [1,5,7] typeof arr // object const obj = {a:3} typeof obj // object function Man(name,age) { this.name = name this.age = age } typeof Man // function const man = new Man('Lily', 12) typeof man // object\",\"二、instanceof\",\"使用方法: A instanceof B\",\" const arr = [1,5,7] arr instanceof Array // true const obj = {a:3} obj instanceof Object // true obj instanceof Array // false function Man(name,age) { this.name = name this.age = age } Man instanceof Function // true const man = new Man('Lily', 12) man instanceof Object // true\",\"三、constructor\",\" const str = 'testme' str.constructor === String // true const num = 123 num.constructor === Number // true const bol = true bol.constructor === Boolean // true const arr = [1,5,7] arr.constructor === Array // true const obj = {a:3} obj.constructor === Object // true function Man(name,age) { this.name = name this.age = age } Man.constructor === Function // true const man = new Man('Lily', 12) man.constructor === Man // true 但是像 null、undefined这种就调用不了constructor判断数据类型了\"]},\"77\":{\"h\":\"怎么判断两个对象相等？\",\"t\":[\"https://juejin.cn/post/7408226845466902568\"]},\"78\":{\"h\":\"总结\",\"t\":[\"判断两个对象是否相等可以通过以下几种主要方式：\",\"引用比较 **：使用 **<span class=\\\"ne-text\\\">===</span> 操作符，仅适用于比较对象引用。\",\"JSON 字符串化 **：通过 **<span class=\\\"ne-text\\\">JSON.stringify()</span> 方法比较对象的字符串表示，适用于简单对象。\",\"深度比较：递归地比较对象的属性，适用于复杂对象。\",\"使用第三方库 **：如 **Lodash 或其他深度比较库，处理各种复杂的比较需求。_.isEqual(obj1, obj2)\",\"判断两个对象相等\",\"在JavaScript中，判断两个对象是否相等或者判断一个对象是否为空，涉及到几个不同的概念和方法。\",\"JavaScript中的对象是引用类型，这意味着当你比较两个对象时，即使它们包含相同的数据，它们也是不相等的，因为它们在内存中的地址不同。以下是一些判断对象相等的方法：\",\"严格等于（<span class=\\\"ne-text\\\">===</span>）：这会检查两个对象是否是同一个引用，如果不是同一个引用，则返回<span class=\\\"ne-text\\\">false</span>。\",\"const obj1 = { a: 1 }; const obj2 = { a: 1 }; console.log(obj1 === obj2); // 输出 false\",\"JSON.stringify()：将对象转换为JSON字符串，然后比较字符串是否相同。这种方法适用于简单对象，但对于包含函数、循环引用或特殊对象（如<span class=\\\"ne-text\\\">Date</span>）的对象不适用。\",\"const obj1 = { a: 1 }; const obj2 = { a: 1 }; console.log(JSON.stringify(obj1) === JSON.stringify(obj2)); // 输出 true\",\"使用库：有一些库如lodash提供了深度比较功能，可以比较两个对象的内容是否相等。\",\"import _ from 'lodash'; const obj1 = { a: 1 }; const obj2 = { a: 1 }; console.log(_.isEqual(obj1, obj2)); // 输出 true\"]},\"79\":{\"h\":\"如何判断空对象？\",\"t\":[\"总结\",\"**包含可枚举 和 不可枚举 **\",\"Reflect.ownKeys() ( 强烈推荐) :返回一个数组，包含对象自身的所有属性键(包含symbol)，包括不可枚举的属性和符号属性。\",\"Object.keys(obj).length === 0 // 输出 true\",\"**Object.getOwnPropertyNames: **方法返回一个数组，包含对象自身的 所有属性名，不管它们是否可枚举。\",\"Object.getOwnPropertyNames(obj).length === 0 // 输出 true\",\"可枚举\",\"JSON.stringify(obj) === '{}'\",\"Object.keys(obj).length === 0\",\"Object.entries(obj).length === 0\",\"for...in循环\"]},\"80\":{\"h\":\"判断空对象\",\"t\":[\"Object.getOwnPropertyNames()或者Reflect.ownKeys()。\",\"<span class=\\\"ne-text\\\">Object.getOwnPropertyNames()</span> 和 <span class=\\\"ne-text\\\">Reflect.ownKeys()</span> 是 JavaScript 中用于获取对象自身属性的方法，包括不可枚举的属性和符号属性。这两个方法都可以帮助你判断一个对象是否为空，但它们有一些区别。\"]},\"81\":{\"h\":\"Object.getOwnPropertyNames()\",\"t\":[\"<span class=\\\"ne-text\\\">Object.getOwnPropertyNames()</span> 方法返回一个数组，包含对象自身的所有属性名，不管它们是否可枚举。\",\"const obj = { a: 1 }; Object.defineProperty(obj, 'b', { value: 2, enumerable: false }); console.log(Object.getOwnPropertyNames(obj)); // 输出 [\\\"a\\\", \\\"b\\\"]\",\"在这个例子中，<span class=\\\"ne-text\\\">\\\"b\\\"</span> 属性是不可枚举的，但 <span class=\\\"ne-text\\\">Object.getOwnPropertyNames()</span> 仍然能够获取到它。\"]},\"82\":{\"h\":\"Reflect.ownKeys()\",\"t\":[\"<span class=\\\"ne-text\\\">Reflect.ownKeys()</span> 方法返回一个数组，包含对象自身的所有属性键，包括不可枚举的属性和符号属性。\",\"const obj = { a: 1 }; Object.defineProperty(obj, 'b', { value: 2, enumerable: false }); const symbol = Symbol('c'); obj[symbol] = 3; console.log(Reflect.ownKeys(obj)); // 输出 [\\\"a\\\", \\\"b\\\", Symbol(c)]\",\"在这个例子中，<span class=\\\"ne-text\\\">Reflect.ownKeys()</span> 不仅获取了不可枚举的属性 <span class=\\\"ne-text\\\">\\\"b\\\"</span>，还获取了符号属性 <span class=\\\"ne-text\\\">Symbol(c)</span>。\",\"要判断一个对象是否为空，你可以使用这两个方法中的任何一个来获取对象的所有自身属性键，然后检查返回的数组是否为空。\",\"const obj = {}; // 使用 Object.getOwnPropertyNames() console.log(Object.getOwnPropertyNames(obj).length === 0); // 输出 true // 使用 Reflect.ownKeys() console.log(Reflect.ownKeys(obj).length === 0); // 输出 true\",\"**在这两个例子中，如果对象 **<span class=\\\"ne-text\\\">obj</span> 没有任何自身的属性，那么这两个方法都会返回一个空数组，数组的长度为0，表示对象为空。\"]},\"83\":{\"h\":\"总结\",\"t\":[\"<span class=\\\"ne-text\\\">Object.getOwnPropertyNames()</span>：返回对象自身的所有属性名，包括不可枚举的属性。\",\"<span class=\\\"ne-text\\\">Reflect.ownKeys()</span>：返回对象自身的所有属性键，包括不可枚举的属性和符号属性。\",\"在大多数情况下，<span class=\\\"ne-text\\\">Reflect.ownKeys()</span> 提供了更全面的结果，因为它还包括了符号属性。如果你只需要获取字符串属性名，那么 <span class=\\\"ne-text\\\">Object.getOwnPropertyNames()</span> 就足够了。在选择使用哪个方法时，需要根据你的具体需求来决定。\",\"判断空对象\",\"空对象指的是一个对象没有任何可枚举的属性。以下是一些判断对象是否为空的方法：\",\"for...in循环：使用<span class=\\\"ne-text\\\">for...in</span>循环遍历对象的属性，如果没有属性执行，那么对象为空。\",\"const obj = {}; for (let key in obj) { if (obj.hasOwnProperty(key)) { console.log('Object is not empty'); return; } } console.log('Object is empty');\",\"Object.keys()：这个方法返回一个包含对象所有自身可枚举属性的数组，如果数组长度为0，则对象为空。\",\"const obj = {}; console.log(Object.keys(obj).length === 0); // 输出 true\",\"JSON.stringify()：将对象转换为JSON字符串，空对象转换后的结果是一个空的大括号<span class=\\\"ne-text\\\">{}</span>。\",\"const obj = {}; console.log(JSON.stringify(obj) === '{}'); // 输出 true\",\"Object.entries()：这个方法返回一个给定对象自身可枚举属性的键值对数组，如果数组长度为0，则对象为空。\",\"const obj = {}; console.log(Object.entries(obj).length === 0); // 输出 true\",\"请注意，这些方法只能检测对象是否有可枚举的属性，它们不会检查对象的原型链上的属性。如果需要检查对象是否完全没有属性（包括不可枚举的属性和原型链上的属性），可以使用<span class=\\\"ne-text\\\">Object.getOwnPropertyNames()</span>或者 <span class=\\\"ne-text\\\">Reflect.ownKeys()</span>。\"]},\"84\":{\"h\":\"数组的forEach和map方法有哪些区别？常用哪些方法去对数组进行增、删、改\",\"t\":[\"拓展\",\"<span class=\\\"ne-text\\\">forEach</span> 和 <span class=\\\"ne-text\\\">map</span> 是JavaScript中用于数组遍历和元素处理的两个常用方法，它们有一些关键的区别：\"]},\"85\":{\"h\":\"forEach 方法\",\"t\":[\"<span class=\\\"ne-text\\\">forEach</span> 方法会对数组的每个元素执行一次提供的函数。\",\"**它不返回任何值，即返回 **<span class=\\\"ne-text\\\">undefined</span>。\",\"它不能被中断，即使在回调函数中抛出错误，<span class=\\\"ne-text\\\">forEach</span> 也会继续执行直到数组的末尾。\",\"它常用于执行副作用操作，如数组的遍历、累加求和等。\",\"let numbers = [1, 2, 3]; numbers.forEach(function(number) { console.log(number); // 输出每个元素 });\"]},\"86\":{\"h\":\"map 方法\",\"t\":[\"<span class=\\\"ne-text\\\">map</span> 方法也遍历数组的每个元素，但会返回一个新数组，新数组的元素是原数组元素经过回调函数处理后的结果。\",\"它不会更改原数组，而是创建一个新数组。\",\"它可以通过返回值进行链式调用。\",\"它常用于对数组中的每个元素进行转换或计算，并获取一个新的数组。\",\"let numbers = [1, 2, 3]; let squares = numbers.map(function(number) { return number * number; // 返回每个元素的平方 }); console.log(squares); // 输出 [1, 4, 9]\"]},\"87\":{\"h\":\"增删改方法\",\"t\":[\"对于数组的增、删、改操作，JavaScript 提供了多种方法：\",\"增加元素：\",\"<span class=\\\"ne-text\\\">push(...items)</span>：在数组末尾添加一个或多个元素，并返回新的长度。\",\"<span class=\\\"ne-text\\\">unshift(...items)</span>：在数组开头添加一个或多个元素，并返回新的长度。\",\"<span class=\\\"ne-text\\\">splice(index, 0, ...items)</span>：在指定位置添加元素。\",\"删除元素：\",\"<span class=\\\"ne-text\\\">pop()</span>：删除数组的最后一个元素，并返回被删除的元素。\",\"<span class=\\\"ne-text\\\">shift()</span>：删除数组的第一个元素，并返回被删除的元素。\",\"<span class=\\\"ne-text\\\">splice(index, count)</span>：删除指定位置的元素。\",\"<span class=\\\"ne-text\\\">filter(callback)</span>：创建一个新数组，包含通过测试的所有元素。\",\"修改元素：\",\"<span class=\\\"ne-text\\\">splice(index, count, ...items)</span>：删除指定位置的元素，并可在该位置添加新元素。\",\"<span class=\\\"ne-text\\\">slice()</span> 结合 <span class=\\\"ne-text\\\">concat()</span> 或 <span class=\\\"ne-text\\\">push()</span>：创建一个数组的副本，然后添加或修改元素。\",\"<span class=\\\"ne-text\\\">map(callback)</span>：创建一个新数组，其元素是原数组元素经过回调函数处理后的结果。\",\"其他常用方法：\",\"<span class=\\\"ne-text\\\">concat(...items)</span>：创建一个新数组，包含原数组的元素和/或额外的参数。\",\"<span class=\\\"ne-text\\\">slice(start, end)</span>：提取原数组的一部分，返回一个新数组。\",\"<span class=\\\"ne-text\\\">reduce(callback, initialValue)</span>：将数组中的值通过回调函数处理后缩减为单一的返回值。\",\"<span class=\\\"ne-text\\\">find(callback)</span>：返回数组中满足提供的测试函数的第一个元素的值。\",\"<span class=\\\"ne-text\\\">some(callback)</span>：检测数组中至少有一个元素通过测试。\",\"<span class=\\\"ne-text\\\">every(callback)</span>：检测数组的所有元素是否都通过了测试。\",\"选择哪种方法取决于你的具体需求，比如是否需要修改原数组、是否需要返回新数组、是否需要执行复杂的条件检查等。\"]},\"88\":{\"h\":\"闭包和作用域\",\"t\":[\"把闭包简单理解成“定义在一个函数内部的函数”。\",\"https://blog.csdn.net/Ed7zgeE9X/article/details/133819940\",\"https://blog.csdn.net/Ed7zgeE9X/article/details/133819940\",\"## 实现一个类以关键字new功能的函数\",\"相当于创建一个 空对象,并将其 原型 和 this指向 绑定其构造函数 然后返回对象\",\"在js中new关键字主要做了：\",\"首先创建一个空对象，这个对象会作为执行new构造函数之后返回的对象实例，\",\"将创建的空对象原型（<span class=\\\"ne-text\\\">__proto__</span>）指向构造函数的prototype属性，\",\"同时将这个空对象赋值给构造函数内部的this，并执行构造函数逻辑，\",\"根据构造函数的执行逻辑，返回初始创建的对象或构造函数的显式返回值。\",\"function newFn(...args) { const constructor = args.shift(); const obj = Object.create(constructor.prototype); const result = constructor.apply(obj, args); return typeof result === \\\"object\\\" && result !== null ? result : obj; } function Person(name) { this.name = name; } const p = newFn(Person, \\\"Jerome\\\"); console.log(\\\"p.name :>> \\\", p.name); // p.name :>> Jerome\",\"在编程中，“关键字new功能”通常指的是使用<span class=\\\"ne-text\\\">new</span>关键字来创建一个类的新实例。下面我将提供一个简单的示例，展示如何在JavaScript中实现一个类，并使用 <span class=\\\"ne-text\\\">new</span>关键字来创建其实例。\",\"// 定义一个类 class Person { // 构造函数，用于初始化实例 constructor(name, age) { this.name = name; // 实例的name属性 this.age = age; // 实例的age属性 } // 实例方法，可以被所有实例调用 greet() { console.log(`Hello, my name is ${this.name} and I am ${this.age} years old.`); } } // 使用new关键字创建Person类的实例 let person1 = new Person('Alice', 30); // 调用实例方法 person1.greet(); // 输出: Hello, my name is Alice and I am 30 years old.\",\"在这个例子中，<span class=\\\"ne-text\\\">Person</span>是一个类，它有一个构造函数 <span class=\\\"ne-text\\\">constructor</span>，用于初始化实例的属性（<span class=\\\"ne-text\\\">name</span>和 <span class=\\\"ne-text\\\">age</span>）。<span class=\\\"ne-text\\\">greet</span>是一个实例方法，可以通过创建的实例调用。\",\"当你使用<span class=\\\"ne-text\\\">new Person('Alice', 30)</span>时，你实际上是在创建一个新的 <span class=\\\"ne-text\\\">Person</span>对象，并且调用了它的构造函数来初始化属性。之后，你可以使用这个新创建的对象来调用它的方法，比如 <span class=\\\"ne-text\\\">person1.greet()</span>。\",\"如果你需要在其他编程语言中实现类似的功能，请告诉我具体的语言，我可以提供相应的示例。\",\"https://blog.csdn.net/qq_17335549/article/details/138100619\"]},\"89\":{\"h\":\"如何实现继承（原型和原型链）\",\"t\":[\"https://blog.csdn.net/qq_17335549/article/details/138100619\",\"使用class语法，用extends进行继承, 或 直接改变对象的__proto__指向。\"]},\"90\":{\"h\":\"总结\",\"t\":[\"总之关于原型这块记住三句话\",\"对象有一个内置属性 [[Prototype]]，使用 Object.getPrototypeOf(obj) 获取\",\"函数有一个公开可访问不可枚举属性 prototype\",\"函数的 prototype 属性有一个公开可访问的不可枚举属性 constructor，指向函数本身\"]},\"91\":{\"h\":\"2.4 原型相关的面试题目\"},\"92\":{\"h\":\"2.4.1 说说你对原型和原型链的理解\",\"t\":[\"回答问题分文两步\",\"（1）原型/原型链是什么？【引用上面的三句话即可】\",\"在 js 中每个对象都有一个内置属性 [[prototype]]，可以使用 Object.getPrototypeOf 来获取，指向一个对象；同样的，这个指向的对象也有内置属性[[prototype]] 这样就构成了原型链，原型链最终会指向 Object.prototype，而 Object.prototype 的内置属性 [[prototype]] 指向 null.\",\"同时函数都有一个公开可访问属性 prototype，这个 prototype 属性又有一个 constructor 属性指向函数本身。\",\"（2）原型链有什么用？【属性查找、继承、扩展、属性和方法的共享】\",\"当访问对象的一个属性的时候，如果自身没有找到，就会去原型链上查找，直到找到该属性，或者遍历完完整的原型链，也就是说可以使用原型链实现继承功能。对象可以通过原型链继承父对象的属性或者方法【继承】\",\"也可以使用原型链对对象进行扩展，通过修改原型对象，可以给所有的实例进行属性的增加或修改。如果我们在一个对象的原型上添加属性或者方法，所有基于该原型的实例都会自动继承这些属性和方法，这样可以在不修改每个实例的情况下，实现对对象的扩展【扩展】【注意这一点也是原型链继承的弊端】【也是实例之间属性和方法的共享的方法】\"]},\"93\":{\"h\":\"六、寄生式组合继承【必会】\",\"t\":[\"我不喜欢这个名字，因为他听起来很高端的样子，还不如叫 es5 继承终极版！\",\"很简单，把 new Person() 换成 Object.create(Person.prototype)就行了。\",\"function Person(age) { this.name = 'mike'; this.age = { num: age } } Person.prototype.getName = function() { return this.name; } function Student(gender, age) { // 重点1 Person.call(this, age) this.gender = gender } // 重点2 Student.prototype = Object.create(Person.prototype) // 重点3 Student.prototype.constructor = Student; const student = new Student('man', 12); const student1 = new Student('women', 25) console.log(Object.getPrototypeOf(student)) // 修改第一个实例 student.age.num = 3 console.log('第一个学生', student.age, student.getName()) console.log('第二个学生', student1.age, student1.getName())\",\"这里面其实应用到了，Object.create 的原理，这也是一个面试题目，而且也有可能让你手写一个 Object.create 请看这篇文章。\"]},\"94\":{\"h\":\"小结\",\"t\":[\"好吧，整半天就一套代码，如果面试官让你写 es5 的继承，你直接上来就终极版代码安排，我想他应该没有什么可问的了吧，所以你别看概念上那么继承方式那么多，但是实际应用就是一个！一定要记住，可别再翻车了。\",\"那么还有最后一个问题就是 es6 中的继承了！\"]},\"95\":{\"h\":\"七、es6 继承\"},\"96\":{\"h\":\"7.1 代码实现\",\"t\":[\"使用类 class + extends 实现继承。主要还是学会使用class 类的各种语法，有几个关键点\",\"class 中只能有一个构造函数 constructor\",\"可以使用 static 定义静态属性和方法，直接使用类名调用\",\"子类使用 extends 关键字继承父类，且只能继承一个【说明 es6 原生也不支持多重继承】\",\"子类在构造函数 constructor 中使用 super 来调用父类的构造函数，并且可以传递参数\",\"子类中的方法和父类的同名，会覆盖父类的方法\",\"必须使用 new 操作符，创建 class 示例\",\"class Person { // 定义属性 lang = 'zh' // 定义静态属性 static nation = 'china' // 构造函数 constructor(age) { this.name = 'mike' this.age = { num: age } } // 定义方法 getName() { return this.name } // 定义静态方法 static getDes () { return 'hello word' } } class Student extends Person { constructor(gender, age) { super(age) this.gender = gender } } const student = new Student('man', 12) const student1 = new Student('women', 25) student.age.num = 234 console.log('静态属性方法',Person.nation, Person.getDes()) console.log('第一个学生', student.lang, student.getName()) console.log('第二个学生', student1, student.getName())\",\"7.2 面试题目\",\"这个时候肯定会问 es5 中的类和 es6 中的类的区别了，用自己的话总结一些这篇文章的内容即可。\",\"7.2.1 es5 中类 es6 中的继承有什么区别\",\"注意 es6 的class 有一个私有属性和方法，以#开头的，这个倒是不常用。\",\"7.2.2 ts 中的类和 es6 中的类有什么区别\",\"ts 中有类型检查\",\"ts 有访问描述符 private 、public 、protected 等，js 中只有 #开头描述的私有属性\",\"ts 中有抽象类和方法的概念\",\"抽象类可以包含抽象方法，而接口只能定义方法的签名\",\"ts 支持范型\"]},\"97\":{\"h\":\"箭头函数和普通函数有什么区别\",\"t\":[\"箭头函数不会创建自身的this，只会从上一级继承this，箭头函数的this在定义的时候就已经确认了，之后不会改变。\",\"同时箭头函数无法作为构造函数使用，\",\"没有自身的prototype，\",\"也没有arguments。\",\"https://blog.csdn.net/weixin_46098577/article/details/131005395\",\"https://blog.csdn.net/weixin_46098577/article/details/131005395\",\"## 迭代器(iterator)接口和生成器(generator)函数的关系\",\"任意一个对象实现了遵守迭代器协议的[Symbol.iterator]方法，那么该对象就可以调用[Symbol.iterator]返回一个遍历器对象。\",\"生成器函数就是遍历器生成函数，故可以把generator赋值给对象的[Symbol.iterator]属性，从而使该对象具有迭代器接口。\",\"class ClassRoom { constructor(address, name, students) { this.address = address; this.name = name; this.students = students; } entry(student) { this.students.push(student); } *[Symbol.iterator]() { yield* this.students; } // [Symbol.iterator]() { // let index = 0; // return { // next: () => { // if (index < this.students.length) { // return { done: false, value: this.students[index++] }; // } else { // return { done: true, value: undefined }; // } // }, // return: () => { // console.log(\\\"iterator has early termination\\\"); // return { done: true, value: undefined }; // }, // }; // } } const classOne = new ClassRoom(\\\"7-101\\\", \\\"teach-one-room\\\", [\\\"rose\\\", \\\"jack\\\", \\\"lily\\\", \\\"james\\\"]); for (const stu of classOne) { console.log(\\\"stu :>> \\\", stu); // stu :>> rose // stu :>> jack // stu :>> lily // stu :>> james // if (stu === \\\"lily\\\") return; }\"]},\"98\":{\"h\":\"浏览器的事件循环机制\",\"t\":[\"先进行宏任务(script)内的内容;\",\"再去执行微任务队列{\",\"--消息队列有优先级 :按照任务类型分(chrome浏览器中)\",\"--微队列 [最高] promise.then方法\",\"--交互队列 [高] 点击操作等\",\"--延时队列 [中] 延时,循环延时}\",\"然后执行微任务如果有嵌套看先执行宏任务在再按照优先级执行微任务\"]},\"99\":{\"h\":\"列举宿主对象、内置对象、原生对象并说明其定义\",\"t\":[\"在JavaScript中，宿主对象（Host Objects）、内置对象（Built-in Objects）和原生对象（Native Objects）是与执行环境相关的概念。以下是它们的定义和区别：\"]},\"100\":{\"h\":\"宿主对象（Host Objects）\",\"t\":[\"宿主对象是由JavaScript运行环境（如浏览器或Node.js）提供的，而不是由ECMAScript规范定义的对象。宿主对象的具体特性和行为可能会因不同的宿主环境而异。\",\"定义：宿主对象是依赖于宿主环境（如浏览器或服务器）的对象，它们提供了与宿主环境交互的能力。\",\"例子：\",\"在浏览器中，<span class=\\\"ne-text\\\">window</span>、<span class=\\\"ne-text\\\">document</span>、<span class=\\\"ne-text\\\">XMLHttpRequest</span> 等都是宿主对象。\",\"在Node.js中，<span class=\\\"ne-text\\\">global</span>、<span class=\\\"ne-text\\\">process</span>、<span class=\\\"ne-text\\\">console</span> 等都是宿主对象。\"]},\"101\":{\"h\":\"内置对象（Built-in Objects）\",\"t\":[\"内置对象是由ECMAScript规范定义的对象，它们在任何JavaScript环境中都是可用的。这些对象提供了核心功能，如数据类型、错误处理、数学计算等。\",\"定义：内置对象是ECMAScript规范中定义的对象，它们是语言的一部分，不依赖于宿主环境。\",\"例子：\",\"<span class=\\\"ne-text\\\">Object</span>、<span class=\\\"ne-text\\\">Array</span>、<span class=\\\"ne-text\\\">String</span>、<span class=\\\"ne-text\\\">Number</span>、<span class=\\\"ne-text\\\">Boolean</span> 等是内置对象，用于表示基本数据结构。\",\"<span class=\\\"ne-text\\\">Date</span>、<span class=\\\"ne-text\\\">Math</span>、<span class=\\\"ne-text\\\">JSON</span>、<span class=\\\"ne-text\\\">Error</span> 等也是内置对象，提供了特定的功能。\"]},\"102\":{\"h\":\"原生对象（Native Objects）\",\"t\":[\"原生对象通常是指那些直接由JavaScript引擎实现的对象，包括内置对象和宿主对象。在某些文献中，\\\"原生对象\\\"这个术语可能与\\\"内置对象\\\"互换使用，但在严格意义上，原生对象包括了所有由JavaScript引擎直接实现的对象，无论是由ECMAScript规范定义的还是由宿主环境提供的。\",\"定义：原生对象是由JavaScript引擎实现的对象，包括ECMAScript规范定义的对象和宿主环境提供的对象。\",\"例子：\",\"同内置对象和宿主对象的例子。\"]},\"103\":{\"h\":\"总结\",\"t\":[\"宿主对象：依赖于宿主环境的对象，它们提供了与宿主环境交互的能力。\",\"内置对象：由ECMAScript规范定义的对象，是JavaScript语言的核心组成部分。\",\"原生对象：由JavaScript引擎实现的对象，包括内置对象和宿主对象。\",\"在实际开发中，了解这些对象的来源和特性有助于更好地理解和使用JavaScript的各种功能。\"]},\"104\":{\"h\":\"=== 和==的区别？\",\"t\":[\"在JavaScript中，<span class=\\\"ne-text\\\">===</span> 和 <span class=\\\"ne-text\\\">==</span> 是用于比较两个值的运算符，但它们在比较时的行为和规则有所不同。\"]},\"105\":{\"h\":\"严格相等运算符 ( )\",\"t\":[\"类型和值都相等：<span class=\\\"ne-text\\\">===</span> 运算符称为严格相等运算符，它不仅比较两个值的类型，还比较它们的值。如果两个值的类型不同，即使它们的值看起来相同，<span class=\\\"ne-text\\\">===</span> 也会返回 <span class=\\\"ne-text\\\">false</span>。\",\"不进行类型转换 **：使用 **<span class=\\\"ne-text\\\">===</span> 时，如果比较的两个值类型不同，不会尝试进行任何类型转换，直接返回 <span class=\\\"ne-text\\\">false</span>。\",\"例子：\",\"3 === 3 // true '3' === 3 // false，因为一个是字符串，一个是数字\"]},\"106\":{\"h\":\"相等运算符 ( )\",\"t\":[\"只比较值：<span class=\\\"ne-text\\\">==</span> 运算符称为相等运算符，它只比较两个值的值，而不关心它们的类型。如果两个值的类型不同，JavaScript 会尝试进行类型转换，使它们具有相同的类型，然后再进行比较。\",\"进行类型转换：如果比较的两个值类型不同，<span class=\\\"ne-text\\\">==</span> 会根据隐式类型转换规则尝试将它们转换为相同类型，然后再进行比较。\",\"例子：\",\"3 == 3 // true '3' == 3 // true，因为字符串 '3' 被转换为数字 3 后比较 0 == false // true，因为 false 被转换为数字 0 后比较 '' == 0 // true，因为空字符串被转换为数字 0 后比较\"]},\"107\":{\"h\":\"推荐使用\",\"t\":[\"**通常推荐使用 **<span class=\\\"ne-text\\\">===</span> 运算符，因为它不会进行隐式的类型转换，这样可以避免很多由于类型转换导致的意外结果，使代码更加清晰和可靠。只有在你明确需要进行类型转换时，才使用 <span class=\\\"ne-text\\\">==</span> 运算符。\"]},\"108\":{\"h\":\"例子\",\"t\":[\"// 使用 === null === undefined // false，因为 null 和 undefined 是不同的类型 '0' === 0 // false，因为一个是字符串，一个是数字 // 使用 == null == undefined // true，JavaScript 会将 null 和 undefined 视为相等 '0' == 0 // true，因为字符串 '0' 被转换为数字 0\",\"**在实际开发中，使用 **<span class=\\\"ne-text\\\">===</span> 可以减少很多由于类型转换导致的bug，使得比较操作更加安全和可预测。\"]},\"109\":{\"h\":\"null,undefined的区别\",\"t\":[\"null 针对 对象 表示空对象\",\"undefined 针对 已经声明但是没有赋值 的 一个具体值\",\"如果函数没有返回值，它会默认返回<span class=\\\"ne-text\\\">undefined</span>。\",\"**如果函数需要返回一个空对象，通常会返回 **<span class=\\\"ne-text\\\">null</span>。\",\"拓展\",\"在JavaScript中，<span class=\\\"ne-text\\\">null</span> 和 <span class=\\\"ne-text\\\">undefined</span> 是两种表示“没有值”的特殊值，它们用于不同的场景和目的。\"]},\"110\":{\"h\":\"null\",\"t\":[\"定义：<span class=\\\"ne-text\\\">null</span> 是一个表示故意赋予的空值的对象，它表示一个变量指向一个空对象。\",\"用途：\",\"表示一个变量初始化为空，即还没有指向任何对象。\",\"**表示函数期望返回一个对象，但没有找到合适的返回对象时，返回 **<span class=\\\"ne-text\\\">null</span>。\",\"显式地表示一个空或不存在的对象引用。\",\"类型：<span class=\\\"ne-text\\\">null</span> 是 <span class=\\\"ne-text\\\">Object</span> 类型（尽管在逻辑上它表示空，但技术上它是一个对象）。\"]},\"111\":{\"h\":\"undefined\",\"t\":[\"定义：<span class=\\\"ne-text\\\">undefined</span> 是一个表示变量已声明但尚未赋值的特殊值。\",\"用途：\",\"表示变量初始化未完成，即变量存在但还没有被赋予具体的值。\",\"**表示函数没有返回值时，默认返回 **<span class=\\\"ne-text\\\">undefined</span>。\",\"表示对象中不存在某个属性。\",\"类型：<span class=\\\"ne-text\\\">undefined</span> 是 <span class=\\\"ne-text\\\">Undefined</span> 类型。\"]},\"112\":{\"h\":\"区别\",\"t\":[\"值的来源：\",\"<span class=\\\"ne-text\\\">null</span> 是显式赋值的结果。\",\"<span class=\\\"ne-text\\\">undefined</span> 是变量声明后未初始化的结果。\",\"类型：\",\"<span class=\\\"ne-text\\\">typeof null</span> 返回 <span class=\\\"ne-text\\\">\\\"object\\\"</span>（这是一个历史遗留问题，被认为是JavaScript的一个bug）。\",\"<span class=\\\"ne-text\\\">typeof undefined</span> 返回 <span class=\\\"ne-text\\\">\\\"undefined\\\"</span>。\",\"用途：\",\"<span class=\\\"ne-text\\\">null</span> 通常用于表示空或无效的对象引用。\",\"<span class=\\\"ne-text\\\">undefined</span> 通常用于表示未初始化或不存在的变量。\",\"在函数中：\",\"**如果函数没有返回值，它会默认返回 **<span class=\\\"ne-text\\\">undefined</span>。\",\"**如果函数需要返回一个空对象，通常会返回 **<span class=\\\"ne-text\\\">null</span>。\"]},\"113\":{\"h\":\"例子\",\"t\":[\"let a; // a 为 undefined，因为变量已声明但未初始化 let b = null; // b 为 null，因为显式地赋予了空值 function test() { return; // 隐式返回 undefined } console.log(test()); // 输出 undefined function test2() { return null; // 显式返回 null } console.log(test2()); // 输出 null\",\"**在实际开发中，选择使用 **<span class=\\\"ne-text\\\">null</span> 还是 <span class=\\\"ne-text\\\">undefined</span> 取决于你的具体需求和代码的上下文。通常，如果你需要表示一个变量指向一个空对象，使用 <span class=\\\"ne-text\\\">null</span>；如果你需要表示一个变量尚未被初始化，使用 <span class=\\\"ne-text\\\">undefined</span>。\"]},\"114\":{\"h\":\"怎么获取当前日期(年-月-日时：分：秒)？\",\"t\":[\"new Date()\",\"toLocaleString()\",\"replace(///g, '-')\",\"您的代码中有几个语法错误，我将帮您纠正这些错误，并提供一个正确的示例。您的目标似乎是创建一个日期对象，将其转换为本地字符串表示，然后替换斜杠（<span class=\\\"ne-text\\\">/</span>）为破折号（<span class=\\\"ne-text\\\">-</span>）。\",\"以下是修正后的代码：\",\"// 创建一个新的Date对象，它将包含当前的日期和时间 const a = new Date(); // 将日期转换为本地字符串格式 let b = a.toLocaleString(); // 替换字符串中的斜杠（/）为破折号（-） b = b.replace(/\\\\//g, '-'); console.log(b); // 输出格式化后的日期和时间\",\"在这段代码中，<span class=\\\"ne-text\\\">new Date()</span> 用于创建一个新的日期对象，<span class=\\\"ne-text\\\">toLocaleString()</span> 方法用于将日期对象转换为易读的字符串格式。<span class=\\\"ne-text\\\">replace()</span> 方法结合正则表达式 <span class=\\\"ne-text\\\">/\\\\//g</span> 用于全局替换字符串中的所有斜杠（<span class=\\\"ne-text\\\">/</span>）为破折号（<span class=\\\"ne-text\\\">-</span>）。\",\"**请注意，正则表达式中的双斜杠 **<span class=\\\"ne-text\\\">//</span> 是必要的，因为在字符串中单个斜杠是特殊字符的开始，我们需要对它进行转义。<span class=\\\"ne-text\\\">g</span> 标志表示全局搜索，即替换所有出现的斜杠，而不仅仅是第一个。\",\"**如果您希望日期和时间的格式完全按照您的要求（例如，“年-月-日 时:分:秒”），您可能需要使用 **<span class=\\\"ne-text\\\">toLocaleDateString()</span> 和 <span class=\\\"ne-text\\\">toLocaleTimeString()</span> 方法分别格式化日期和时间，然后组合它们，或者使用 <span class=\\\"ne-text\\\">options</span> 参数自定义 <span class=\\\"ne-text\\\">toLocaleString()</span> 的输出格式。\"]},\"115\":{\"h\":\"类数组,数组,对象,之间的 关系和互相转换方法\",\"t\":[\"在JavaScript中，类数组（伪数组）、数组和对象是三种常用的数据结构，它们之间有着不同的特点和用途，但可以通过一些方法相互转换。\"]},\"116\":{\"h\":\"类数组（伪数组）与数组\",\"t\":[\"类数组对象不是数组实例，但具有类似数组的特征，如具有索引和<span class=\\\"ne-text\\\">length</span>属性。常见的类数组对象包括函数的 <span class=\\\"ne-text\\\">arguments</span>对象和某些DOM集合。\"]},\"117\":{\"h\":\"类数组转数组\",\"t\":[\"使用<span class=\\\"ne-text\\\">Array.from()</span>方法：\",\"let args = (function() { return arguments; // 类数组对象 })(1, 2, 3); let arr = Array.from(args); // [1, 2, 3]\",\"使用扩展运算符（<span class=\\\"ne-text\\\">...</span>）：\",\"let args = (function() { return arguments; // 类数组对象 })(1, 2, 3); let arr = [...args]; // [1, 2, 3]\",\"使用<span class=\\\"ne-text\\\">Array.prototype.slice().call(args)</span>方法：\",\"let args = (function() { return arguments; // 类数组对象 })(1, 2, 3); let arr = Array.prototype.slice.call(args); // [1, 2, 3]\"]},\"118\":{\"h\":\"数组转类数组\",\"t\":[\"数组本身就是类数组，但如果你想要创建一个真正的类数组对象（如<span class=\\\"ne-text\\\">arguments</span>），可以使用 <span class=\\\"ne-text\\\">Array</span>对象并设置 <span class=\\\"ne-text\\\">length</span>属性。\"]},\"119\":{\"h\":\"数组与对象\",\"t\":[\"数组是有序的数据集合，对象是键值对的集合。\"]},\"120\":{\"h\":\"数组转对象\",\"t\":[\"使用<span class=\\\"ne-text\\\">Array.prototype.reduce()</span>方法：\",\"let arr = ['a', 'b', 'c']; let obj = arr.reduce((acc, val, index) => { acc[val] = index + 1; return acc; }, {}); // { a: 1, b: 2, c: 3 }\",\"使用对象字面量和数组索引：\",\"let arr = ['a', 'b', 'c']; let obj = { a: arr[0], b: arr[1], c: arr[2] }; // { a: 'a', b: 'b', c: 'c' }\"]},\"121\":{\"h\":\"对象转数组\",\"t\":[\"使用<span class=\\\"ne-text\\\">Object.keys()</span>、<span class=\\\"ne-text\\\">Object.values()</span>或 <span class=\\\"ne-text\\\">Object.entries()</span>方法：\",\"let obj = { a: 1, b: 2, c: 3 }; let keys = Object.keys(obj); // [\\\"a\\\", \\\"b\\\", \\\"c\\\"] let values = Object.values(obj); // [1, 2, 3] let entries = Object.entries(obj); // [[\\\"a\\\", 1], [\\\"b\\\", 2], [\\\"c\\\", 3]]\",\"使用<span class=\\\"ne-text\\\">Array.from()</span>方法：\",\"let obj = { a: 1, b: 2, c: 3 }; let values = Array.from(obj.values()); // [1, 2, 3]\",\"使用<span class=\\\"ne-text\\\">JSON.stringify()</span>和 <span class=\\\"ne-text\\\">JSON.parse()</span>方法（对于简单对象）：\",\"let obj = { a: 1, b: 2, c: 3 }; let arr = JSON.parse(JSON.stringify(obj)); // [\\\"a\\\", 1, \\\"b\\\", 2, \\\"c\\\", 3]\",\"请注意，<span class=\\\"ne-text\\\">JSON.stringify()</span>和 <span class=\\\"ne-text\\\">JSON.parse()</span>方法在处理对象时会将对象转换为JSON字符串，然后再解析为数组，但这种方法会将键值对转换为连续的元素，而不是键值对的形式。\",\"通过这些方法，你可以在类数组、数组和对象之间进行灵活的转换，以适应不同的编程场景和需求。\"]},\"122\":{\"h\":\"变量提升是什么？与函数提升的区别？\",\"t\":[\"在JavaScript中，变量提升（Variable Hoisting）和函数提升（Function Hoisting）是两种不同的行为，它们都与JavaScript的执行上下文和作用域链有关。\"]},\"123\":{\"h\":\"变量提升\",\"t\":[\"变量提升是指JavaScript引擎在代码执行之前，将变量声明提升到当前作用域的顶部。这意味着变量可以在声明之前就被访问。\",\"console.log(myVar); // 输出 undefined var myVar = 5;\",\"在上面的代码中，尽管<span class=\\\"ne-text\\\">myVar</span>是在 <span class=\\\"ne-text\\\">console.log</span>之后声明的，但是由于变量提升，<span class=\\\"ne-text\\\">myVar</span>的声明被提升到了作用域顶部，所以在 <span class=\\\"ne-text\\\">console.log</span>执行时，<span class=\\\"ne-text\\\">myVar</span>已经存在，其值为 <span class=\\\"ne-text\\\">undefined</span>。\",\"对于<span class=\\\"ne-text\\\">let</span>和 <span class=\\\"ne-text\\\">const</span>声明的变量，虽然也存在提升，但是它们不会立即被初始化，而是处于一个称为“暂时性死区”（Temporal Dead Zone, TDZ）的状态，直到它们被实际声明。\",\"console.log(myLet); // 报错 ReferenceError let myLet = 10;\"]},\"124\":{\"h\":\"函数提升\",\"t\":[\"函数提升与变量提升类似，但是只适用于函数声明，不适用于函数表达式。在函数提升中，函数声明会被提升到当前作用域的顶部。\",\"console.log(myFunc); // 报错 TypeError myFunc(); // 输出 \\\"Hello, World!\\\" function myFunc() { console.log(\\\"Hello, World!\\\"); }\",\"在上面的代码中，尽管<span class=\\\"ne-text\\\">myFunc</span>是在 <span class=\\\"ne-text\\\">console.log</span>之后声明的，但是由于函数提升，<span class=\\\"ne-text\\\">myFunc</span>的声明被提升到了作用域顶部，所以在 <span class=\\\"ne-text\\\">console.log</span>执行时，<span class=\\\"ne-text\\\">myFunc</span>已经存在，但是尝试打印一个函数会抛出错误。\"]},\"125\":{\"h\":\"区别\",\"t\":[\"变量提升：适用于所有类型的变量声明（<span class=\\\"ne-text\\\">var</span>、<span class=\\\"ne-text\\\">let</span>、<span class=\\\"ne-text\\\">const</span>），但是 <span class=\\\"ne-text\\\">let</span>和 <span class=\\\"ne-text\\\">const</span>声明的变量在初始化之前不能被访问（TDZ）。\",\"函数提升：只适用于函数声明，不适用于函数表达式。函数表达式不会提升，但是变量名会被提升。\"]},\"126\":{\"h\":\"函数表达式与函数声明的区别\",\"t\":[\"函数声明：使用<span class=\\\"ne-text\\\">function</span>关键字，并且函数名是必需的。\",\"函数表达式：通常是一个匿名函数，赋值给一个变量。\",\"console.log(myFuncExpr); // 输出 undefined myFuncExpr(); // 报错 TypeError var myFuncExpr = function() { console.log(\\\"Hello, World!\\\"); };\",\"在上面的代码中，<span class=\\\"ne-text\\\">myFuncExpr</span>是一个函数表达式，它不会像函数声明那样被提升，所以 <span class=\\\"ne-text\\\">console.log</span>输出 <span class=\\\"ne-text\\\">undefined</span>，而 <span class=\\\"ne-text\\\">myFuncExpr()</span>在执行时抛出错误，因为此时 <span class=\\\"ne-text\\\">myFuncExpr</span>还没有被赋值。\",\"总结来说，变量提升和函数提升是JavaScript在代码执行前对变量和函数声明进行处理的行为，它们对于理解JavaScript的作用域和执行上下文非常重要。\"]},\"127\":{\"h\":\"什么是作用域链？如何延长？\",\"t\":[\"在jS解释器中查找一个变量或者函数时会首先从当前上下文对象中查找，如果当前上下文对象中不存在，就会向上层上下文中查找，直到找到该变量或者全局上下文时为止。这个查找过程中又上下文对象组成的链表结构就是作用域链。\",\"通过闭包可以延长作用域链\"]},\"128\":{\"h\":\"如何实现数组的随机排序？\",\"t\":[\"洗牌算法\",\"在JavaScript中，实现数组的随机排序通常使用Fisher-Yates（也称为Knuth）洗牌算法。这个算法可以确保每个元素都有相同的概率出现在数组的任何位置。\",\"以下是使用Fisher-Yates算法实现数组随机排序的步骤：\",\"从数组的最后一个元素开始，随机选择一个元素与当前位置的元素交换。\",\"移动到前一个元素，重复步骤1，直到遍历完整个数组。\",\"下面是具体的实现代码：\",\"function shuffleArray(array) { let currentIndex = array.length, temporaryValue, randomIndex; // 当仍有元素未洗牌时 while (currentIndex !== 0) { // 选取一个剩余元素… randomIndex = Math.floor(Math.random() * currentIndex); currentIndex -= 1; // 与当前元素交换 temporaryValue = array[currentIndex]; array[currentIndex] = array[randomIndex]; array[randomIndex] = temporaryValue; } return array; } // 示例 const myArray = [1, 2, 3, 4, 5]; console.log(shuffleArray(myArray));\",\"在这个函数中，<span class=\\\"ne-text\\\">currentIndex</span> 初始化为数组的长度，然后在每次迭代中减少。<span class=\\\"ne-text\\\">randomIndex</span> 是从0到 <span class=\\\"ne-text\\\">currentIndex</span>（包括 <span class=\\\"ne-text\\\">currentIndex</span>）的随机索引。然后，将 <span class=\\\"ne-text\\\">currentIndex</span>指向的元素与 <span class=\\\"ne-text\\\">randomIndex</span>指向的元素交换。\",\"这种方法确保每个元素都有相同的概率出现在数组的任何位置，从而实现了真正的随机排序。\",\"请注意，这个函数会直接修改传入的数组。如果你需要保留原始数组，可以先复制一份数组再进行排序：\",\"const originalArray = [1, 2, 3, 4, 5]; const arrayCopy = [...originalArray]; console.log(shuffleArray(arrayCopy)); console.log(originalArray); // 原始数组保持不变\",\"使用扩展运算符（<span class=\\\"ne-text\\\">...</span>）可以轻松地复制数组。\"]},\"129\":{\"h\":\"dom节点的Attribute和Property有何区别？\",\"t\":[\"1.attribute是HTML元素在标记中定义的属性，\",\"而property是DOM元素在JavaScript中的属性。\",\"2.attribute表示初始HTML属性的值，无法反映元素当前的状态，\",\"而property可以反映元素的实际状态。\",\"3.通过getAttribute()和setAttribute()方法可以操作attribute,\",\"通过直接访问DOM元素对象的属性来操作property.\",\"拓展\",\"在Web开发中，DOM（文档对象模型）节点的属性（Attribute）和特性（Property）是两个相关但不同的概念。它们在JavaScript中的表现和用途有所区别：\"]},\"130\":{\"h\":\"Attribute\",\"t\":[\"定义：Attribute是定义在HTML标签内的，用于为HTML元素提供额外信息的键值对。\",\"存储位置：Attribute存储在DOM中，可以通过<span class=\\\"ne-text\\\">element.getAttribute()</span>方法访问，也可以通过 <span class=\\\"ne-text\\\">element.setAttribute()</span>方法设置。\",\"表现：Attribute通常在HTML标签中可见，例如<span class=\\\"ne-text\\\"><input type=\\\"text\\\" value=\\\"Hello\\\"></span>中的 <span class=\\\"ne-text\\\">type</span>和 <span class=\\\"ne-text\\\">value</span>。\",\"编码：Attribute在HTML中是作为字符串存储的，即使它们看起来像数字或其他类型。\",\"标准化：浏览器会根据HTML规范对Attribute进行标准化处理。\"]},\"131\":{\"h\":\"Property\",\"t\":[\"定义：Property是JavaScript中DOM元素对象的属性，它们是可以通过JavaScript访问和修改的。\",\"存储位置：Property是对象的属性，可以通过点符号（<span class=\\\"ne-text\\\">.</span>）或方括号（<span class=\\\"ne-text\\\">[]</span>）访问和设置，例如 <span class=\\\"ne-text\\\">element.property</span>或 <span class=\\\"ne-text\\\">element['property']</span>。\",\"表现：Property反映了元素的实时状态，它们可能与Attribute相对应，也可能不对应。\",\"类型：Property是JavaScript变量，因此它们具有明确的类型，例如字符串、数字或布尔值。\",\"更新：修改Property可能会影响元素的表现，但不一定影响HTML标签内的Attribute。\"]},\"132\":{\"h\":\"区别\",\"t\":[\"来源：Attribute来自HTML标签，而Property来自DOM元素对象。\",\"访问方式：Attribute通过<span class=\\\"ne-text\\\">getAttribute</span>和 <span class=\\\"ne-text\\\">setAttribute</span>方法访问，Property通过点符号或方括号访问。\",\"同步性：对于布尔类型的Attribute和Property，它们通常是同步的，即修改一个另一个也会变。但对于其他类型，如<span class=\\\"ne-text\\\">value</span>属性，它们可能不同步，因为Property可能会被JavaScript代码修改，而Attribute只在HTML中更改。\",\"类型转换：Attribute在HTML中总是字符串，而Property具有JavaScript的类型转换特性。\"]},\"133\":{\"h\":\"示例\",\"t\":[\"考虑以下HTML元素：\",\"<input type=\\\"text\\\" value=\\\"Hello\\\">\",\"Attribute：\",\"<span class=\\\"ne-text\\\">type=\\\"text\\\"</span>：表示输入字段的类型。\",\"<span class=\\\"ne-text\\\">value=\\\"Hello\\\"</span>：表示输入字段的初始值。\",\"Property：\",\"<span class=\\\"ne-text\\\">input.type</span>：在JavaScript中访问时，<span class=\\\"ne-text\\\">type</span>是一个Property，其值为字符串 <span class=\\\"ne-text\\\">\\\"text\\\"</span>。\",\"<span class=\\\"ne-text\\\">input.value</span>：在JavaScript中访问时，<span class=\\\"ne-text\\\">value</span>是一个Property，其值为字符串 <span class=\\\"ne-text\\\">\\\"Hello\\\"</span>。如果通过JavaScript更改 <span class=\\\"ne-text\\\">input.value</span>，输入字段的值会实时更新，但HTML标签中的 <span class=\\\"ne-text\\\">value</span> Attribute不会改变。\",\"在实际开发中，了解Attribute和Property之间的区别对于正确操作DOM元素非常重要。\"]},\"134\":{\"h\":\"dom结构操作怎样添加、移除、移动、复制、创建和查找节点？\",\"t\":[\"拓展\",\"在JavaScript中，操作DOM（文档对象模型）结构是常见的任务，包括添加、移除、移动、复制、创建和查找节点。以下是这些操作的基本方法：\"]},\"135\":{\"h\":\"添加节点\",\"t\":[\"使用<span class=\\\"ne-text\\\">appendChild()</span>方法将新节点添加到父节点中。\",\"var newElement = document.createElement('div'); var parentElement = document.getElementById('parent'); parentElement.appendChild(newElement);\"]},\"136\":{\"h\":\"移除节点\",\"t\":[\"使用<span class=\\\"ne-text\\\">removeChild()</span>方法从DOM中移除节点。\",\"var elementToRemove = document.getElementById('removeMe'); var parentElement = elementToRemove.parentNode; parentElement.removeChild(elementToRemove);\"]},\"137\":{\"h\":\"移动节点\",\"t\":[\"移动节点通常是通过先移除再添加的方式实现。\",\"var elementToMove = document.getElementById('moveMe'); var newParent = document.getElementById('newParent'); newParent.appendChild(elementToMove); // 相当于移动了节点\"]},\"138\":{\"h\":\"替换节点\",\"t\":[\"使用<span class=\\\"ne-text\\\">replaceChild()</span>方法替换一个节点。\",\"var newElement = document.createElement('div'); var oldElement = document.getElementById('replaceMe'); var parentElement = oldElement.parentNode; parentElement.replaceChild(newElement, oldElement);\"]},\"139\":{\"h\":\"复制节点\",\"t\":[\"使用<span class=\\\"ne-text\\\">cloneNode()</span>方法复制节点。注意，如果设置为 <span class=\\\"ne-text\\\">true</span>，它将复制节点及其所有子节点。\",\"var elementToCopy = document.getElementById('copyMe'); var copiedElement = elementToCopy.cloneNode(false); // 只复制节点，不复制子节点 var parentElement = document.getElementById('parent'); parentElement.appendChild(copiedElement);\"]},\"140\":{\"h\":\"创建节点\",\"t\":[\"使用<span class=\\\"ne-text\\\">createElement()</span>方法创建新的元素节点。\",\"var newElement = document.createElement('p');\",\"使用<span class=\\\"ne-text\\\">createTextNode()</span>方法创建新的文本节点。\",\"var newText = document.createTextNode('这是一些文本');\"]},\"141\":{\"h\":\"查找节点\",\"t\":[\"使用<span class=\\\"ne-text\\\">getElementById()</span>方法通过ID查找节点。\",\"var element = document.getElementById('myId');\",\"使用<span class=\\\"ne-text\\\">getElementsByClassName()</span>方法通过类名查找节点列表。\",\"var elements = document.getElementsByClassName('myClass');\",\"使用<span class=\\\"ne-text\\\">getElementsByTagName()</span>方法通过标签名查找节点列表。\",\"var elements = document.getElementsByTagName('div');\",\"使用<span class=\\\"ne-text\\\">querySelector()</span>方法通过CSS选择器查找第一个匹配的节点。\",\"var element = document.querySelector('.myClass');\",\"使用<span class=\\\"ne-text\\\">querySelectorAll()</span>方法通过CSS选择器查找所有匹配的节点列表。\",\"var elements = document.querySelectorAll('.myClass');\",\"这些是操作DOM结构的基本方法。在实际应用中，你可能需要根据具体情况选择合适的方法来操作DOM。\"]},\"142\":{\"h\":\"什么是事件冒泡，它是如何工作的？如何阻止事件冒泡？\",\"t\":[\"事件向上传播到根节点\",\"event.stopPropagation() 阻止冒泡\",\"拓展\"]},\"143\":{\"h\":\"事件冒泡（Event Bubbling）\",\"t\":[\"事件冒泡是DOM事件传播的一种机制。当一个事件发生在某个元素上时，这个事件会从这个元素开始，逐级向上传播到根节点（document对象）。在这个过程中，每个父节点都会接收到这个事件，从而有机会对它进行处理。\"]},\"144\":{\"h\":\"工作原理\",\"t\":[\"事件首先在触发它的元素（目标元素）上被处理。\",\"然后，事件会逐级向上传播到父元素，直到达到根节点（<span class=\\\"ne-text\\\">document</span>对象）。\",\"在这个过程中，任何父元素都有机会捕获并处理这个事件。\"]},\"145\":{\"h\":\"示例\",\"t\":[\"假设你有以下的HTML结构：\",\"<div id=\\\"parent\\\"> <button id=\\\"child\\\">点击我</button> </div>\",\"并且你有以下的JavaScript代码：\",\"const childButton = document.getElementById('child'); const parentDiv = document.getElementById('parent'); childButton.addEventListener('click', function(event) { console.log('按钮被点击'); }); parentDiv.addEventListener('click', function(event) { console.log('容器被点击'); }); // 当你点击按钮时，会按照以下顺序触发事件： // 1. 按钮被点击 // 2. 容器被点击\",\"在这个例子中，当你点击按钮时，首先会触发按钮上的点击事件，然后事件会冒泡到父容器<span class=\\\"ne-text\\\">div</span>上，触发父容器的点击事件。\"]},\"146\":{\"h\":\"如何阻止事件冒泡\",\"t\":[\"虽然事件冒泡提供了一种强大的事件处理机制，但在某些情况下，你可能不希望事件继续向上传播。为了阻止事件冒泡，你可以使用<span class=\\\"ne-text\\\">event.stopPropagation()</span>方法。\"]},\"147\":{\"h\":\"示例\",\"t\":[\"继续使用上面的HTML结构，如果你只想处理按钮的点击事件，而不希望触发父容器的点击事件，你可以在按钮的点击事件处理函数中调用<span class=\\\"ne-text\\\">event.stopPropagation()</span>：\",\"childButton.addEventListener('click', function(event) { console.log('按钮被点击'); event.stopPropagation(); // 阻止事件冒泡 }); parentDiv.addEventListener('click', function(event) { console.log('容器被点击'); });\",\"在这个例子中，当你点击按钮时，只会触发按钮上的点击事件，而不会触发父容器的点击事件，因为<span class=\\\"ne-text\\\">event.stopPropagation()</span>阻止了事件的进一步传播。\"]},\"148\":{\"h\":\"总结\",\"t\":[\"事件冒泡是DOM事件处理中的一个重要概念，它允许事件在DOM树中向上传播。通过理解事件冒泡的工作原理，你可以更有效地控制事件处理逻辑。当需要阻止事件冒泡时，可以使用<span class=\\\"ne-text\\\">event.stopPropagation()</span>方法来实现。\"]},\"149\":{\"h\":\"什么是事件捕获，它是如何工作的？\",\"t\":[\"由外到内执行,捕获时间需要在监听时候添加第三个参数,为true\",\"const parentDiv = document.getElementById('parent'); const childButton = document.getElementById('child'); // 在捕获阶段添加事件处理器 parentDiv.addEventListener('click', function(event) { console.log('容器捕获点击'); }, true); // 在冒泡阶段添加事件处理器 childButton.addEventListener('click', function(event) { console.log('按钮被点击'); }); // 当你点击按钮时，会按照以下顺序触发事件： // 1. 容器捕获点击 // 2. 按钮被点击\",\"拓展\",\"事件捕获（Event Capturing）是DOM事件传播的另一个阶段，与事件冒泡相对。在事件捕获阶段，事件从根节点（document对象）开始，沿着DOM树向下传播到目标元素。这意味着在事件到达目标元素之前，它首先会经过一系列的父元素和祖先元素。\"]},\"150\":{\"h\":\"工作原理\",\"t\":[\"事件开始于根节点（document对象）。\",\"事件沿着DOM树向下传播，直到到达目标元素。\",\"在这个过程中，每个父元素都有机会捕获并处理事件，这发生在事件到达目标元素之前。\"]},\"151\":{\"h\":\"事件传播的三个阶段\",\"t\":[\"事件捕获阶段：事件从document对象开始，向下传播到目标元素的任何父元素或祖先元素。\",\"目标阶段：事件到达目标元素。\",\"事件冒泡阶段：事件从目标元素向上传播回document对象。\"]},\"152\":{\"h\":\"如何使用事件捕获\",\"t\":[\"在JavaScript中，你可以通过在<span class=\\\"ne-text\\\">addEventListener</span>方法中设置第三个参数来指定事件处理器是在捕获阶段还是冒泡阶段被触发。如果你想在捕获阶段触发事件处理器，可以将第三个参数设置为 <span class=\\\"ne-text\\\">true</span>。\"]},\"153\":{\"h\":\"示例\",\"t\":[\"const parentDiv = document.getElementById('parent'); const childButton = document.getElementById('child'); // 在捕获阶段添加事件处理器 parentDiv.addEventListener('click', function(event) { console.log('容器捕获点击'); }, true); // 在冒泡阶段添加事件处理器 childButton.addEventListener('click', function(event) { console.log('按钮被点击'); }); // 当你点击按钮时，会按照以下顺序触发事件： // 1. 容器捕获点击 // 2. 按钮被点击\",\"在这个例子中，点击按钮会首先触发父容器的点击事件（在捕获阶段），然后才是按钮本身的点击事件（在冒泡阶段）。\"]},\"154\":{\"h\":\"如何阻止事件捕获\",\"t\":[\"如果你想阻止事件在捕获阶段继续传播，可以使用<span class=\\\"ne-text\\\">event.stopPropagation()</span>方法。这将阻止事件进一步向下传播到目标元素或任何子元素。\",\"parentDiv.addEventListener('click', function(event) { console.log('容器捕获点击'); event.stopPropagation(); // 阻止事件进一步传播 }, true); childButton.addEventListener('click', function(event) { console.log('按钮被点击'); }, true);\",\"在这个例子中，由于在父容器的事件处理器中调用了<span class=\\\"ne-text\\\">event.stopPropagation()</span>，点击按钮将不会触发按钮本身的点击事件。\"]},\"155\":{\"h\":\"总结\",\"t\":[\"事件捕获提供了一种在事件到达目标元素之前处理事件的机制。通过在<span class=\\\"ne-text\\\">addEventListener</span>中设置 <span class=\\\"ne-text\\\">true</span>作为第三个参数，你可以在捕获阶段注册事件处理器。这允许你在事件到达目标元素之前进行干预，例如在父元素中捕获事件并阻止它进一步传播。\"]},\"156\":{\"h\":\"dom的事件模型\",\"t\":[\"1726711353383\"]},\"157\":{\"h\":\"DOM 事件模型\",\"t\":[\"<span class=\\\"ne-text\\\">addEventListener</span>：绑定事件的监听函数\",\"<span class=\\\"ne-text\\\">removeEventListener</span>：移除事件的监听函数\",\"<span class=\\\"ne-text\\\">dispatchEvent</span>：触发事件\"]},\"158\":{\"h\":\"事件模型\",\"t\":[\"由外向内找监听函数就是事件捕获\",\"在目标节点触发事件\",\"由内而外找监听函数就是事件冒泡\",\"事件传播的最上层对象是<span class=\\\"ne-text\\\">window</span>，上例的事件传播顺序，\",\"在捕获阶段依次为<span class=\\\"ne-text\\\">window</span>、<span class=\\\"ne-text\\\">documen</span>t、<span class=\\\"ne-text\\\">html</span>、<span class=\\\"ne-text\\\">body</span>、<span class=\\\"ne-text\\\">父节点</span>、<span class=\\\"ne-text\\\">目标节点</span>，\",\"在冒泡阶段依次为<span class=\\\"ne-text\\\">目标节点</span>、<span class=\\\"ne-text\\\">父节点</span>、<span class=\\\"ne-text\\\">body</span>、<span class=\\\"ne-text\\\">html</span>、<span class=\\\"ne-text\\\">document</span>、<span class=\\\"ne-text\\\">window</span>。\",\"DOM事件传播的三个阶段：捕获阶段，目标阶段 **，**冒泡阶段\",\"target v.s. currentTarget的区别\",\"区别\",\"**e.target - 用户操作的元素 **\",\"**e.currentTarget-程序员监听的元素 **\",\"this是e.currentTarget,我个人不推荐使用它\",\"举例：\",\"**div>span{文字},用户点击文字 **\",\"**e.target就是span **\",\"e.currentTarget就是div\",\"e.stopPropagation()：取消冒泡\",\"e.stopPropagation()可打断冒泡，浏览器不再向上走\",\"一般用于封装某些独立组件\",\"事件委托\",\"事件委托的优点包括：\",\"减少内存消耗：因为只需要在父元素上设置一个事件处理程序，而不是在每个子元素上都设置。\",\"动态元素管理：对于动态添加到DOM中的元素，不需要单独为它们添加事件处理程序，因为它们会继承父元素的事件处理程序。\",\"简化代码：可以简化事件处理代码，特别是当有多个元素需要相同类型的事件处理时。\",\"事件委托的实现示例：\",\"html <div id=\\\"parent\\\"> <button>按钮1</button> <button>按钮2</button> <!-- 更多按钮 --> </div>\",\"javascript复制 const parentDiv = document.getElementById('parent'); parentDiv.addEventListener('click', function(event) { const target = event.target; // 事件实际触发的元素 if (target.tagName === 'BUTTON') { console.log('按钮被点击', target.textContent); } });\",\"拓展\",\"DOM（文档对象模型）的事件模型描述了如何在用户与页面交互时处理事件。在Web开发中，主要有两种事件模型：DOM Level 0事件模型和DOM Level 2事件模型。\"]},\"159\":{\"h\":\"DOM Level 2事件模型\",\"t\":[\"这是现代浏览器使用的事件模型，它提供了更灵活和强大的事件处理机制。在DOM Level 2事件模型中：\",\"事件监听：事件处理程序通过JavaScript的<span class=\\\"ne-text\\\">addEventListener</span>方法添加到元素上，可以动态添加和移除。\",\"element.addEventListener('click', function(event) { // 处理事件 }, false);\",\"事件对象：当事件被触发时，会创建一个事件对象，它包含了事件的所有信息，如事件类型、目标、时间戳等。这个对象作为参数传递给事件处理函数。\",\"function handleClick(event) { console.log(event.type); // \\\"click\\\" console.log(event.target); // 事件目标元素 }\",\"事件传播：事件在DOM中传播的过程包括三个阶段：\",\"捕获阶段（Capturing Phase）：事件从根节点（document对象）开始，向下传播到目标元素。\",\"目标阶段（Target Phase）：事件到达目标元素。\",\"冒泡阶段（Bubbling Phase）：事件从目标元素向上传播回根节点。\",\"事件流：可以通过设置<span class=\\\"ne-text\\\">addEventListener</span>的第三个参数来控制事件处理是在捕获阶段还是冒泡阶段触发。默认情况下（第三个参数为 <span class=\\\"ne-text\\\">false</span>），事件处理在冒泡阶段触发。如果设置为 <span class=\\\"ne-text\\\">true</span>，则在捕获阶段触发。\",\"事件取消：可以使用<span class=\\\"ne-text\\\">event.preventDefault()</span>方法取消事件的默认行为，使用 <span class=\\\"ne-text\\\">event.stopPropagation()</span>方法阻止事件进一步传播。\",\"事件委托：由于事件冒泡的特性，可以在父元素上设置一个事件处理程序来管理所有子元素的同一类事件，这称为事件委托。这有助于减少内存消耗并简化代码。\",\"现代Web开发中，推荐使用DOM Level 2事件模型，因为它提供了更好的控制和更丰富的特性集。\"]},\"160\":{\"h\":\"事件对象\",\"t\":[\"在DOM事件处理中，当一个事件发生时，浏览器会创建一个事件对象（通常表示为<span class=\\\"ne-text\\\">event</span>），这个对象包含了关于事件的详细信息，以及一些可以调用的方法。事件对象作为参数自动传递给事件处理函数。\",\"事件对象包含以下常见的属性和方法：\",\"<span class=\\\"ne-text\\\">type</span>：事件的类型，例如 <span class=\\\"ne-text\\\">\\\"click\\\"</span>、<span class=\\\"ne-text\\\">\\\"mouseover\\\"</span>等。\",\"<span class=\\\"ne-text\\\">target</span>：触发事件的元素，也就是事件绑定的元素。\",\"<span class=\\\"ne-text\\\">currentTarget</span>：事件处理程序当前正在被执行的元素，这在事件委托中特别有用。\",\"<span class=\\\"ne-text\\\">eventPhase</span>：当前事件处于的阶段（捕获阶段、目标阶段或冒泡阶段）。\",\"<span class=\\\"ne-text\\\">bubbles</span>：指示事件是否冒泡。\",\"<span class=\\\"ne-text\\\">cancelable</span>：指示事件是否可以被取消。\",\"<span class=\\\"ne-text\\\">timeStamp</span>：事件被创建时的时间戳。\",\"<span class=\\\"ne-text\\\">preventDefault()</span>：取消事件的默认行为。\",\"<span class=\\\"ne-text\\\">stopPropagation()</span>：停止事件进一步传播。\",\"<span class=\\\"ne-text\\\">stopImmediatePropagation()</span>：停止事件的进一步传播，并且阻止同一元素上其他同类型事件的执行。\"]},\"161\":{\"h\":\"事件委托\",\"t\":[\"事件委托是一种技术，它利用了事件冒泡的原理。在这种技术中，事件监听器不是直接绑定在目标元素上，而是绑定在目标元素的父元素或祖先元素上。当子元素（目标元素）触发事件时，这个事件会冒泡到父元素，父元素上的事件处理程序就会执行。\",\"事件委托的优点包括：\",\"减少内存消耗：因为只需要在父元素上设置一个事件处理程序，而不是在每个子元素上都设置。\",\"动态元素管理：对于动态添加到DOM中的元素，不需要单独为它们添加事件处理程序，因为它们会继承父元素的事件处理程序。\",\"简化代码：可以简化事件处理代码，特别是当有多个元素需要相同类型的事件处理时。\",\"事件委托的实现示例：\",\"<div id=\\\"parent\\\"> <button>按钮1</button> <button>按钮2</button> <!-- 更多按钮 --> </div>\",\"const parentDiv = document.getElementById('parent'); parentDiv.addEventListener('click', function(event) { const target = event.target; // 事件实际触发的元素 if (target.tagName === 'BUTTON') { console.log('按钮被点击', target.textContent); } });\",\"在这个例子中，我们只在父元素<span class=\\\"ne-text\\\">div</span>上设置了一个点击事件的监听器。当任何按钮被点击时，事件会冒泡到 <span class=\\\"ne-text\\\">div</span>，然后事件处理程序会检查事件的目标是否是按钮。如果是，就执行相应的操作。这样，即使后续添加了更多的按钮，也不需要为它们单独设置事件监听器。\"]},\"162\":{\"h\":\"事件三要素是什么？\",\"t\":[\"事件类型（Event Type）\",\"事件目标（Event Target）\",\"事件处理器（Event Handler）\",\"拓展\",\"在DOM（文档对象模型）事件处理中，通常提到事件的三个基本要素，它们是：\",\"事件类型（Event Type）：\",\"这是触发事件的具体动作，比如<span class=\\\"ne-text\\\">click</span>、<span class=\\\"ne-text\\\">mouseover</span>、<span class=\\\"ne-text\\\">keydown</span>等。事件类型告诉你发生了什么类型的交互或动作。\",\"事件目标（Event Target）：\",\"这是触发事件的DOM元素。例如，如果你点击了一个按钮，那么这个按钮元素就是事件的目标。\",\"事件处理器（Event Handler）：\",\"这是当事件发生时，要执行的函数或代码。事件处理器是你定义的逻辑，用于响应特定的事件。\"]},\"163\":{\"h\":\"事件对象（Event Object）\",\"t\":[\"除了上述三个要素，还有一个重要的组成部分是事件对象。当事件被触发时，浏览器会创建一个事件对象，该对象包含了事件的详细信息和一些方法，用于控制事件的传播和默认行为。\",\"事件对象（Event Object）：\",\"这个对象作为参数自动传递给事件处理器函数。它提供了关于事件的详细信息，如事件的类型、目标、时间、是否可取消等。\",\"事件对象的方法包括<span class=\\\"ne-text\\\">preventDefault()</span>（取消事件的默认行为）、<span class=\\\"ne-text\\\">stopPropagation()</span>（停止事件的进一步传播）和 <span class=\\\"ne-text\\\">stopImmediatePropagation()</span>（停止事件的进一步传播，并阻止同一元素上其他同类型事件的执行）。\"]},\"164\":{\"h\":\"示例\",\"t\":[\"// 获取一个DOM元素 const button = document.getElementById('myButton'); // 定义一个事件处理器函数 function handleClick(event) { console.log('按钮被点击了'); console.log('事件类型:', event.type); // 事件类型 console.log('事件目标:', event.target); // 事件目标 // 可以调用事件对象的方法来控制事件行为 event.preventDefault(); event.stopPropagation(); } // 为按钮添加点击事件监听器 button.addEventListener('click', handleClick);\",\"在这个示例中，当按钮被点击时，会触发<span class=\\\"ne-text\\\">handleClick</span>事件处理器。这个处理器接收一个事件对象作为参数，从中可以访问事件的类型和目标，并且可以使用事件对象的方法来控制事件的行为。\"]},\"165\":{\"h\":\"获取元素位置？\",\"t\":[\"拓展\",\"在JavaScript中，获取元素的位置可以通过几种不同的方法，这些方法可以帮助你确定元素在页面上的确切位置，包括它距离页面左上角的距离，或者相对于其父元素的位置。以下是一些常用的方法：\"]},\"166\":{\"h\":\"1. 和\",\"t\":[\"这两个属性返回元素相对于其定位父元素（offset parent）的左（left）和顶（top）边的距离。\",\"const element = document.getElementById('myElement'); const xPos = element.offsetLeft; const yPos = element.offsetTop;\"]},\"167\":{\"h\":\"2.\",\"t\":[\"这个方法返回元素的大小以及其相对于视口的位置。它返回的是一个矩形对象，包含<span class=\\\"ne-text\\\">top</span>、<span class=\\\"ne-text\\\">right</span>、<span class=\\\"ne-text\\\">bottom</span>、<span class=\\\"ne-text\\\">left</span>、<span class=\\\"ne-text\\\">width</span>和 <span class=\\\"ne-text\\\">height</span>属性。\",\"const element = document.getElementById('myElement'); const rect = element.getBoundingClientRect(); const top = rect.top; const right = rect.right; const bottom = rect.bottom; const left = rect.left; const width = rect.width; const height = rect.height;\"]},\"168\":{\"h\":\"3.\",\"t\":[\"这个属性返回最近的含有定位（positioned）的父元素。如果所有父元素都没有定位，则返回最近的<span class=\\\"ne-text\\\"><table></span>或 <span class=\\\"ne-text\\\"><td></span>元素，如果这些元素也不存在，则返回 <span class=\\\"ne-text\\\"><body></span>元素。\",\"const element = document.getElementById('myElement'); const positionedParent = element.offsetParent;\"]},\"169\":{\"h\":\"4. 和\",\"t\":[\"这两个属性返回元素的边框宽度（border width），可以用来确定元素的内部尺寸。\",\"const element = document.getElementById('myElement'); const borderLeft = element.clientLeft; const borderTop = element.clientTop;\"]},\"170\":{\"h\":\"5. 和\",\"t\":[\"如果你需要获取元素的滚动位置，可以使用这两个属性。\",\"const element = document.getElementById('myElement'); const scrollLeft = element.scrollLeft; const scrollTop = element.scrollTop;\"]},\"171\":{\"h\":\"示例：获取元素相对于视口的位置\",\"t\":[\"以下示例展示了如何获取元素相对于浏览器视口的位置：\",\"const element = document.getElementById('myElement'); const rect = element.getBoundingClientRect(); const xPos = rect.left + window.scrollX; // 添加水平滚动距离 const yPos = rect.top + window.scrollY; // 添加垂直滚动距离 console.log(`Element is positioned at ${xPos} on the X-axis and ${yPos} on the Y-axis relative to the viewport.`);\",\"这些方法可以帮助你确定元素在页面上的位置，无论是相对于其父元素还是相对于整个视口。这对于执行动态布局、拖放功能或任何需要精确位置信息的操作都非常有用。\"]},\"172\":{\"h\":\"setTimeout和setInterval的区别及用法是什么？\",\"t\":[\"setTimeout(function, delay, [arg1, arg2, ...]);\",\"setInterval(function, interval, [arg1, arg2, ...]);\",\"** clearTimeout(timeoutId); // 停止setTimeout**\",\"** clearInterval(intervalId);**\",\"拓展\",\"<span class=\\\"ne-text\\\">setTimeout</span>和 <span class=\\\"ne-text\\\">setInterval</span>是JavaScript中用于定时执行代码的两个函数，它们都属于Window对象，也可用于Worker。尽管它们的目的相似，但用法和行为有所不同。\"]},\"173\":{\"h\":\"setTimeout\",\"t\":[\"<span class=\\\"ne-text\\\">setTimeout</span>用于在指定的毫秒数后执行一次代码。\",\"用法:\",\"setTimeout(function, delay, [arg1, arg2, ...]);\",\"<span class=\\\"ne-text\\\">function</span>: 要执行的函数。\",\"<span class=\\\"ne-text\\\">delay</span>: 延迟时间，单位为毫秒。\",\"<span class=\\\"ne-text\\\">arg1, arg2, ...</span>: 可选参数，传递给函数的参数。\",\"示例:\",\"function sayHello() { console.log('Hello after 3 seconds'); } setTimeout(sayHello, 3000); // 3秒后执行sayHello函数\"]},\"174\":{\"h\":\"setInterval\",\"t\":[\"<span class=\\\"ne-text\\\">setInterval</span>用于按照指定的时间间隔周期性地执行代码。\",\"用法:\",\"setInterval(function, interval, [arg1, arg2, ...]);\",\"<span class=\\\"ne-text\\\">function</span>: 要执行的函数。\",\"<span class=\\\"ne-text\\\">interval</span>: 每次执行的间隔时间，单位为毫秒。\",\"<span class=\\\"ne-text\\\">arg1, arg2, ...</span>: 可选参数，传递给函数的参数。\",\"示例:\",\"function repeatHello() { console.log('Hello every 2 seconds'); } const intervalId = setInterval(repeatHello, 2000); // 每2秒执行一次repeatHello函数\"]},\"175\":{\"h\":\"区别\",\"t\":[\"执行次数：<span class=\\\"ne-text\\\">setTimeout</span>执行一次后停止，而 <span class=\\\"ne-text\\\">setInterval</span>会不断重复执行，直到你明确地停止它（使用 <span class=\\\"ne-text\\\">clearInterval</span>）。\",\"延迟与间隔：<span class=\\\"ne-text\\\">setTimeout</span>的延迟是指从调用 <span class=\\\"ne-text\\\">setTimeout</span>到函数执行之间的时间。<span class=\\\"ne-text\\\">setInterval</span>的间隔是指函数执行之间的时间。\",\"停止执行：<span class=\\\"ne-text\\\">setTimeout</span>不需要手动停止，因为执行一次后自然结束。<span class=\\\"ne-text\\\">setInterval</span>需要使用 <span class=\\\"ne-text\\\">clearInterval</span>来停止。\"]},\"176\":{\"h\":\"停止定时器\",\"t\":[\"<span class=\\\"ne-text\\\">clearTimeout</span>用于停止 <span class=\\\"ne-text\\\">setTimeout</span>。\",\"<span class=\\\"ne-text\\\">clearInterval</span>用于停止 <span class=\\\"ne-text\\\">setInterval</span>。\",\"示例:\",\"const timeoutId = setTimeout(function() { console.log('This will not run'); }, 5000); clearTimeout(timeoutId); // 停止setTimeout const intervalId = setInterval(function() { console.log('This will run until it is cleared'); }, 1000); // 运行一段时间后停止 setTimeout(function() { clearInterval(intervalId); }, 10000);\"]},\"177\":{\"h\":\"注意事项\",\"t\":[\"当使用<span class=\\\"ne-text\\\">setInterval</span>时，如果执行的函数耗时较长，可能会导致执行重叠，即上一次执行还没完成，下一次又开始了。为了避免这种情况，可以使用 <span class=\\\"ne-text\\\">setTimeout</span>递归调用自身。\",\"<span class=\\\"ne-text\\\">setTimeout</span>和 <span class=\\\"ne-text\\\">setInterval</span>的精确度受到JavaScript单线程模型的限制，如果主线程被其他任务阻塞，定时器可能会延迟执行。\"]},\"178\":{\"h\":\"setTimeout来实现setInterval\",\"t\":[\"var timeWorker = {} var mySetInterval= function(fn, time) { // 定义一个key，来标识此定时器 var key = Symbol(); // 定义一个递归函数，持续调用定时器 var execute = function(fn, time) { timeWorker[key] = setTimeout(function(){ fn(); execute(fn, time); }, time) } execute(fn, time); // 返回key return key; } var myClearInterval = function(key) { if (key in timeWorker) { clearTimeout(timeWorker[key]); delete timeWorker[key]; } }\",\"拓展这段代码定义了两个函数：<span class=\\\"ne-text\\\">mySetInterval</span> 和 <span class=\\\"ne-text\\\">myClearInterval</span>，它们模拟了 <span class=\\\"ne-text\\\">setInterval</span> 和 <span class=\\\"ne-text\\\">clearInterval</span> 的行为，但是使用了 <span class=\\\"ne-text\\\">setTimeout</span> 来实现。这种方法可以避免 <span class=\\\"ne-text\\\">setInterval</span> 可能带来的一些问题，比如函数执行时间的不确定性和最小时间间隔的限制。\"]},\"179\":{\"h\":\"mySetInterval 函数\",\"t\":[\"这个函数接收两个参数：\",\"<span class=\\\"ne-text\\\">fn</span>：要重复执行的函数。\",\"<span class=\\\"ne-text\\\">time</span>：执行间隔时间，单位为毫秒。\",\"函数内部：\",\"**定义了一个 **<span class=\\\"ne-text\\\">key</span>，使用 <span class=\\\"ne-text\\\">Symbol</span> 来确保唯一性，这样可以在 <span class=\\\"ne-text\\\">timeWorker</span> 对象中唯一标识每个定时器。\",\"**定义了一个 **<span class=\\\"ne-text\\\">execute</span> 函数，它使用 <span class=\\\"ne-text\\\">setTimeout</span> 来实现定时调用 <span class=\\\"ne-text\\\">fn</span> 函数。每次 <span class=\\\"ne-text\\\">fn</span> 执行后，<span class=\\\"ne-text\\\">execute</span> 函数会再次调用自己，形成一个递归循环。\",\"**调用 **<span class=\\\"ne-text\\\">execute</span> 函数开始执行定时任务。\",\"**返回 **<span class=\\\"ne-text\\\">key</span>，这个 <span class=\\\"ne-text\\\">key</span> 可以用于以后取消定时任务。\"]},\"180\":{\"h\":\"myClearInterval 函数\",\"t\":[\"**这个函数用于取消由 **<span class=\\\"ne-text\\\">mySetInterval</span> 设置的定时任务。\",\"**它接收一个 **<span class=\\\"ne-text\\\">key</span> 参数，这个 <span class=\\\"ne-text\\\">key</span> 是 <span class=\\\"ne-text\\\">mySetInterval</span> 返回的。\",\"**如果 **<span class=\\\"ne-text\\\">timeWorker</span> 对象中存在这个 <span class=\\\"ne-text\\\">key</span>，则使用 <span class=\\\"ne-text\\\">clearTimeout</span> 来取消对应的定时器，然后从 <span class=\\\"ne-text\\\">timeWorker</span> 对象中删除这个 <span class=\\\"ne-text\\\">key</span>。\"]},\"181\":{\"h\":\"使用示例\",\"t\":[\"var myIntervalKey = mySetInterval(function() { console.log('这条消息会每2秒打印一次'); }, 2000); // 当你想停止定时任务时 myClearInterval(myIntervalKey);\"]},\"182\":{\"h\":\"注意事项\",\"t\":[\"**确保在不需要定时任务时调用 **<span class=\\\"ne-text\\\">myClearInterval</span> 来清除定时器，避免内存泄漏。\",\"**由于使用了 **<span class=\\\"ne-text\\\">Symbol</span> 作为 <span class=\\\"ne-text\\\">key</span>，所以每个定时器都是唯一的，即使在多个 <span class=\\\"ne-text\\\">mySetInterval</span> 调用之间也不会冲突。\",\"**这种方法比直接使用 **<span class=\\\"ne-text\\\">setInterval</span> 更灵活，因为它允许你在每次迭代后根据需要调整间隔时间或停止定时器。\"]},\"183\":{\"h\":\"document.write和innerHTML的区别？\",\"t\":[\"<span class=\\\"ne-text\\\">document.write</span> 主要用于在文档加载时写入内容，\",\"**而 **<span class=\\\"ne-text\\\">innerHTML</span> 用于在文档加载完成后修改元素的内容。\",\"拓展\",\"<span class=\\\"ne-text\\\">document.write</span> 和 <span class=\\\"ne-text\\\">innerHTML</span> 都是用来操作HTML文档内容的方法，但它们在用法和用途上有一些区别：\"]},\"184\":{\"h\":\"document.write\",\"t\":[\"<span class=\\\"ne-text\\\">document.write</span> 是一个只读属性，它返回当前文档的内容，如果尝试读取它的值，会返回空字符串。\",\"<span class=\\\"ne-text\\\">document.write</span> 方法可以用来向文档中写入字符串参数。当调用这个方法时，它会将字符串参数写入文档的输出流中。\",\"<span class=\\\"ne-text\\\">document.write</span> 只能用于在加载文档的过程中写入内容，一旦文档加载完成（即 <span class=\\\"ne-text\\\">DOMContentLoaded</span> 事件之后），再使用 <span class=\\\"ne-text\\\">document.write</span> 会清空整个文档的内容。\",\"<span class=\\\"ne-text\\\">document.write</span> 通常在服务器生成HTML或在文档加载时由JavaScript动态生成内容时使用。\"]},\"185\":{\"h\":\"innerHTML\",\"t\":[\"<span class=\\\"ne-text\\\">innerHTML</span> 是一个属性，它返回指定元素内的HTML内容。\",\"<span class=\\\"ne-text\\\">innerHTML</span> 可以用来读取或设置元素内的HTML内容。当你设置一个元素的 <span class=\\\"ne-text\\\">innerHTML</span> 属性时，它会替换该元素内部的所有内容（包括子元素）。\",\"<span class=\\\"ne-text\\\">innerHTML</span> 可以在任何时候使用，即使在文档加载完成后也可以安全地使用，不会导致整个文档内容被清空。\",\"<span class=\\\"ne-text\\\">innerHTML</span> 常用于动态更新页面的部分内容，比如通过JavaScript操作DOM来更改或添加新的元素和文本。\"]},\"186\":{\"h\":\"区别\",\"t\":[\"用途：<span class=\\\"ne-text\\\">document.write</span> 主要用于在文档加载时写入内容，而 <span class=\\\"ne-text\\\">innerHTML</span> 用于在文档加载完成后修改元素的内容。\",\"安全性：<span class=\\\"ne-text\\\">innerHTML</span> 可以导致跨站脚本（XSS）攻击，因为它允许执行HTML和JavaScript。在使用 <span class=\\\"ne-text\\\">innerHTML</span> 时，需要确保内容是安全的，不包含用户输入的恶意代码。<span class=\\\"ne-text\\\">document.write</span> 也有类似的安全风险。\",\"灵活性：<span class=\\\"ne-text\\\">innerHTML</span> 更灵活，因为它可以用于单个元素，而 <span class=\\\"ne-text\\\">document.write</span> 影响整个文档。\",\"性能 **：频繁使用 **<span class=\\\"ne-text\\\">innerHTML</span> 可能会导致性能问题，因为它涉及到DOM的重绘和重排。<span class=\\\"ne-text\\\">document.write</span> 在文档加载时使用，不涉及重绘和重排的问题。\"]},\"187\":{\"h\":\"示例\",\"t\":[\"// 使用 document.write document.write('<p>Hello World</p>'); // 使用 innerHTML var element = document.getElementById('myElement'); element.innerHTML = '<strong>Bold Text</strong>';\",\"**在实际开发中，推荐使用 **<span class=\\\"ne-text\\\">innerHTML</span> 来动态更新页面内容，因为它提供了更好的控制和灵活性。同时，要注意防范XSS攻击，确保处理的内容是安全的。\"]},\"188\":{\"h\":\"元素拖动如何实现，原理是怎样？\",\"t\":[\"原生\",\"mousedown：当鼠标按下时，记录当前鼠标位置和元素的初始位置。\",\"mousemove：当鼠标移动时，计算鼠标的新位置，并相应地移动元素。\",\"mouseup：当鼠标释放时，停止移动元素。\",\"使用HTML5拖放API\",\"draggable属性：给元素添加<span class=\\\"ne-text\\\">draggable=\\\"true\\\"</span>属性，使其可拖动。\",\"拖动事件：监听<span class=\\\"ne-text\\\">dragstart</span>、<span class=\\\"ne-text\\\">dragover</span>、<span class=\\\"ne-text\\\">dragend</span>等事件来控制拖动过程。\",\"拓展\",\"元素拖动是Web开发中常见的交互功能，可以通过原生JavaScript或HTML5的拖放API来实现。以下是两种方法的实现方式和原理：\"]},\"189\":{\"h\":\"使用原生JavaScript\",\"t\":[\"原生JavaScript实现元素拖动的原理是监听鼠标事件，通过计算鼠标移动的距离来更新元素的位置。\",\"mousedown：当鼠标按下时，记录当前鼠标位置和元素的初始位置。\",\"mousemove：当鼠标移动时，计算鼠标的新位置，并相应地移动元素。\",\"mouseup：当鼠标释放时，停止移动元素。\"]},\"190\":{\"h\":\"示例代码\",\"t\":[\"var dragElement = document.getElementById('draggable'); var offsetX, offsetY, dragX, dragY; dragElement.onmousedown = function(e) { // 获取鼠标点击时的屏幕坐标 offsetX = e.clientX - dragX; offsetY = e.clientY - dragY; // 绑定移动和松开事件 document.onmousemove = dragMove; document.onmouseup = stopDragging; }; function dragMove(e) { // 计算元素新的位置 dragX = e.clientX - offsetX; dragY = e.clientY - offsetY; // 设置元素的新位置 dragElement.style.left = dragX + 'px'; dragElement.style.top = dragY + 'px'; } function stopDragging() { // 解除鼠标移动和松开事件 document.onmouseup = null; document.onmousemove = null; }\"]},\"191\":{\"h\":\"使用HTML5拖放API\",\"t\":[\"HTML5提供了一套拖放API，可以更方便地实现拖动功能。\",\"draggable属性：给元素添加<span class=\\\"ne-text\\\">draggable=\\\"true\\\"</span>属性，使其可拖动。\",\"拖动事件：监听<span class=\\\"ne-text\\\">dragstart</span>、<span class=\\\"ne-text\\\">dragover</span>、<span class=\\\"ne-text\\\">dragend</span>等事件来控制拖动过程。\"]},\"192\":{\"h\":\"示例代码\",\"t\":[\"<div id=\\\"draggable\\\" draggable=\\\"true\\\">可拖动的元素</div> <div id=\\\"dropzone\\\">放置区域</div> <script> var dragItem = document.getElementById('draggable'); var dropZone = document.getElementById('dropzone'); dragItem.addEventListener('dragstart', function(e) { // 拖动开始时的事件处理 }); dropZone.addEventListener('dragover', function(e) { // 阻止默认行为以启用drop e.preventDefault(); }); dropZone.addEventListener('drop', function(e) { // 拖动结束并放置时的事件处理 var data = e.dataTransfer.getData(\\\"text\\\"); // 将拖动的元素移动到放置区域 dropZone.appendChild(dragItem); }); </script>\"]},\"193\":{\"h\":\"原理\",\"t\":[\"鼠标事件：通过监听鼠标事件来控制元素的移动。\",\"事件委托：在<span class=\\\"ne-text\\\">document</span>上监听事件，而不是直接在元素上，这样可以处理从元素外部移动到元素内部的情况。\",\"坐标计算：计算鼠标移动的距离，并更新元素的位置。\",\"CSS定位：通常使用CSS的<span class=\\\"ne-text\\\">position</span>属性（如 <span class=\\\"ne-text\\\">absolute</span>或 <span class=\\\"ne-text\\\">fixed</span>）来使元素脱离文档流，从而可以自由移动。\",\"在实际应用中，可以根据具体需求选择使用原生JavaScript或HTML5拖放API来实现元素拖动。HTML5拖放API提供了更丰富的功能和更好的浏览器兼容性，但可能需要处理更多的事件和细节。原生JavaScript方法则更灵活，可以自定义更多的行为和样式。\"]},\"194\":{\"h\":\"图片\",\"t\":[\"页面加载就像吃饭，懒加载就是吃多少盛多少，预加载就是把饭先盛好等你吃\",\"懒加载和预加载实现\",\"lazy preloadhttps://blog.csdn.net/weixin_49078296/article/details/140249963\",\"https://blog.csdn.net/qq_44741577/article/details/139324747\",\"拓展\",\"图片的懒加载（Lazy Loading）和预加载（Preloading）是两种优化网页性能的技术，它们分别用于减少初始页面加载时间并提高用户体验。\"]},\"195\":{\"h\":\"图片懒加载\",\"t\":[\"懒加载是一种延迟加载网页中非关键资源的技术。对于图片而言，懒加载意味着图片只有在接近滚动到视窗（viewport）时才开始加载。\",\"优点：\",\"减少初始页面加载时间：页面加载时不需要加载所有图片，从而减少了HTTP请求和数据传输量。\",\"节省带宽：用户可能只浏览页面的一部分，懒加载可以确保未浏览到的图片不会被加载。\",\"提高性能：对于图片较多的页面，懒加载可以显著提高页面的响应速度和性能。\",\"实现方式：\",\"原生JavaScript：通过监听滚动事件和计算元素的位置来实现。\",\"**HTML5 <span class=\\\"ne-text\\\">loading</span> ** 属性：<span class=\\\"ne-text\\\"><img loading=\\\"lazy\\\"></span>，现代浏览器支持这个属性，可以自动实现图片懒加载。\",\"Intersection Observer API：这是一个更现代和更高效的方法，用于异步检测目标元素与祖先元素或顶级文档视窗(<span class=\\\"ne-text\\\">viewport</span>)的交叉状态。\"]},\"196\":{\"h\":\"图片预加载\",\"t\":[\"预加载是一种在页面加载时就提前加载资源的技术。对于图片而言，预加载意味着在用户浏览到图片之前，图片已经被加载到浏览器缓存中。\",\"优点：\",\"提高用户体验：用户滚动到图片位置时，图片已经加载完成，无需等待加载。\",\"减少加载时间：通过提前加载图片，可以减少用户实际看到图片时的加载时间。\",\"实现方式：\",\"<span class=\\\"ne-text\\\">preload</span> ** 关键字** ：在CSS中使用<span class=\\\"ne-text\\\">preload</span>关键字预加载关键图片。\",\"link rel=\\\"preload\\\" href=\\\"image.jpg\\\" as=\\\"image\\\"\",\"JavaScript：使用JavaScript动态创建图片元素并设置其<span class=\\\"ne-text\\\">src</span>属性来预加载图片。\",\"const preloadImage = (url) => { const img = new Image(); img.src = url; }; preloadImage('important-image.jpg');\",\"CSS Sprites：将多个小图标合并到一个图片文件中，然后通过CSS背景位置来显示不同的图标，这样可以减少HTTP请求。\"]},\"197\":{\"h\":\"选择懒加载还是预加载？\",\"t\":[\"懒加载：适用于图片数量众多且不是所有图片都会立即需要的场景，特别是在长页面滚动或无限滚动的网页中。\",\"预加载：适用于关键路径上的资源，比如首屏显示的图片或对用户体验至关重要的资源。\",\"在实际应用中，可以根据页面的具体需求和用户行为来决定使用懒加载、预加载或两者结合使用。例如，对于首屏内容可以采用预加载，而对于页面下方的内容则可以使用懒加载。\"]},\"198\":{\"h\":\"mouseover和mouseenter的区别\",\"t\":[\"mouseover:只要鼠标指计移入事件所绑定的元素或其子元素，都会触发该事件\",\"mouseenter:只有鼠标指引事件所绑定的元素时，才会触发该事件\",\"就是mouseover存在冒泡，mouseenter不存在\",\"拓展\",\"<span class=\\\"ne-text\\\">mouseover</span> 和 <span class=\\\"ne-text\\\">mouseenter</span> 都是鼠标事件，但它们在触发行为和事件传播上有所不同。\"]},\"199\":{\"h\":\"mouseover\",\"t\":[\"当鼠标指针移动到元素上时触发。\",\"**如果鼠标指针移动到其子元素上，也会触发父元素上的 **<span class=\\\"ne-text\\\">mouseover</span> 事件。\",\"事件会冒泡，意味着如果鼠标指针移动到一个元素的子元素上，父元素也会接收到事件。\"]},\"200\":{\"h\":\"mouseenter\",\"t\":[\"**当鼠标指针移动到元素上时触发，与 **<span class=\\\"ne-text\\\">mouseover</span> 类似。\",\"**不同之处在于，当鼠标指针移动到其子元素上时，不会再次触发父元素上的 **<span class=\\\"ne-text\\\">mouseenter</span> 事件。\",\"**事件不会冒泡，父元素不会因子元素上的鼠标指针移动而触发 **<span class=\\\"ne-text\\\">mouseenter</span> 事件。\"]},\"201\":{\"h\":\"区别总结\",\"t\":[\"事件传播：<span class=\\\"ne-text\\\">mouseover</span> 会冒泡，而 <span class=\\\"ne-text\\\">mouseenter</span> 不会。\",\"子元素交互：当鼠标指针移动到子元素上时，<span class=\\\"ne-text\\\">mouseover</span> 会在所有包含的元素上触发，而 <span class=\\\"ne-text\\\">mouseenter</span> 只在最初进入的元素上触发一次。\"]},\"202\":{\"h\":\"示例\",\"t\":[\"<div id=\\\"parent\\\" onmouseenter=\\\"console.log('parent mouseenter')\\\"> <div id=\\\"child\\\" onmouseenter=\\\"console.log('child mouseenter')\\\"> Hover over me! </div> </div>\",\"在这个例子中，当你将鼠标指针移动到子元素上时：\",\"**使用 **<span class=\\\"ne-text\\\">mouseenter</span>，只会打印 \\\"parent mouseenter\\\" 一次，即使鼠标指针在子元素上移动，也不会再次触发父元素上的 <span class=\\\"ne-text\\\">mouseenter</span> 事件。\",\"**如果将 **<span class=\\\"ne-text\\\">mouseenter</span> 改为 <span class=\\\"ne-text\\\">mouseover</span>，则每次鼠标指针移动到子元素的不同位置时，都会触发父元素上的 <span class=\\\"ne-text\\\">mouseover</span> 事件，因为 <span class=\\\"ne-text\\\">mouseover</span> 会冒泡。\",\"**选择使用 **<span class=\\\"ne-text\\\">mouseover</span> 还是 <span class=\\\"ne-text\\\">mouseenter</span> 取决于你是否需要处理事件冒泡以及对子元素的交互是否敏感。\"]},\"203\":{\"h\":\"new操作符做了哪些事情\",\"t\":[\"创建一个新对象\",\"** 新对象原型指向构造函数原型对象**\",\"** 将构造函数的this指向新对象**\",\"根据返回值判断\",\"拓展\",\"**这段代码是一个自定义的构造函数 **<span class=\\\"ne-text\\\">mynew</span>，它模拟了 JavaScript 中 <span class=\\\"ne-text\\\">new</span> 操作符的行为。下面是对代码的逐行解释：\",\"**创建一个新对象 **<span class=\\\"ne-text\\\">obj</span>，这个对象将作为构造函数的实例。\",\"**将新对象的原型指向构造函数 **<span class=\\\"ne-text\\\">Func</span> 的原型对象，这样新对象就可以继承构造函数的原型上的属性和方法。\",\"**使用 **<span class=\\\"ne-text\\\">Func.apply(obj, args)</span> 调用构造函数，并将 <span class=\\\"ne-text\\\">this</span> 指向新对象 <span class=\\\"ne-text\\\">obj</span>，同时传入构造函数所需的参数 <span class=\\\"ne-text\\\">args</span>。这里有一个语法错误，应该是 <span class=\\\"ne-text\\\">Func.apply(obj, args)</span> 而不是 <span class=\\\"ne-text\\\">let result Func.apply(obj,args)</span>。\",\"**判断构造函数的返回值。如果返回值是一个对象，则返回该对象；否则，返回新创建的对象 **<span class=\\\"ne-text\\\">obj</span>。\",\"修正后的代码如下：\",\"function mynew(Func, ...args) { // 1. 创建一个新对象 const obj = {}; // 2. 新对象原型指向构造函数原型对象 obj.__proto__ = Func.prototype; // 3. 将构造函数的this指向新对象 const result = Func.apply(obj, args); // 4. 根据返回值判断 return result instanceof Object ? result : obj; }\",\"这样，<span class=\\\"ne-text\\\">mynew</span> 函数就可以像 <span class=\\\"ne-text\\\">new</span> 操作符一样使用了。例如：\",\"function Person(name) { this.name = name; } Person.prototype.sayHello = function() { console.log(`Hello, my name is ${this.name}.`); }; const person = mynew(Person, 'Kimi'); person.sayHello(); // 输出: Hello, my name is Kimi.\",\"**请注意，虽然这个自定义的 **<span class=\\\"ne-text\\\">mynew</span> 函数可以模拟 <span class=\\\"ne-text\\\">new</span> 操作符的行为，但在实际开发中，直接使用 <span class=\\\"ne-text\\\">new</span> 操作符更为简洁和可靠。此外，现代 JavaScript 开发中更推荐使用 <span class=\\\"ne-text\\\">class</span> 关键字来定义类和构造函数。\"]},\"204\":{\"h\":\"平时是怎么调试]S的\",\"t\":[\"浏览器开发者工具\",\"<span class=\\\"ne-text\\\">console</span>** API**\",\"断点\",\"拓展\",\"调试 JavaScript 代码是开发过程中的一个重要环节，可以帮助你理解代码的执行流程、查找和修复错误。以下是一些常用的 JavaScript 调试技巧和工具：\",\"浏览器开发者工具:\",\"Chrome DevTools: Chrome 浏览器内置的开发者工具非常强大，提供了元素检查、控制台、网络监控、性能分析、内存分析、断点调试等功能。\",\"Firefox Developer Tools: Firefox 浏览器的开发者工具同样提供了类似的功能，包括但不限于元素检查器、控制台、调试器、网络监控等。\",\"**使用 <span class=\\\"ne-text\\\">console</span> ** API:\",\"<span class=\\\"ne-text\\\">console.log()</span>: 输出信息到控制台，是最常用的调试方法。\",\"<span class=\\\"ne-text\\\">console.error()</span>: 输出错误信息，通常会显示在控制台的错误区域。\",\"<span class=\\\"ne-text\\\">console.warn()</span>: 输出警告信息，用于提示潜在的问题。\",\"<span class=\\\"ne-text\\\">console.info()</span>: 输出一般信息。\",\"<span class=\\\"ne-text\\\">console.debug()</span>: 输出调试信息，通常只在调试模式下显示。\",\"<span class=\\\"ne-text\\\">console.table()</span>: 以表格形式展示对象的属性。\",\"<span class=\\\"ne-text\\\">console.group()</span> 和 <span class=\\\"ne-text\\\">console.groupEnd()</span>: 用于将相关的输出分组。\",\"断点和步进执行:\",\"在代码中你想要检查的地方设置断点。\",\"使用步进（Step into）、步过（Step over）、步出（Step out）来逐行或逐函数执行代码。\",\"**使用 <span class=\\\"ne-text\\\">debugger</span> ** 语句:\",\"**在代码中添加 **<span class=\\\"ne-text\\\">debugger</span> 语句，当执行到这一行时，如果开发者工具是打开状态，代码执行将暂停。\",\"源代码映射（Source Maps）:\",\"当你使用构建工具（如 Webpack、Gulp 等）压缩或转译代码时，源代码映射可以帮助你将压缩后的代码映射回原始源代码，方便调试。\",\"性能分析器:\",\"使用浏览器的 Performance tab 来记录和分析页面加载和运行时的性能瓶颈。\",\"内存分析:\",\"使用 Heap Snapshot 和 Allocation Timeline 来分析内存使用情况，查找内存泄漏。\",\"网络监控:\",\"监控和分析页面的网络请求，包括请求的资源、加载时间、请求方法、状态码等。\",\"使用调试器 API:\",\"**浏览器提供了一些调试相关的 API，如 **<span class=\\\"ne-text\\\">console.clear()</span> 来清除控制台输出，<span class=\\\"ne-text\\\">console.count()</span> 来计数同一行代码被执行的次数等。\",\"单元测试:\",\"使用单元测试框架（如 Jest、Mocha、Jasmine）来编写测试用例，自动测试代码逻辑。\",\"代码审查:\",\"通过代码审查来发现潜在的问题，这可以是自我审查或者团队成员之间的相互审查。\",\"使用第三方调试工具:\",\"除了浏览器开发者工具，还有许多第三方调试工具，如 Visual Studio Code 的调试功能、Chrome 插件等。\",\"调试是一个迭代的过程，通常需要结合多种方法来定位和解决问题。随着经验的积累，你会更熟练地使用这些工具和技巧。\"]},\"205\":{\"h\":\"解释一下webworker\",\"t\":[\"https://blog.csdn.net/weixin_37680520/article/details/117623499\",\"https://blog.csdn.net/chenyajundd/article/details/137033829\",\"JavaScript是单线程模型，即所有任务只能在同一个线程上面完成\",\"Web Worker 的作用，就是为 JavaScript ** 创造多线程环境** ，允许主线程创建 Worker 线程，将一些任务分配给后者运行。\"]},\"206\":{\"h\":\"Web Worker 有以下几个使用注意点。\",\"t\":[\"**（1）**同源限制\",\"分配给 Worker 线程运行的脚本文件，必须与主线程的脚本文件同源。\",\"**（2）**DOM 限制\",\"Worker 线程所在的全局对象，与主线程不一样，无法读取主线程所在网页的 DOM 对象，也无法使用document、window、parent这些对象。但是，Worker 线程可以navigator对象和location对象。\",\"**（3）**通信联系\",\"Worker 线程和主线程不在同一个上下文环境，它们不能直接通信，必须****通过消息完成。\",\"**（4）**脚本限制\",\"Worker 线程不能执行alert()方法和confirm()方法，但可以使用 XMLHttpRequest 对象发出 AJAX 请求。\",\"**（5）**文件限制\",\"Worker 线程无法读取本地文件，即不能打开本机的文件系统（file://），它所加载的脚本，必须来自网络。\"]},\"207\":{\"h\":\"如何使用web worker\",\"t\":[\"**发送消息 : **postMessage\",\"**接收消息 : **onmessage\",\"拓展\",\"Web Workers 是一种在 Web 应用程序中进行多线程编程的机制。它允许你在后台线程中运行 JavaScript 代码，而不会干扰主线程的执行。这意味着你可以在不阻塞用户界面的情况下执行计算密集型任务。\",\"以下是 Web Workers 的一些关键点：\",\"线程隔离：Web Workers 运行在与主线程（UI 线程）隔离的环境中。这种隔离确保了 Worker 内的脚本错误不会导致主线程崩溃，同时也避免了 Worker 访问 DOM 的能力，因为它们在不同的执行环境中运行。\",\"通信 **：主线程和 Worker 之间通过消息传递进行通信。你可以使用 **<span class=\\\"ne-text\\\">postMessage()</span> 方法发送消息，并通过监听 <span class=\\\"ne-text\\\">message</span> 事件来接收消息。这种机制是双向的，允许两个线程之间交换数据。\",\"不访问 DOM：由于 Web Workers 运行在后台线程，它们没有权限直接访问 DOM。如果需要与 DOM 交互，你必须在主线程中执行这些操作，然后通过消息传递与 Worker 共享结果。\",\"生命周期 **：你可以使用 **<span class=\\\"ne-text\\\">Worker</span> 构造函数创建一个新的 Worker，然后通过调用它的 <span class=\\\"ne-text\\\">terminate()</span> 方法来终止它。当 Worker 执行完毕或者被终止时，它会自动清理资源。\",\"用途：Web Workers 适用于执行那些需要大量计算的任务，比如数据分析、视频处理、音频处理、复杂的图形渲染等，而不会导致用户界面变得不响应。\",\"限制 **：每个 Worker 都有自己的全局上下文，这意味着它们有自己的变量和全局对象。但是，Worker 不能共享全局变量或者全局对象（如 **<span class=\\\"ne-text\\\">window</span> 或 <span class=\\\"ne-text\\\">document</span>）。\",\"同源策略：Web Workers 受到同源策略的限制，即它们只能加载与主页面相同来源的脚本。\",\"性能考虑：虽然 Web Workers 可以提高性能，但它们也有自己的开销。创建和通信都涉及到一定的性能成本，因此应该明智地使用，避免过度使用。\",\"下面是一个简单的 Web Workers 示例：\",\"// main.js // 创建一个新的 Worker const myWorker = new Worker('worker.js'); // 接收来自 Worker 的消息 myWorker.onmessage = function(e) { console.log('Message received from worker', e.data); }; // 发送消息给 Worker myWorker.postMessage('Hello, worker!');\",\"// worker.js // 接收来自主线程的消息 self.onmessage = function(e) { console.log('Message received from main script', e.data); // 做一些计算... // 发送消息回主线程 self.postMessage('Hi, main script!'); };\",\"**在这个例子中，主线程创建了一个 Worker，并发送了一条消息。Worker 接收消息，处理它，然后回复主线程。主线程监听 **<span class=\\\"ne-text\\\">message</span> 事件来接收 Worker 的响应。\",\"1.主线程采用new命令，调用Worker()构造函数，新建一个 Worker 线程。 var worker = new Worker('./work.js'); 2.主线程调用worker.postMessage()方法，向 Worker 发消息。 worker.postMessage('Hello World'); 它可以是各种数据类型，包括二进制数据。 3.主线程通过worker.onmessage指定监听函数，接收子线程发回来的消息。 worker.onmessage = function (event) { console.log('Received message ' + event.data); doSomething(); } function doSomething() { // 执行任务 worker.postMessage('Work done!'); } // 这里的worker.onmessage 也可以换成self.addEventListener ,self代表子线程自身，即子线程的全局对象 等同于 self.addEventListener('message', function (e) { self.postMessage('You said: ' + e.data); }, false); 4.Worker 完成任务以后，主线程就可以把它关掉。 worker.terminate(); 5.Worker 内部如果要加载其他脚本，有一个专门的方法importScripts()。 importScripts('script1.js', 'script2.js'); 6.主线程可以监听 Worker 是否发生错误。如果发生错误，Worker 会触发主线程的error事件。 worker.onerror(function (event) { console.log([ 'ERROR: Line ', e.lineno, ' in ', e.filename, ': ', e.message ].join('')); }); // 或者 worker.addEventListener('error', function (event) { // ... });\"]},\"208\":{\"h\":\"Navigator -Javascript navigator对象详解\",\"t\":[\"https://blog.csdn.net/cuclife/article/details/139061021\",\"https://blog.csdn.net/cuclife/article/details/139061021\",\"<span class=\\\"ne-text\\\">navigator</span>对象是JavaScript中的一个内置对象，它提供了有关浏览器的信息。\",\"帮助开发者检测用户的浏览器环境，从而实现浏览器兼容性处理或者功能检测。\"]},\"209\":{\"h\":\"一、属性和方法概览\",\"t\":[\"<span class=\\\"ne-text\\\">navigator.appCodeName</span>: 返回浏览器的 代码名，通常为\\\"Mozilla\\\"。\",\"<span class=\\\"ne-text\\\">navigator.appName</span>: 返回浏览器的 名称，如\\\"Microsoft Internet Explorer\\\"。\",\"<span class=\\\"ne-text\\\">navigator.appVersion</span>: 返回浏览器的 平台和版本信息。\",\"<span class=\\\"ne-text\\\">navigator.userAgent</span>: 返回 用户代理字符串，包含****浏览器类型、版本号及操作系统等信息。\",\"<span class=\\\"ne-text\\\">navigator.platform</span>: 返回运行浏览器的 操作系统平台。\",\"<span class=\\\"ne-text\\\">navigator.language</span>: 返回用户的 首选语言。\",\"<span class=\\\"ne-text\\\">navigator.cookieEnabled</span>: 告诉你浏览器 是否支持并启用了cookie。\",\"<span class=\\\"ne-text\\\">navigator.onLine</span>: 表示用户当前 是否在线。\",\"<span class=\\\"ne-text\\\">navigator.geolocation</span>: 提供了 地理定位的功能（如果浏览器支持的话）。\",\"<span class=\\\"ne-text\\\">navigator.vendor</span>: 返回浏览器 供应商名称。\",\"…还有更多，比如与硬件相关的属性（比如<span class=\\\"ne-text\\\">navigator.hardwareConcurrency</span>查询CPU核心数，但使用需谨慎考虑隐私问题）。\"]},\"210\":{\"h\":\"三、注意事项\",\"t\":[\"隐私与安全：使用<span class=\\\"ne-text\\\">navigator</span>中的某些属性（如 <span class=\\\"ne-text\\\">geolocation</span>）时，应确保遵循用户的隐私偏好和相关法律法规，提供明确的用户许可请求。\",\"一致性问题：不同浏览器对<span class=\\\"ne-text\\\">navigator</span>对象的支持程度和返回值可能有差异，编写代码时应考虑这些差异，尽量采用广泛兼容的特性。\",\"User-Agent嗅探：虽然可以通过<span class=\\\"ne-text\\\">navigator.userAgent</span>进行浏览器或设备的简单识别，但这种方法不鼓励用于功能检测，因为User-Agent可以被轻易篡改，且现代Web开发更推荐使用特性检测（Feature Detection）而非浏览器嗅探。\",\"性能考量：频繁访问某些<span class=\\\"ne-text\\\">navigator</span>属性可能影响性能，特别是像 <span class=\\\"ne-text\\\">navigator.hardwareConcurrency</span>这样可能涉及复杂计算的属性。\"]},\"211\":{\"h\":\"三种事件模型是什么？\",\"t\":[\"拓展\",\"在 JavaScript 中，事件模型指的是事件的触发、处理和分发的方式。主要有三种事件模型：\",\"DOM 0 级事件模型：\",\"这是最古老的事件模型，直接绑定事件处理器到元素上。\",\"没有事件监听器的概念，而是直接将函数赋值给 HTML 元素的事件属性。\",\"这种方式的缺点是同一个元素的同一个事件只能绑定一个处理函数，而且不支持捕获和冒泡阶段。\",\"示例：\",\"document.getElementById('myButton').onclick = function() { alert('Button clicked!'); };\",\"DOM 2 级事件模型：\",\"也称为 DOM Level 2 Events，引入了事件监听器的概念。\",\"**支持 **<span class=\\\"ne-text\\\">addEventListener</span> 方法，可以为元素添加多个事件处理器，并且可以指定事件处理的三个阶段：无捕获（bubble）、捕获（capture）和冒泡（bubbling）。\",\"**可以使用 **<span class=\\\"ne-text\\\">removeEventListener</span> 方法移除事件处理器。\",\"示例：\",\"var button = document.getElementById('myButton'); button.addEventListener('click', function() { alert('Button clicked!'); }, false); // false 表示在冒泡阶段执行\",\"IE 事件模型：\",\"这是 Internet Explorer 浏览器特有的事件模型，与其他浏览器的 DOM 事件模型有所不同。\",\"**IE 事件模型使用 **<span class=\\\"ne-text\\\">attachEvent</span> 方法来绑定事件处理器，使用 <span class=\\\"ne-text\\\">detachEvent</span> 方法来移除事件处理器。\",\"IE 事件模型中的事件对象 (<span class=\\\"ne-text\\\">event</span>) 不是通过参数传递给事件处理器的，而是作为全局 <span class=\\\"ne-text\\\">window.event</span> 对象。\",\"示例：\",\"var button = document.getElementById('myButton'); button.attachEvent('onclick', function() { alert('Button clicked!'); });\",\"在现代 Web 开发中，推荐使用 DOM 2 级事件模型，因为它提供了更多的灵活性和控制能力。同时，为了兼容不支持 DOM 2 级事件模型的旧版 IE 浏览器，开发者可能需要使用 polyfills 或其他兼容性解决方案。\",\"需要注意的是，随着 Web 标准的不断发展，旧版的 IE 浏览器已经逐渐被淘汰，现代浏览器都支持 DOM 2 级事件模型。因此，DOM 2 级事件模型现在是事实上的标准，并且在现代 Web 开发中被广泛使用。\"]},\"212\":{\"c\":[\"JavaScript\"]},\"213\":{\"h\":\"Vue\"},\"214\":{\"h\":\"虚拟dom\",\"t\":[\"虚拟DOM就是用Js来模拟出DOM结构，通过****diff算法来计算出最小的变更，通过对应的渲染器，来渲染到页面上。\",\"同时虚拟DOM也为跨平台开发提供了极大的便利，开发者写的同一套代码（有些需要针对不同平台做区分），通过不同的渲染规则，就可以生成不同平台的代码。\",\"在vue中会通过****渲染器来将虚拟DOM转换为对应平台的真实DOM。如renderer(vnode， container)，该方法会根据vnode描述的信息（如tag、props、children）来创建DOM元素，根据规则为对应的元素添加属性和事件，处理vnode下的children。\"]},\"215\":{\"h\":\"双端diff算法和快速diff算法\",\"t\":[\"在Vue.js框架中，虚拟DOM的diff算法是用于比较新旧虚拟DOM树差异的核心机制，目的是为了高效地更新真实DOM。Vue 2和Vue 3在diff算法上有所不同，Vue 2使用的是双端diff算法，而Vue 3则引入了快速diff算法。\"]},\"216\":{\"h\":\"Vue 2的双端diff算法\",\"t\":[\"双端diff算法（Two-way diff）是一种在两端同时进行对比的算法。它从新旧两个虚拟DOM列表的头部和尾部开始，向中间进行扫描，寻找相同key的节点，并对这些节点进行更新或移动。这种方法可以减少不必要的DOM操作，但仍然存在一些性能瓶颈，尤其是在处理大量节点或复杂列表时。\"]},\"217\":{\"h\":\"Vue 3的快速diff算法\",\"t\":[\"Vue 3引入了快速diff算法，这是一种更高效的算法，它借鉴了纯文本diff算法的思想。快速diff算法在处理新旧节点列表时，会先进行预处理，找出可以确定无需比较的相同前后缀节点，然后只对中间不确定的部分进行深入比较。这种方法可以进一步减少不必要的DOM操作，提高性能。\",\"快速diff算法的核心在于使用了一个名为source数组来记录新节点的位置索引，并通过构建最长递增子序列（Longest Increasing Subsequence, LIS）来确定哪些节点需要移动。这种方法相比双端diff算法，处理的边际条件更少，性能更优。\"]},\"218\":{\"h\":\"总结\",\"t\":[\"Vue 3的快速diff算法相比Vue 2的双端diff算法，在处理复杂列表更新时，能够提供更好的性能。它通过预处理和最长递增子序列的构建，减少了不必要的DOM操作，使得渲染更新更加高效。这种算法的改进是Vue 3性能提升的一个重要方面。\"]},\"219\":{\"h\":\"vue2和vue3有哪些不同\",\"t\":[\"Vue 2 和 Vue 3 都是流行的前端框架 Vue.js 的主要版本，它们在功能、性能和语法上有一些显著的差异。以下是 Vue 2 和 Vue 3 之间的一些主要区别：\",\"响应式系统的重写：\",\"**Vue 2 使用的是 **<span class=\\\"ne-text\\\">defineProperty</span>（Object.defineProperty）来实现响应式系统。\",\"Vue 3 引入了基于 Proxy 的响应式系统，这使得 Vue 3 能够更高效地追踪依赖和更新视图。\",\"Composition API：\",\"Vue 3 引入了 Composition API，这是一种新的编写组件逻辑的方式，它提供了更好的代码组织和复用性，特别是在处理复杂组件时。\",\"Fragment、Teleport 和 Suspense：\",\"**Vue 3 引入了新的内置组件，如 **<span class=\\\"ne-text\\\">Fragment</span>（允许多个根节点）、<span class=\\\"ne-text\\\">Teleport</span>（可以将组件的子节点传输到 DOM 的其他部分）和 <span class=\\\"ne-text\\\">Suspense</span>（用于异步组件的加载状态处理）。\",\"性能提升：\",\"Vue 3 在虚拟 DOM 的重写、组件初始化、编译器优化等方面都进行了性能提升。\",\"Tree-shaking 支持：\",\"Vue 3 的模块化系统更好地支持了 Tree-shaking，这意味着在最终的构建中可以移除未使用的代码，从而减少应用的大小。\",\"自定义渲染器 API：\",\"Vue 3 提供了更灵活的自定义渲染器 API，允许开发者创建自定义的渲染器。\",\"全局 API 的更改：\",\"**Vue 3 对全局 API 进行了更改，例如 **<span class=\\\"ne-text\\\">Vue.prototype</span> 被 <span class=\\\"ne-text\\\">app.config.globalProperties</span> 替代。\",\"模板和组件的改进：\",\"**Vue 3 改进了模板编译器，支持更广泛的 JavaScript 特性，并允许在 **<span class=\\\"ne-text\\\"><script></span> 标签中使用新的语法。\",\"TypeScript 支持：\",\"Vue 3 的代码库使用 TypeScript 重写，提供了更好的类型推断和类型检查。\",\"内部重构：\",\"Vue 3 进行了大规模的内部重构，包括虚拟 DOM 的重写和响应式系统的改进。\",\"新的生命周期钩子：\",\"**Vue 3 引入了一些新的生命周期钩子，如 **<span class=\\\"ne-text\\\">onBeforeMount</span>、<span class=\\\"ne-text\\\">onMounted</span>、<span class=\\\"ne-text\\\">onBeforeUpdate</span>、<span class=\\\"ne-text\\\">onUpdated</span>、<span class=\\\"ne-text\\\">onBeforeUnmount</span> 和 <span class=\\\"ne-text\\\">onUnmounted</span>。\",\"更好的组件通信：\",\"**Vue 3 提供了 **<span class=\\\"ne-text\\\">provide</span> 和 <span class=\\\"ne-text\\\">inject</span> 的改进版本，使得跨组件的状态共享更加方便。\",\"这些改进使得 Vue 3 在性能、可维护性和开发体验上都有了显著的提升。开发者在升级到 Vue 3 时，需要对这些变化有所了解，并可能需要对现有的代码进行一些调整。\"]},\"220\":{\"h\":\"vue3双向绑定实现\",\"t\":[\"劫持数据 Proxy\",\"依赖收集 get\",\"**派发更新 set **\",\"// WeakMap常用于存储只有当key所引用的对象存在时（没有被回收）才有价值的消息，十分贴合双向绑定场景 const bucket = new WeakMap(); // 存储副作用函数 let activeEffect; // 用一个全局变量处理被注册的函数 const tempObj = {}; // 临时对象，用于操作 const data = { text: \\\"hello world\\\" }; // 响应数据源 // 用于清除依赖 function cleanup(effectFn) { for (let i = 0; i < effectFn.deps.length; i++) { const deps = effectFn.deps[i]; deps.delete(effectFn); } effectFn.deps.length = 0; } // 处理依赖函数 function effect(fn) { const effectFn = () => { cleanup(effectFn); activeEffect = effectFn; fn(); }; effectFn.deps = []; effectFn(); } // 在get时拦截函数调用track函数追踪变化 function track(target, key) { if (!activeEffect) return; // let depsMap = bucket.get(target); if (!depsMap) { bucket.set(target, (depsMap = new Map())); } let deps = depsMap.get(key); if (!deps) { depsMap.set(key, (deps = new Set())); } deps.add(activeEffect); activeEffect.deps.push(deps); } // 在set拦截函数内调用trigger来触发变化 function trigger(target, key) { const depsMap = bucket.get(target); if (!depsMap) return; const effects = depsMap.get(key); const effectsToRun = new Set(effects); effectsToRun.forEach(effectFn => effectFn()); // effects && effects.forEach(fn => fn()); } const obj = new Proxy(data, { // 拦截读取操作 get(target, key) { if (!activeEffect) return; // console.log(\\\"get -> key\\\", key); track(target, key); return target[key]; }, // 拦截设置操作 set(target, key, newValue) { console.log(\\\"set -> key: newValue\\\", key, newValue); target[key] = newValue; trigger(target, key); }, }); effect(() => { tempObj.text = obj.text; console.log(\\\"tempObj.text :>> \\\", tempObj.text); }); setTimeout(() => { obj.text = \\\"hi vue3\\\"; }, 1000);\"]},\"221\":{\"h\":\"vue3中的ref、toRef、toRefs总结\"},\"222\":{\"h\":\"总结\",\"t\":[\"<span class=\\\"ne-text\\\">ref</span> 用于创建单一值的响应式引用。\",\"<span class=\\\"ne-text\\\">toRef</span> 用于创建对象某个属性的响应式引用。\",\"<span class=\\\"ne-text\\\">toRefs</span> 用于将响应式对象的每个属性转换为响应式引用。\",\"computed和watch的区别\",\"拓展\",\"在 Vue 3 中，响应式系统得到了重写，引入了基于 Proxy 的 API，这使得 Vue 3 的响应式特性更加强大和灵活。<span class=\\\"ne-text\\\">ref</span>、<span class=\\\"ne-text\\\">toRef</span> 和 <span class=\\\"ne-text\\\">toRefs</span> 是 Vue 3 中与响应式系统相关的几个重要函数，它们在 Composition API 中扮演着关键角色。\"]},\"223\":{\"h\":\"ref\",\"t\":[\"<span class=\\\"ne-text\\\">ref</span> 是一个用于创建响应式引用的函数。它接受一个值作为参数，并返回一个包含 <span class=\\\"ne-text\\\">.value</span> 属性的响应式对象。这个对象的 <span class=\\\"ne-text\\\">.value</span> 属性指向原始值，并且当原始值改变时，任何依赖于该响应式引用的组件都会重新渲染。\",\"import { ref } from 'vue'; const count = ref(0); // 创建一个响应式引用\",\"**在模板中使用时，可以直接访问 **<span class=\\\"ne-text\\\">.value</span> 属性：\",\"<template> <div>{{ count.value }}</div> </template>\",\"**或者在 Vue 3.2 及更高版本中，可以使用 **<span class=\\\"ne-text\\\">v-model</span> 指令的 <span class=\\\"ne-text\\\">modelValue</span> 和 <span class=\\\"ne-text\\\">\\\"update:modelValue\\\"</span> 事件进行更简洁的绑定：\",\"<template> <input v-model=\\\"count\\\" /> </template>\"]},\"224\":{\"h\":\"toRef\",\"t\":[\"<span class=\\\"ne-text\\\">toRef</span> 用于创建一个响应式引用，但它是针对对象的某个属性。当你有一个响应式对象，并想要创建一个仅针对其某个属性的响应式引用时，可以使用 <span class=\\\"ne-text\\\">toRef</span>。\",\"import { toRef } from 'vue'; const state = reactive({ count: 0 }); const countRef = toRef(state, 'count'); // 创建一个仅针对 state.count 的响应式引用\",\"这样，<span class=\\\"ne-text\\\">countRef</span> 将仅追踪 <span class=\\\"ne-text\\\">state</span> 对象中 <span class=\\\"ne-text\\\">count</span> 属性的变化。\"]},\"225\":{\"h\":\"toRefs\",\"t\":[\"<span class=\\\"ne-text\\\">toRefs</span> 用于将一个响应式对象转换为一个包含多个响应式引用的对象。这在处理由 <span class=\\\"ne-text\\\">reactive</span> 创建的响应式对象时非常有用，因为它允许你保留每个属性的响应性。\",\"import { toRefs } from 'vue'; const state = reactive({ count: 0, name: 'Vue' }); const { count, name } = toRefs(state);\",\"现在，<span class=\\\"ne-text\\\">count</span> 和 <span class=\\\"ne-text\\\">name</span> 都是响应式引用，它们的更新将触发依赖它们的组件重新渲染。\"]},\"226\":{\"h\":\"总结\",\"t\":[\"<span class=\\\"ne-text\\\">ref</span> 用于创建单一值的响应式引用。\",\"<span class=\\\"ne-text\\\">toRef</span> 用于创建对象某个属性的响应式引用。\",\"<span class=\\\"ne-text\\\">toRefs</span> 用于将响应式对象的每个属性转换为响应式引用。。这些函数是 Vue 3 Composition API 的基础，它们提供了一种灵活的方式来处理响应式数据。\"]},\"227\":{\"h\":\"computed和watch的区别\",\"t\":[\"使用场景：computed适用于一个数据 受多个数据影响 使用；\",\"watch适合一个数据 影响 多个数据使用。\",\"区别：computed属性默认会走缓存，只有依赖数据发生变化，才会重新计算，不支持异步，有异步导致数据发生变化时，无法做出相应改变；\",\"watch不依赖缓存，一旦数据发生变化就直接触发响应操作，支持异步。\"]},\"228\":{\"h\":\"vue-router的路由守卫\",\"t\":[\"全局前置守卫\",\" router.beforeEach((to, from, next) => { // to: 即将进入的目标 // from:当前导航正要离开的路由 return false // 返回false用于取消导航 return {name: 'Login'} // 返回到对应name的页面 next({name: 'Login'}) // 进入到对应的页面 next() // 放行 })\",\"全局解析守卫:类似beforeEach\",\"router.beforeResolve(to => { if(to.meta.canCopy) { return false // 也可取消导航 } })\",\"全局后置钩子\",\"router.afterEach((to, from) => { logInfo(to.fullPath) })\",\"导航错误钩子，导航发生错误调用\",\"router.onError(error => { logError(error) })\",\"路由独享守卫,beforeEnter可以传入单个函数，也可传入多个函数。\",\"function dealParams(to) { // ... } function dealPermission(to) { // ... } const routes = [ { path: '/home', component: Home, beforeEnter: (to, from) => { return false // 取消导航 }, // beforeEnter: [dealParams, dealPermission] } ]\",\"组件内的守卫\",\"const Home = { template: `...`, beforeRouteEnter(to, from) { // 此时组件实例还未被创建，不能获取this }, beforeRouteUpdate(to, from) { // 当前路由改变，但是组件被复用的时候调用，此时组件已挂载好 }, beforeRouteLeave(to, from) { // 导航离开渲染组件的对应路由时调用 } }\"]},\"229\":{\"h\":\"composition Api对比 option Api的优势\",\"t\":[\"更好的****代码组织\",\"--组合式API\",\"更好的****逻辑复用\",\"**--Hooks钩子函数 及 替代mixin的 **自定义的use 前缀的 Hooks\",\"更好的****类型推导\",\"--TS\"]},\"230\":{\"c\":[\"vue\"]},\"231\":{\"h\":\"React\"},\"232\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"233\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"234\":{\"c\":[\"React\"]},\"235\":{\"h\":\"node.js\"},\"236\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"237\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"238\":{\"c\":[\"node.js\"]},\"239\":{\"h\":\"Express\",\"t\":[\"一个被数字 10 星标了的香蕉文章。\"]},\"240\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"241\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"242\":{\"c\":[\"Express\"]},\"243\":{\"h\":\"Linux\"},\"244\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"245\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"246\":{\"c\":[\"Linux\"]},\"247\":{\"h\":\"C\"},\"248\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"249\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"250\":{\"c\":[\"C\"]},\"251\":{\"h\":\"Html5和CSS3\"},\"252\":{\"h\":\"常见的水平垂直居中实现方案\",\"t\":[\"https://blog.csdn.net/m0_70705683/article/details/135777987\",\"方案总结\",\"方案总结\"]},\"253\":{\"h\":\"利用定位(父相子绝) + 位移\",\"t\":[\"-- 父相子绝 + 子 margin:auto;\",\"-- 父相子绝 + 子 top,left 位移50%; transform:translate(-50%,-50%);\",\"<style> .father{ //width,height,其他省略 position: relative; } .son{ position: absolute; top:0; left:0; right:0; bottom:0; margin:auto; } </style> <div class=\\\"father\\\"> <div class=\\\"son\\\"></div> </div>\"]},\"254\":{\"h\":\"利用定位+margin:负值\",\"t\":[\"<style> .father { position: relative; width: 200px; height: 200px; background: skyblue; } .son { position: absolute; top: 50%; left: 50%; margin-left:-50px; margin-top:-50px; width: 100px; height: 100px; background: red; } </style> <div class=\\\"father\\\"> <div class=\\\"son\\\"></div> </div>\"]},\"255\":{\"h\":\"table布局\",\"t\":[\"<style> .father { //width,height,其他省略 display: table-cell; text-align: center;//水平居中 vertical-align: middle;//垂直居中 } .son { //width,height,其他省略 display: inline-block; } </style> <div class=\\\"father\\\"> <div class=\\\"son\\\"></div> </div>\"]},\"256\":{\"h\":\"flex弹性布局\",\"t\":[\"<style> .father { display: flex; justify-content: center;//主轴居中,默认水平居中 align-items: center;//交叉轴居中,默认垂直居中 } .son { } </style> <div class=\\\"father\\\"> <div class=\\\"son\\\"></div> </div>\"]},\"257\":{\"h\":\"grid网格布局\",\"t\":[\"<style> .father { display: grid; justify-content: center;//主轴居中,默认水平居中 align-items: center;//交叉轴居中,默认垂直居中 } .son { } </style> <div class=\\\"father\\\"> <div class=\\\"son\\\"></div> </div>\"]},\"258\":{\"h\":\"拓展\",\"t\":[\"在CSS中实现元素的水平和垂直居中布局是一个常见需求，不同的元素类型（内联元素和块级元素）和布局方法（如Flexbox、Grid、定位等）提供了多种解决方案。以下是对您提供的文件内容的总结：\"]},\"259\":{\"h\":\"内联元素居中布局\",\"t\":[\"水平居中：\",\"**行内元素可以通过设置父元素的 **<span class=\\\"ne-text\\\">text-align: center;</span> 来实现水平居中。\",\"**使用Flexbox布局，可以设置父元素为 **<span class=\\\"ne-text\\\">display: flex;</span> 并使用 <span class=\\\"ne-text\\\">justify-content: center;</span> 来实现水平居中。\",\"垂直居中：\",\"对于单行文本，可以通过设置父元素的高度等于行高（<span class=\\\"ne-text\\\">height === line-height</span>）来实现垂直居中。\",\"**对于多行文本，可以使用表格单元格布局，将父元素设置为 **<span class=\\\"ne-text\\\">display: table-cell;</span> 并使用 <span class=\\\"ne-text\\\">vertical-align: middle;</span> 来实现垂直居中。\"]},\"260\":{\"h\":\"块级元素居中布局\",\"t\":[\"水平居中：\",\"**对于已定义宽度的元素，可以通过设置 **<span class=\\\"ne-text\\\">margin: 0 auto;</span> 来实现水平居中。\",\"**使用绝对定位，可以将元素的 **<span class=\\\"ne-text\\\">left</span> 属性设置为 <span class=\\\"ne-text\\\">50%</span>，然后使用 <span class=\\\"ne-text\\\">margin-left</span> 设置为元素宽度的一半的负值来实现水平居中。\",\"垂直居中：\",\"**使用绝对定位，可以设置元素的 **<span class=\\\"ne-text\\\">top</span>、<span class=\\\"ne-text\\\">left</span>、<span class=\\\"ne-text\\\">margin-top</span> 和 <span class=\\\"ne-text\\\">margin-left</span>（如果已定义高度）来实现垂直居中。\",\"**通过设置父元素为 **<span class=\\\"ne-text\\\">display: table-cell;</span> 并使用 <span class=\\\"ne-text\\\">vertical-align: middle;</span> 可以实现垂直居中。\",\"**使用 **<span class=\\\"ne-text\\\">transform: translate(x, y);</span> 可以在不知道元素宽高的情况下实现垂直居中。\",\"使用Flexbox（<span class=\\\"ne-text\\\">display: flex;</span>）和Grid（<span class=\\\"ne-text\\\">display: grid;</span>）也可以实现垂直居中，但Grid的兼容性相对较差。\"]},\"261\":{\"h\":\"BFC问题\",\"t\":[\"思维导图\",\"https://blog.csdn.net/qq_63299825/article/details/131048599\"]},\"262\":{\"h\":\"的定义 (一个独立的渲染区)\",\"t\":[\"BFC（Block Formatting Context），即块级格式化上下文，它是页面中的一块渲染区域，并且有一套属于自己的渲染规则,\",\"1.内部的盒子会在垂直方向上一个接一个的放置\",\"2.对于同一个BFC的俩个相邻的盒子的margin会发生重叠，与方向无关。\",\"3.每个元素的左外边距与包含块的左边界相接触（从左到右），即使浮动元素也是如此\",\"4.BFC的区域不会与float的元素区域重叠\",\"5.计算BFC的高度时，浮动子元素也参与计算\",\"6.BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素，反之亦然\",\"BFC目的是形成一个相对于外界完全独立的空间，让内部的子元素不会影响到外部的元素\",\"在页面布局阶段，往往会因为BFC问题导致 页面布局发生错乱，如外边距合并问题，元素高度丢失，两栏布局没有实现自适应。\"]},\"263\":{\"h\":\"二、触发BFC的条件\",\"t\":[\"1.根元素，即HTML元素\",\"2.浮动元素：float值为left、right\",\"3.overflow值不为 visible，为 auto、scroll、hidden\",\"4.display的值为除了none以外的全部值, inline-block、inltable-cell、table-caption、table、inline-table、flex、inline-flex、grid、inline-grid\",\"5.position的值为absolute或fixed\"]},\"264\":{\"h\":\")\"},\"265\":{\"h\":\"\",\"t\":[\"当兄弟盒子设置 同时给兄弟元素设置一个下外边距同时设置一个上外边距,发生外边距合并\",\" <style> div:first-child { width: 100px; height: 100px; background: red; margin-bottom: 10px; } div:last-child { width: 100px; height: 100px; background: green; margin-top: 20px; } </style> <div class=\\\"cube\\\"></div> <div class=\\\"cube\\\"></div>\",\"**最佳方法:**当我们 给第一个盒子一个父盒子，并触发父盒子生成一个BFC,那么两个div就不属于同一个BFC,则不会出现外边距重叠问题。\",\" <style> .cube { width: 100px; height: 100px; background-color: red; margin-bottom: 10px; } .cube1:last-child { width: 100px; height: 100px; background-color: red; margin-top: 20px; } .container { /* 开启bfc属性 */ overflow: hidden; } </style> <div class=\\\"container\\\"> <div class=\\\"cube\\\"></div> </div> <div class=\\\"cube1\\\"></div>\"]},\"266\":{\"h\":\"\",\"t\":[\"在父元素parent计算高度时，并没有计算子元素child的高度。\",\" <style> .parent { border: 10px solid red; } .child { width: 100px; height: 100px; background-color: blue; /* 浮动效果 */ float: left; } </style> <div class=\\\"parent\\\"> <div class=\\\"child\\\"></div> </div>\",\"我们给父元素生成BFC后，父元素在计算高度时就会将浮动子元素child的高度也计算到其中\",\" .parent { border: 10px solid red; /* 开启bfc overflow hidden auto */ overflow: hidden; }\"]},\"267\":{\"h\":\"3.实现两栏布局\",\"t\":[\"左侧设置宽度，右边自适应，右边开启BFC\",\" <style> .left{ width: 300px; background-color: red; float: left; } .right{ background-color: blue; /* 开启bfc */ overflow: hidden; } </style> <div class=\\\"left\\\">左侧定宽</div> <div class=\\\"right\\\">右侧自适应右侧自适应右侧自适应右侧自适应 右侧自适应右侧自适应右侧自适应右侧自适应右侧自适应右侧自适应 右侧自适应右侧自适应右侧自适应右侧自适应右侧自适应右侧自适应 右侧自适应右侧自适应右侧自适应右侧自适应右侧自适应右侧自适应 </div>\",\"实现了两栏布局且右边是自适应\"]},\"268\":{\"h\":\"4.实现三栏布局\",\"t\":[\"思路:左右两边固定宽度，给左盒子float:left;给右盒子float:right，给中间盒子开启BFC,实现左右固定宽度，中间自适应的效果\",\" <style> /* 三列布局 左侧右侧定宽 中间自适应 */ .left, .right { width: 100px; height: 50px; background-color: red; } .left { float: left; } .right { float: right; } .center { height: 100px; background-color: blue; /* 开启bfc */ overflow: hidden; } </style> <div class=\\\"left\\\"></div> <div class=\\\"right\\\"></div> <div class=\\\"center\\\"></div>\"]},\"269\":{\"h\":\"三、外边距合并问题\",\"t\":[\".兄弟级外边距合并\",\"** 合并出现原因:同时给兄弟元素设置一个下外边距同时设置一个上外边距,发生外边距合并**\",\"** 合并解决方案:**\",\"** 1.只给其中一个兄弟元素设置外边距**\",\"** 2.给下边外边距开启BFC**\",\"** 1.display:inline-blick/flex**\",\"** 2.position:absolute/fixed**\",\"** 3.float:left**\",\"** 3.给上边兄弟元素设置一个父元素 给父元素开启BFC**\",\"** overflow hidden/auto **\",\"** 2.父子级外边距合并**\",\"** 合并出现原因:同时给父子元素设置同一方向的一个外边距**\",\"** 合并解决方案:**\",\"** 1.给父元素设置padding属性**\",\"** 2.给父元素设置border边框**\"]},\"270\":{\"h\":\"flex:1:是哪些属性的缩写，对应的属性代表什么含义\",\"t\":[\"flex:1 属性时，\",\"代表 flex-grow: 1、flex-shirnk：1、flex-basis：0%\",\"思维导图\",\"flex:1实际代表的是三个属性的简写\",\"flex-grow是用来增大盒子的，比如，当父盒子的宽度大于子盒子的宽度，父盒子的剩余空间可以利用flex-grow来设置子盒子增大的占比\",\"flex-shrink用来设置子盒子超过父盒子的宽度后，超出部分进行缩小的取值比例\",\"flex-basis是用来设置盒子的基准宽度，并且basis和width同时存在basis会把width干掉\",\"所以flex：1；的逻辑就是用flex-basis把width干掉，然后再用flex-grow和flex-shrink增大的增大缩小的缩小，达成最终的效果**。**\",\"<span class=\\\"ne-text\\\">flex-basis</span>：指定元素在主轴的大小，可以等同 <span class=\\\"ne-text\\\">width</span>或者 <span class=\\\"ne-text\\\">height</span>，优先级要高于 <span class=\\\"ne-text\\\">width</span> 和 <span class=\\\"ne-text\\\">height</span>\",\"https://www.cnblogs.com/mmzuo-798/p/17246920.html\"]},\"271\":{\"h\":\"隐藏元素 的属性有哪些\",\"t\":[\"思维导图\",\"在CSS中，隐藏元素可以通过多种方式实现，每种方式都有其特定的用途和效果。以下是一些常用的方法来隐藏元素：\",\"<span class=\\\"ne-text\\\">display: none;</span>：\",\"完全从文档流中移除元素，不占据任何空间。\",\"元素不会被显示，也不会影响到其他元素的布局。\",\"<span class=\\\"ne-text\\\">visibility: hidden;</span>：\",\"元素在页面上不可见，但它仍占据着原来的空间。\",\"**与 **<span class=\\\"ne-text\\\">display: none;</span> 不同，使用 <span class=\\\"ne-text\\\">visibility: hidden;</span> 隐藏的元素仍会影响布局，因为它仍占据空间。\",\"<span class=\\\"ne-text\\\">opacity: 0;</span>：\",\"将元素的透明度设置为0，使其完全透明，从而看不见。\",\"元素仍然占据空间，并且可以响应交互（如点击）。\",\"<span class=\\\"ne-text\\\">z-index: -1;</span>：\",\"**通过将 **<span class=\\\"ne-text\\\">z-index</span> 属性设置为负值，可以使元素被其他元素覆盖，从而在视觉上“隐藏”。\",\"元素仍然可见，如果页面上没有其他元素覆盖它，或者在某些情况下，它可能会重新可见。\",\"<span class=\\\"ne-text\\\">position: absolute;</span> 与 <span class=\\\"ne-text\\\">left</span>/<span class=\\\"ne-text\\\">top</span> 属性结合：\",\"**将元素通过绝对定位移出视口外，例如设置 **<span class=\\\"ne-text\\\">left: -9999px;</span> 或 <span class=\\\"ne-text\\\">top: -9999px;</span>。\",\"元素不可见，但仍然占据空间。\",\"<span class=\\\"ne-text\\\">clip-path: inset(100%);</span> 或 <span class=\\\"ne-text\\\">clip: rect(0, 0, 0, 0);</span>：\",\"**使用 **<span class=\\\"ne-text\\\">clip-path</span> 或 <span class=\\\"ne-text\\\">clip</span> 属性将元素的可视区域设置为0，从而在视觉上隐藏元素。\",\"元素不可见，且不占据空间。\",\"<span class=\\\"ne-text\\\">height: 0; width: 0;</span>：\",\"将元素的宽度和高度设置为0，使其不可见。\",\"元素不可见，且不占据空间，除非有边框或内边距。\",\"<span class=\\\"ne-text\\\">overflow: hidden;</span>：\",\"**当与 **<span class=\\\"ne-text\\\">height</span> 或 <span class=\\\"ne-text\\\">width</span> 属性结合使用时，可以隐藏元素内溢出的内容。\",\"元素本身仍然可见，但超出部分的内容不可见。\",\"**使用 <span class=\\\"ne-text\\\">aria-hidden=\\\"true\\\"</span> ** 属性：\",\"这是一个无障碍性（accessibility）相关的属性，用于告知辅助技术（如屏幕阅读器）忽略该元素。\",\"元素在视觉上仍然可见，但不会传达给使用辅助技术的用户。\",\"<span class=\\\"ne-text\\\">pointer-events: none;</span>：\",\"禁止元素响应指针事件，如点击、悬停等。\",\"元素在视觉上仍然可见，但用户无法与之交互。\",\"选择哪种方法取决于你的具体需求，比如是否需要元素继续参与文档流的布局，是否需要保持可访问性，或者是否需要元素在某些情况下重新可见。\"]},\"272\":{\"c\":[\"前端\"]},\"273\":{\"h\":\"JavaScript\",\"t\":[\"Js相关\",\"Js的基础类型，typeof和instanceof的区别\",\"数组的forEach和map方法有哪些区别？常用哪些方法去对数组进行增、删、改\",\"闭包和作用域\",\"实现一个类以关键字new功能的函数\",\"如何实现继承（原型和原型链）\",\"箭头函数和普通函数有什么区别\",\"迭代器(iterator)接口和生成器(generator)函数的关系\",\"浏览器的事件循环机制\"]},\"274\":{\"h\":\"\",\"t\":[\"Object.prototype.toString.call\",\"Object.prototype.toString.call方法返回各数据类型的[object xxx]形式：\",\"去掉Object.prototype.toString.call方法返回结果中的\\\"[object\\\"，只保留具体类型：\",\" function getType(data) { return Object.prototype.toString.call(data).replace(/\\\\[object\\\\s+(.+)\\\\]/, '$1' ).toLowerCase() }\",\"四、Object.prototype.toString.call\",\"Object.prototype.toString.call方法返回各数据类型的[object xxx]形式：\",\" const str = 'testme' Object.prototype.toString.call(str) // [object String] const num = 123 Object.prototype.toString.call(num) // [object Number] const bol = true Object.prototype.toString.call(bol) // [object Boolean] const sy = Symbol('a') Object.prototype.toString.call(sy) // [object Symbol] const bi = BigInt(\\\"12345678910111213\\\") Object.prototype.toString.call(bi) // [object BigInt] Object.prototype.toString.call(null) // [object Null] Object.prototype.toString.call(undefined) // [object Undefined] const arr = [1,5,7] Object.prototype.toString.call(arr) // [object Array] const obj = {a:3} Object.prototype.toString.call(obj) // [object Object] function Man(name,age) { this.name = name this.age = age } Object.prototype.toString.call(Man) // [object Function] const man = new Man('Lily', 12) Object.prototype.toString.call(man) // [object Object]\",\"1. 使用typeof判断基本类型： const str = 'testme' typeof str // string const num = 123 typeof num // number const bol = true typeof bol // boolean const nu = null type nu // object typeof undefVar // undefined const sy = Symbol('a') typeof sy // symbol const bi = BigInt(\\\"12345678910111213\\\") typeof bi // bigint 2. 使用typeof判断引用类型： const arr = [1,5,7] typeof arr // object const obj = {a:3} typeof obj // object function Man(name,age) { this.name = name this.age = age } typeof Man // function const man = new Man('Lily', 12) typeof man // object\",\"二、instanceof\",\"使用方法: A instanceof B\",\" const arr = [1,5,7] arr instanceof Array // true const obj = {a:3} obj instanceof Object // true obj instanceof Array // false function Man(name,age) { this.name = name this.age = age } Man instanceof Function // true const man = new Man('Lily', 12) man instanceof Object // true\",\"三、constructor\",\" const str = 'testme' str.constructor === String // true const num = 123 num.constructor === Number // true const bol = true bol.constructor === Boolean // true const arr = [1,5,7] arr.constructor === Array // true const obj = {a:3} obj.constructor === Object // true function Man(name,age) { this.name = name this.age = age } Man.constructor === Function // true const man = new Man('Lily', 12) man.constructor === Man // true 但是像 null、undefined这种就调用不了constructor判断数据类型了\"]},\"275\":{\"h\":\"怎么判断两个对象相等？\",\"t\":[\"https://juejin.cn/post/7408226845466902568\"]},\"276\":{\"h\":\"总结\",\"t\":[\"判断两个对象是否相等可以通过以下几种主要方式：\",\"引用比较 **：使用 **<span class=\\\"ne-text\\\">===</span> 操作符，仅适用于比较对象引用。\",\"JSON 字符串化 **：通过 **<span class=\\\"ne-text\\\">JSON.stringify()</span> 方法比较对象的字符串表示，适用于简单对象。\",\"深度比较：递归地比较对象的属性，适用于复杂对象。\",\"使用第三方库 **：如 **Lodash 或其他深度比较库，处理各种复杂的比较需求。_.isEqual(obj1, obj2)\",\"判断两个对象相等\",\"在JavaScript中，判断两个对象是否相等或者判断一个对象是否为空，涉及到几个不同的概念和方法。\",\"JavaScript中的对象是引用类型，这意味着当你比较两个对象时，即使它们包含相同的数据，它们也是不相等的，因为它们在内存中的地址不同。以下是一些判断对象相等的方法：\",\"严格等于（<span class=\\\"ne-text\\\">===</span>）：这会检查两个对象是否是同一个引用，如果不是同一个引用，则返回<span class=\\\"ne-text\\\">false</span>。\",\"const obj1 = { a: 1 }; const obj2 = { a: 1 }; console.log(obj1 === obj2); // 输出 false\",\"JSON.stringify()：将对象转换为JSON字符串，然后比较字符串是否相同。这种方法适用于简单对象，但对于包含函数、循环引用或特殊对象（如<span class=\\\"ne-text\\\">Date</span>）的对象不适用。\",\"const obj1 = { a: 1 }; const obj2 = { a: 1 }; console.log(JSON.stringify(obj1) === JSON.stringify(obj2)); // 输出 true\",\"使用库：有一些库如lodash提供了深度比较功能，可以比较两个对象的内容是否相等。\",\"import _ from 'lodash'; const obj1 = { a: 1 }; const obj2 = { a: 1 }; console.log(_.isEqual(obj1, obj2)); // 输出 true\"]},\"277\":{\"h\":\"如何判断空对象？\",\"t\":[\"总结\",\"**包含可枚举 和 不可枚举 **\",\"Reflect.ownKeys() ( 强烈推荐) :返回一个数组，包含对象自身的所有属性键(包含symbol)，包括不可枚举的属性和符号属性。\",\"Object.keys(obj).length === 0 // 输出 true\",\"**Object.getOwnPropertyNames: **方法返回一个数组，包含对象自身的 所有属性名，不管它们是否可枚举。\",\"Object.getOwnPropertyNames(obj).length === 0 // 输出 true\",\"可枚举\",\"JSON.stringify(obj) === '{}'\",\"Object.keys(obj).length === 0\",\"Object.entries(obj).length === 0\",\"for...in循环\"]},\"278\":{\"h\":\"判断空对象\",\"t\":[\"Object.getOwnPropertyNames()或者Reflect.ownKeys()。\",\"<span class=\\\"ne-text\\\">Object.getOwnPropertyNames()</span> 和 <span class=\\\"ne-text\\\">Reflect.ownKeys()</span> 是 JavaScript 中用于获取对象自身属性的方法，包括不可枚举的属性和符号属性。这两个方法都可以帮助你判断一个对象是否为空，但它们有一些区别。\"]},\"279\":{\"h\":\"Object.getOwnPropertyNames()\",\"t\":[\"<span class=\\\"ne-text\\\">Object.getOwnPropertyNames()</span> 方法返回一个数组，包含对象自身的所有属性名，不管它们是否可枚举。\",\"const obj = { a: 1 }; Object.defineProperty(obj, 'b', { value: 2, enumerable: false }); console.log(Object.getOwnPropertyNames(obj)); // 输出 [\\\"a\\\", \\\"b\\\"]\",\"在这个例子中，<span class=\\\"ne-text\\\">\\\"b\\\"</span> 属性是不可枚举的，但 <span class=\\\"ne-text\\\">Object.getOwnPropertyNames()</span> 仍然能够获取到它。\"]},\"280\":{\"h\":\"Reflect.ownKeys()\",\"t\":[\"<span class=\\\"ne-text\\\">Reflect.ownKeys()</span> 方法返回一个数组，包含对象自身的所有属性键，包括不可枚举的属性和符号属性。\",\"const obj = { a: 1 }; Object.defineProperty(obj, 'b', { value: 2, enumerable: false }); const symbol = Symbol('c'); obj[symbol] = 3; console.log(Reflect.ownKeys(obj)); // 输出 [\\\"a\\\", \\\"b\\\", Symbol(c)]\",\"在这个例子中，<span class=\\\"ne-text\\\">Reflect.ownKeys()</span> 不仅获取了不可枚举的属性 <span class=\\\"ne-text\\\">\\\"b\\\"</span>，还获取了符号属性 <span class=\\\"ne-text\\\">Symbol(c)</span>。\",\"要判断一个对象是否为空，你可以使用这两个方法中的任何一个来获取对象的所有自身属性键，然后检查返回的数组是否为空。\",\"const obj = {}; // 使用 Object.getOwnPropertyNames() console.log(Object.getOwnPropertyNames(obj).length === 0); // 输出 true // 使用 Reflect.ownKeys() console.log(Reflect.ownKeys(obj).length === 0); // 输出 true\",\"**在这两个例子中，如果对象 **<span class=\\\"ne-text\\\">obj</span> 没有任何自身的属性，那么这两个方法都会返回一个空数组，数组的长度为0，表示对象为空。\"]},\"281\":{\"h\":\"总结\",\"t\":[\"<span class=\\\"ne-text\\\">Object.getOwnPropertyNames()</span>：返回对象自身的所有属性名，包括不可枚举的属性。\",\"<span class=\\\"ne-text\\\">Reflect.ownKeys()</span>：返回对象自身的所有属性键，包括不可枚举的属性和符号属性。\",\"在大多数情况下，<span class=\\\"ne-text\\\">Reflect.ownKeys()</span> 提供了更全面的结果，因为它还包括了符号属性。如果你只需要获取字符串属性名，那么 <span class=\\\"ne-text\\\">Object.getOwnPropertyNames()</span> 就足够了。在选择使用哪个方法时，需要根据你的具体需求来决定。\",\"判断空对象\",\"空对象指的是一个对象没有任何可枚举的属性。以下是一些判断对象是否为空的方法：\",\"for...in循环：使用<span class=\\\"ne-text\\\">for...in</span>循环遍历对象的属性，如果没有属性执行，那么对象为空。\",\"const obj = {}; for (let key in obj) { if (obj.hasOwnProperty(key)) { console.log('Object is not empty'); return; } } console.log('Object is empty');\",\"Object.keys()：这个方法返回一个包含对象所有自身可枚举属性的数组，如果数组长度为0，则对象为空。\",\"const obj = {}; console.log(Object.keys(obj).length === 0); // 输出 true\",\"JSON.stringify()：将对象转换为JSON字符串，空对象转换后的结果是一个空的大括号<span class=\\\"ne-text\\\">{}</span>。\",\"const obj = {}; console.log(JSON.stringify(obj) === '{}'); // 输出 true\",\"Object.entries()：这个方法返回一个给定对象自身可枚举属性的键值对数组，如果数组长度为0，则对象为空。\",\"const obj = {}; console.log(Object.entries(obj).length === 0); // 输出 true\",\"请注意，这些方法只能检测对象是否有可枚举的属性，它们不会检查对象的原型链上的属性。如果需要检查对象是否完全没有属性（包括不可枚举的属性和原型链上的属性），可以使用<span class=\\\"ne-text\\\">Object.getOwnPropertyNames()</span>或者 <span class=\\\"ne-text\\\">Reflect.ownKeys()</span>。\"]},\"282\":{\"h\":\"数组的forEach和map方法有哪些区别？常用哪些方法去对数组进行增、删、改\",\"t\":[\"拓展\",\"<span class=\\\"ne-text\\\">forEach</span> 和 <span class=\\\"ne-text\\\">map</span> 是JavaScript中用于数组遍历和元素处理的两个常用方法，它们有一些关键的区别：\"]},\"283\":{\"h\":\"forEach 方法\",\"t\":[\"<span class=\\\"ne-text\\\">forEach</span> 方法会对数组的每个元素执行一次提供的函数。\",\"**它不返回任何值，即返回 **<span class=\\\"ne-text\\\">undefined</span>。\",\"它不能被中断，即使在回调函数中抛出错误，<span class=\\\"ne-text\\\">forEach</span> 也会继续执行直到数组的末尾。\",\"它常用于执行副作用操作，如数组的遍历、累加求和等。\",\"let numbers = [1, 2, 3]; numbers.forEach(function(number) { console.log(number); // 输出每个元素 });\"]},\"284\":{\"h\":\"map 方法\",\"t\":[\"<span class=\\\"ne-text\\\">map</span> 方法也遍历数组的每个元素，但会返回一个新数组，新数组的元素是原数组元素经过回调函数处理后的结果。\",\"它不会更改原数组，而是创建一个新数组。\",\"它可以通过返回值进行链式调用。\",\"它常用于对数组中的每个元素进行转换或计算，并获取一个新的数组。\",\"let numbers = [1, 2, 3]; let squares = numbers.map(function(number) { return number * number; // 返回每个元素的平方 }); console.log(squares); // 输出 [1, 4, 9]\"]},\"285\":{\"h\":\"增删改方法\",\"t\":[\"对于数组的增、删、改操作，JavaScript 提供了多种方法：\",\"增加元素：\",\"<span class=\\\"ne-text\\\">push(...items)</span>：在数组末尾添加一个或多个元素，并返回新的长度。\",\"<span class=\\\"ne-text\\\">unshift(...items)</span>：在数组开头添加一个或多个元素，并返回新的长度。\",\"<span class=\\\"ne-text\\\">splice(index, 0, ...items)</span>：在指定位置添加元素。\",\"删除元素：\",\"<span class=\\\"ne-text\\\">pop()</span>：删除数组的最后一个元素，并返回被删除的元素。\",\"<span class=\\\"ne-text\\\">shift()</span>：删除数组的第一个元素，并返回被删除的元素。\",\"<span class=\\\"ne-text\\\">splice(index, count)</span>：删除指定位置的元素。\",\"<span class=\\\"ne-text\\\">filter(callback)</span>：创建一个新数组，包含通过测试的所有元素。\",\"修改元素：\",\"<span class=\\\"ne-text\\\">splice(index, count, ...items)</span>：删除指定位置的元素，并可在该位置添加新元素。\",\"<span class=\\\"ne-text\\\">slice()</span> 结合 <span class=\\\"ne-text\\\">concat()</span> 或 <span class=\\\"ne-text\\\">push()</span>：创建一个数组的副本，然后添加或修改元素。\",\"<span class=\\\"ne-text\\\">map(callback)</span>：创建一个新数组，其元素是原数组元素经过回调函数处理后的结果。\",\"其他常用方法：\",\"<span class=\\\"ne-text\\\">concat(...items)</span>：创建一个新数组，包含原数组的元素和/或额外的参数。\",\"<span class=\\\"ne-text\\\">slice(start, end)</span>：提取原数组的一部分，返回一个新数组。\",\"<span class=\\\"ne-text\\\">reduce(callback, initialValue)</span>：将数组中的值通过回调函数处理后缩减为单一的返回值。\",\"<span class=\\\"ne-text\\\">find(callback)</span>：返回数组中满足提供的测试函数的第一个元素的值。\",\"<span class=\\\"ne-text\\\">some(callback)</span>：检测数组中至少有一个元素通过测试。\",\"<span class=\\\"ne-text\\\">every(callback)</span>：检测数组的所有元素是否都通过了测试。\",\"选择哪种方法取决于你的具体需求，比如是否需要修改原数组、是否需要返回新数组、是否需要执行复杂的条件检查等。\"]},\"286\":{\"h\":\"闭包和作用域\",\"t\":[\"把闭包简单理解成“定义在一个函数内部的函数”。\",\"https://blog.csdn.net/Ed7zgeE9X/article/details/133819940\",\"https://blog.csdn.net/Ed7zgeE9X/article/details/133819940\",\"## 实现一个类以关键字new功能的函数\",\"相当于创建一个 空对象,并将其 原型 和 this指向 绑定其构造函数 然后返回对象\",\"在js中new关键字主要做了：\",\"首先创建一个空对象，这个对象会作为执行new构造函数之后返回的对象实例，\",\"将创建的空对象原型（<span class=\\\"ne-text\\\">__proto__</span>）指向构造函数的prototype属性，\",\"同时将这个空对象赋值给构造函数内部的this，并执行构造函数逻辑，\",\"根据构造函数的执行逻辑，返回初始创建的对象或构造函数的显式返回值。\",\"function newFn(...args) { const constructor = args.shift(); const obj = Object.create(constructor.prototype); const result = constructor.apply(obj, args); return typeof result === \\\"object\\\" && result !== null ? result : obj; } function Person(name) { this.name = name; } const p = newFn(Person, \\\"Jerome\\\"); console.log(\\\"p.name :>> \\\", p.name); // p.name :>> Jerome\",\"在编程中，“关键字new功能”通常指的是使用<span class=\\\"ne-text\\\">new</span>关键字来创建一个类的新实例。下面我将提供一个简单的示例，展示如何在JavaScript中实现一个类，并使用 <span class=\\\"ne-text\\\">new</span>关键字来创建其实例。\",\"// 定义一个类 class Person { // 构造函数，用于初始化实例 constructor(name, age) { this.name = name; // 实例的name属性 this.age = age; // 实例的age属性 } // 实例方法，可以被所有实例调用 greet() { console.log(`Hello, my name is ${this.name} and I am ${this.age} years old.`); } } // 使用new关键字创建Person类的实例 let person1 = new Person('Alice', 30); // 调用实例方法 person1.greet(); // 输出: Hello, my name is Alice and I am 30 years old.\",\"在这个例子中，<span class=\\\"ne-text\\\">Person</span>是一个类，它有一个构造函数 <span class=\\\"ne-text\\\">constructor</span>，用于初始化实例的属性（<span class=\\\"ne-text\\\">name</span>和 <span class=\\\"ne-text\\\">age</span>）。<span class=\\\"ne-text\\\">greet</span>是一个实例方法，可以通过创建的实例调用。\",\"当你使用<span class=\\\"ne-text\\\">new Person('Alice', 30)</span>时，你实际上是在创建一个新的 <span class=\\\"ne-text\\\">Person</span>对象，并且调用了它的构造函数来初始化属性。之后，你可以使用这个新创建的对象来调用它的方法，比如 <span class=\\\"ne-text\\\">person1.greet()</span>。\",\"如果你需要在其他编程语言中实现类似的功能，请告诉我具体的语言，我可以提供相应的示例。\",\"https://blog.csdn.net/qq_17335549/article/details/138100619\"]},\"287\":{\"h\":\"如何实现继承（原型和原型链）\",\"t\":[\"https://blog.csdn.net/qq_17335549/article/details/138100619\",\"使用class语法，用extends进行继承, 或 直接改变对象的__proto__指向。\"]},\"288\":{\"h\":\"总结\",\"t\":[\"总之关于原型这块记住三句话\",\"对象有一个内置属性 [[Prototype]]，使用 Object.getPrototypeOf(obj) 获取\",\"函数有一个公开可访问不可枚举属性 prototype\",\"函数的 prototype 属性有一个公开可访问的不可枚举属性 constructor，指向函数本身\"]},\"289\":{\"h\":\"2.4 原型相关的面试题目\"},\"290\":{\"h\":\"2.4.1 说说你对原型和原型链的理解\",\"t\":[\"回答问题分文两步\",\"（1）原型/原型链是什么？【引用上面的三句话即可】\",\"在 js 中每个对象都有一个内置属性 [[prototype]]，可以使用 Object.getPrototypeOf 来获取，指向一个对象；同样的，这个指向的对象也有内置属性[[prototype]] 这样就构成了原型链，原型链最终会指向 Object.prototype，而 Object.prototype 的内置属性 [[prototype]] 指向 null.\",\"同时函数都有一个公开可访问属性 prototype，这个 prototype 属性又有一个 constructor 属性指向函数本身。\",\"（2）原型链有什么用？【属性查找、继承、扩展、属性和方法的共享】\",\"当访问对象的一个属性的时候，如果自身没有找到，就会去原型链上查找，直到找到该属性，或者遍历完完整的原型链，也就是说可以使用原型链实现继承功能。对象可以通过原型链继承父对象的属性或者方法【继承】\",\"也可以使用原型链对对象进行扩展，通过修改原型对象，可以给所有的实例进行属性的增加或修改。如果我们在一个对象的原型上添加属性或者方法，所有基于该原型的实例都会自动继承这些属性和方法，这样可以在不修改每个实例的情况下，实现对对象的扩展【扩展】【注意这一点也是原型链继承的弊端】【也是实例之间属性和方法的共享的方法】\"]},\"291\":{\"h\":\"六、寄生式组合继承【必会】\",\"t\":[\"我不喜欢这个名字，因为他听起来很高端的样子，还不如叫 es5 继承终极版！\",\"很简单，把 new Person() 换成 Object.create(Person.prototype)就行了。\",\"function Person(age) { this.name = 'mike'; this.age = { num: age } } Person.prototype.getName = function() { return this.name; } function Student(gender, age) { // 重点1 Person.call(this, age) this.gender = gender } // 重点2 Student.prototype = Object.create(Person.prototype) // 重点3 Student.prototype.constructor = Student; const student = new Student('man', 12); const student1 = new Student('women', 25) console.log(Object.getPrototypeOf(student)) // 修改第一个实例 student.age.num = 3 console.log('第一个学生', student.age, student.getName()) console.log('第二个学生', student1.age, student1.getName())\",\"这里面其实应用到了，Object.create 的原理，这也是一个面试题目，而且也有可能让你手写一个 Object.create 请看这篇文章。\"]},\"292\":{\"h\":\"小结\",\"t\":[\"好吧，整半天就一套代码，如果面试官让你写 es5 的继承，你直接上来就终极版代码安排，我想他应该没有什么可问的了吧，所以你别看概念上那么继承方式那么多，但是实际应用就是一个！一定要记住，可别再翻车了。\",\"那么还有最后一个问题就是 es6 中的继承了！\"]},\"293\":{\"h\":\"七、es6 继承\"},\"294\":{\"h\":\"7.1 代码实现\",\"t\":[\"使用类 class + extends 实现继承。主要还是学会使用class 类的各种语法，有几个关键点\",\"class 中只能有一个构造函数 constructor\",\"可以使用 static 定义静态属性和方法，直接使用类名调用\",\"子类使用 extends 关键字继承父类，且只能继承一个【说明 es6 原生也不支持多重继承】\",\"子类在构造函数 constructor 中使用 super 来调用父类的构造函数，并且可以传递参数\",\"子类中的方法和父类的同名，会覆盖父类的方法\",\"必须使用 new 操作符，创建 class 示例\",\"class Person { // 定义属性 lang = 'zh' // 定义静态属性 static nation = 'china' // 构造函数 constructor(age) { this.name = 'mike' this.age = { num: age } } // 定义方法 getName() { return this.name } // 定义静态方法 static getDes () { return 'hello word' } } class Student extends Person { constructor(gender, age) { super(age) this.gender = gender } } const student = new Student('man', 12) const student1 = new Student('women', 25) student.age.num = 234 console.log('静态属性方法',Person.nation, Person.getDes()) console.log('第一个学生', student.lang, student.getName()) console.log('第二个学生', student1, student.getName())\",\"7.2 面试题目\",\"这个时候肯定会问 es5 中的类和 es6 中的类的区别了，用自己的话总结一些这篇文章的内容即可。\",\"7.2.1 es5 中类 es6 中的继承有什么区别\",\"注意 es6 的class 有一个私有属性和方法，以#开头的，这个倒是不常用。\",\"7.2.2 ts 中的类和 es6 中的类有什么区别\",\"ts 中有类型检查\",\"ts 有访问描述符 private 、public 、protected 等，js 中只有 #开头描述的私有属性\",\"ts 中有抽象类和方法的概念\",\"抽象类可以包含抽象方法，而接口只能定义方法的签名\",\"ts 支持范型\"]},\"295\":{\"h\":\"箭头函数和普通函数有什么区别\",\"t\":[\"箭头函数不会创建自身的this，只会从上一级继承this，箭头函数的this在定义的时候就已经确认了，之后不会改变。\",\"同时箭头函数无法作为构造函数使用，\",\"没有自身的prototype，\",\"也没有arguments。\",\"https://blog.csdn.net/weixin_46098577/article/details/131005395\",\"https://blog.csdn.net/weixin_46098577/article/details/131005395\",\"## 迭代器(iterator)接口和生成器(generator)函数的关系\",\"任意一个对象实现了遵守迭代器协议的[Symbol.iterator]方法，那么该对象就可以调用[Symbol.iterator]返回一个遍历器对象。\",\"生成器函数就是遍历器生成函数，故可以把generator赋值给对象的[Symbol.iterator]属性，从而使该对象具有迭代器接口。\",\"class ClassRoom { constructor(address, name, students) { this.address = address; this.name = name; this.students = students; } entry(student) { this.students.push(student); } *[Symbol.iterator]() { yield* this.students; } // [Symbol.iterator]() { // let index = 0; // return { // next: () => { // if (index < this.students.length) { // return { done: false, value: this.students[index++] }; // } else { // return { done: true, value: undefined }; // } // }, // return: () => { // console.log(\\\"iterator has early termination\\\"); // return { done: true, value: undefined }; // }, // }; // } } const classOne = new ClassRoom(\\\"7-101\\\", \\\"teach-one-room\\\", [\\\"rose\\\", \\\"jack\\\", \\\"lily\\\", \\\"james\\\"]); for (const stu of classOne) { console.log(\\\"stu :>> \\\", stu); // stu :>> rose // stu :>> jack // stu :>> lily // stu :>> james // if (stu === \\\"lily\\\") return; }\"]},\"296\":{\"h\":\"浏览器的事件循环机制\",\"t\":[\"先进行宏任务(script)内的内容;\",\"再去执行微任务队列{\",\"--消息队列有优先级 :按照任务类型分(chrome浏览器中)\",\"--微队列 [最高] promise.then方法\",\"--交互队列 [高] 点击操作等\",\"--延时队列 [中] 延时,循环延时}\",\"然后执行微任务如果有嵌套看先执行宏任务在再按照优先级执行微任务\"]},\"297\":{\"h\":\"列举宿主对象、内置对象、原生对象并说明其定义\",\"t\":[\"在JavaScript中，宿主对象（Host Objects）、内置对象（Built-in Objects）和原生对象（Native Objects）是与执行环境相关的概念。以下是它们的定义和区别：\"]},\"298\":{\"h\":\"宿主对象（Host Objects）\",\"t\":[\"宿主对象是由JavaScript运行环境（如浏览器或Node.js）提供的，而不是由ECMAScript规范定义的对象。宿主对象的具体特性和行为可能会因不同的宿主环境而异。\",\"定义：宿主对象是依赖于宿主环境（如浏览器或服务器）的对象，它们提供了与宿主环境交互的能力。\",\"例子：\",\"在浏览器中，<span class=\\\"ne-text\\\">window</span>、<span class=\\\"ne-text\\\">document</span>、<span class=\\\"ne-text\\\">XMLHttpRequest</span> 等都是宿主对象。\",\"在Node.js中，<span class=\\\"ne-text\\\">global</span>、<span class=\\\"ne-text\\\">process</span>、<span class=\\\"ne-text\\\">console</span> 等都是宿主对象。\"]},\"299\":{\"h\":\"内置对象（Built-in Objects）\",\"t\":[\"内置对象是由ECMAScript规范定义的对象，它们在任何JavaScript环境中都是可用的。这些对象提供了核心功能，如数据类型、错误处理、数学计算等。\",\"定义：内置对象是ECMAScript规范中定义的对象，它们是语言的一部分，不依赖于宿主环境。\",\"例子：\",\"<span class=\\\"ne-text\\\">Object</span>、<span class=\\\"ne-text\\\">Array</span>、<span class=\\\"ne-text\\\">String</span>、<span class=\\\"ne-text\\\">Number</span>、<span class=\\\"ne-text\\\">Boolean</span> 等是内置对象，用于表示基本数据结构。\",\"<span class=\\\"ne-text\\\">Date</span>、<span class=\\\"ne-text\\\">Math</span>、<span class=\\\"ne-text\\\">JSON</span>、<span class=\\\"ne-text\\\">Error</span> 等也是内置对象，提供了特定的功能。\"]},\"300\":{\"h\":\"原生对象（Native Objects）\",\"t\":[\"原生对象通常是指那些直接由JavaScript引擎实现的对象，包括内置对象和宿主对象。在某些文献中，\\\"原生对象\\\"这个术语可能与\\\"内置对象\\\"互换使用，但在严格意义上，原生对象包括了所有由JavaScript引擎直接实现的对象，无论是由ECMAScript规范定义的还是由宿主环境提供的。\",\"定义：原生对象是由JavaScript引擎实现的对象，包括ECMAScript规范定义的对象和宿主环境提供的对象。\",\"例子：\",\"同内置对象和宿主对象的例子。\"]},\"301\":{\"h\":\"总结\",\"t\":[\"宿主对象：依赖于宿主环境的对象，它们提供了与宿主环境交互的能力。\",\"内置对象：由ECMAScript规范定义的对象，是JavaScript语言的核心组成部分。\",\"原生对象：由JavaScript引擎实现的对象，包括内置对象和宿主对象。\",\"在实际开发中，了解这些对象的来源和特性有助于更好地理解和使用JavaScript的各种功能。\"]},\"302\":{\"h\":\"=== 和==的区别？\",\"t\":[\"在JavaScript中，<span class=\\\"ne-text\\\">===</span> 和 <span class=\\\"ne-text\\\">==</span> 是用于比较两个值的运算符，但它们在比较时的行为和规则有所不同。\"]},\"303\":{\"h\":\"严格相等运算符 ( )\",\"t\":[\"类型和值都相等：<span class=\\\"ne-text\\\">===</span> 运算符称为严格相等运算符，它不仅比较两个值的类型，还比较它们的值。如果两个值的类型不同，即使它们的值看起来相同，<span class=\\\"ne-text\\\">===</span> 也会返回 <span class=\\\"ne-text\\\">false</span>。\",\"不进行类型转换 **：使用 **<span class=\\\"ne-text\\\">===</span> 时，如果比较的两个值类型不同，不会尝试进行任何类型转换，直接返回 <span class=\\\"ne-text\\\">false</span>。\",\"例子：\",\"3 === 3 // true '3' === 3 // false，因为一个是字符串，一个是数字\"]},\"304\":{\"h\":\"相等运算符 ( )\",\"t\":[\"只比较值：<span class=\\\"ne-text\\\">==</span> 运算符称为相等运算符，它只比较两个值的值，而不关心它们的类型。如果两个值的类型不同，JavaScript 会尝试进行类型转换，使它们具有相同的类型，然后再进行比较。\",\"进行类型转换：如果比较的两个值类型不同，<span class=\\\"ne-text\\\">==</span> 会根据隐式类型转换规则尝试将它们转换为相同类型，然后再进行比较。\",\"例子：\",\"3 == 3 // true '3' == 3 // true，因为字符串 '3' 被转换为数字 3 后比较 0 == false // true，因为 false 被转换为数字 0 后比较 '' == 0 // true，因为空字符串被转换为数字 0 后比较\"]},\"305\":{\"h\":\"推荐使用\",\"t\":[\"**通常推荐使用 **<span class=\\\"ne-text\\\">===</span> 运算符，因为它不会进行隐式的类型转换，这样可以避免很多由于类型转换导致的意外结果，使代码更加清晰和可靠。只有在你明确需要进行类型转换时，才使用 <span class=\\\"ne-text\\\">==</span> 运算符。\"]},\"306\":{\"h\":\"例子\",\"t\":[\"// 使用 === null === undefined // false，因为 null 和 undefined 是不同的类型 '0' === 0 // false，因为一个是字符串，一个是数字 // 使用 == null == undefined // true，JavaScript 会将 null 和 undefined 视为相等 '0' == 0 // true，因为字符串 '0' 被转换为数字 0\",\"**在实际开发中，使用 **<span class=\\\"ne-text\\\">===</span> 可以减少很多由于类型转换导致的bug，使得比较操作更加安全和可预测。\"]},\"307\":{\"h\":\"null,undefined的区别\",\"t\":[\"null 针对 对象 表示空对象\",\"undefined 针对 已经声明但是没有赋值 的 一个具体值\",\"如果函数没有返回值，它会默认返回<span class=\\\"ne-text\\\">undefined</span>。\",\"**如果函数需要返回一个空对象，通常会返回 **<span class=\\\"ne-text\\\">null</span>。\",\"拓展\",\"在JavaScript中，<span class=\\\"ne-text\\\">null</span> 和 <span class=\\\"ne-text\\\">undefined</span> 是两种表示“没有值”的特殊值，它们用于不同的场景和目的。\"]},\"308\":{\"h\":\"null\",\"t\":[\"定义：<span class=\\\"ne-text\\\">null</span> 是一个表示故意赋予的空值的对象，它表示一个变量指向一个空对象。\",\"用途：\",\"表示一个变量初始化为空，即还没有指向任何对象。\",\"**表示函数期望返回一个对象，但没有找到合适的返回对象时，返回 **<span class=\\\"ne-text\\\">null</span>。\",\"显式地表示一个空或不存在的对象引用。\",\"类型：<span class=\\\"ne-text\\\">null</span> 是 <span class=\\\"ne-text\\\">Object</span> 类型（尽管在逻辑上它表示空，但技术上它是一个对象）。\"]},\"309\":{\"h\":\"undefined\",\"t\":[\"定义：<span class=\\\"ne-text\\\">undefined</span> 是一个表示变量已声明但尚未赋值的特殊值。\",\"用途：\",\"表示变量初始化未完成，即变量存在但还没有被赋予具体的值。\",\"**表示函数没有返回值时，默认返回 **<span class=\\\"ne-text\\\">undefined</span>。\",\"表示对象中不存在某个属性。\",\"类型：<span class=\\\"ne-text\\\">undefined</span> 是 <span class=\\\"ne-text\\\">Undefined</span> 类型。\"]},\"310\":{\"h\":\"区别\",\"t\":[\"值的来源：\",\"<span class=\\\"ne-text\\\">null</span> 是显式赋值的结果。\",\"<span class=\\\"ne-text\\\">undefined</span> 是变量声明后未初始化的结果。\",\"类型：\",\"<span class=\\\"ne-text\\\">typeof null</span> 返回 <span class=\\\"ne-text\\\">\\\"object\\\"</span>（这是一个历史遗留问题，被认为是JavaScript的一个bug）。\",\"<span class=\\\"ne-text\\\">typeof undefined</span> 返回 <span class=\\\"ne-text\\\">\\\"undefined\\\"</span>。\",\"用途：\",\"<span class=\\\"ne-text\\\">null</span> 通常用于表示空或无效的对象引用。\",\"<span class=\\\"ne-text\\\">undefined</span> 通常用于表示未初始化或不存在的变量。\",\"在函数中：\",\"**如果函数没有返回值，它会默认返回 **<span class=\\\"ne-text\\\">undefined</span>。\",\"**如果函数需要返回一个空对象，通常会返回 **<span class=\\\"ne-text\\\">null</span>。\"]},\"311\":{\"h\":\"例子\",\"t\":[\"let a; // a 为 undefined，因为变量已声明但未初始化 let b = null; // b 为 null，因为显式地赋予了空值 function test() { return; // 隐式返回 undefined } console.log(test()); // 输出 undefined function test2() { return null; // 显式返回 null } console.log(test2()); // 输出 null\",\"**在实际开发中，选择使用 **<span class=\\\"ne-text\\\">null</span> 还是 <span class=\\\"ne-text\\\">undefined</span> 取决于你的具体需求和代码的上下文。通常，如果你需要表示一个变量指向一个空对象，使用 <span class=\\\"ne-text\\\">null</span>；如果你需要表示一个变量尚未被初始化，使用 <span class=\\\"ne-text\\\">undefined</span>。\"]},\"312\":{\"h\":\"怎么获取当前日期(年-月-日时：分：秒)？\",\"t\":[\"new Date()\",\"toLocaleString()\",\"replace(///g, '-')\",\"您的代码中有几个语法错误，我将帮您纠正这些错误，并提供一个正确的示例。您的目标似乎是创建一个日期对象，将其转换为本地字符串表示，然后替换斜杠（<span class=\\\"ne-text\\\">/</span>）为破折号（<span class=\\\"ne-text\\\">-</span>）。\",\"以下是修正后的代码：\",\"// 创建一个新的Date对象，它将包含当前的日期和时间 const a = new Date(); // 将日期转换为本地字符串格式 let b = a.toLocaleString(); // 替换字符串中的斜杠（/）为破折号（-） b = b.replace(/\\\\//g, '-'); console.log(b); // 输出格式化后的日期和时间\",\"在这段代码中，<span class=\\\"ne-text\\\">new Date()</span> 用于创建一个新的日期对象，<span class=\\\"ne-text\\\">toLocaleString()</span> 方法用于将日期对象转换为易读的字符串格式。<span class=\\\"ne-text\\\">replace()</span> 方法结合正则表达式 <span class=\\\"ne-text\\\">/\\\\//g</span> 用于全局替换字符串中的所有斜杠（<span class=\\\"ne-text\\\">/</span>）为破折号（<span class=\\\"ne-text\\\">-</span>）。\",\"**请注意，正则表达式中的双斜杠 **<span class=\\\"ne-text\\\">//</span> 是必要的，因为在字符串中单个斜杠是特殊字符的开始，我们需要对它进行转义。<span class=\\\"ne-text\\\">g</span> 标志表示全局搜索，即替换所有出现的斜杠，而不仅仅是第一个。\",\"**如果您希望日期和时间的格式完全按照您的要求（例如，“年-月-日 时:分:秒”），您可能需要使用 **<span class=\\\"ne-text\\\">toLocaleDateString()</span> 和 <span class=\\\"ne-text\\\">toLocaleTimeString()</span> 方法分别格式化日期和时间，然后组合它们，或者使用 <span class=\\\"ne-text\\\">options</span> 参数自定义 <span class=\\\"ne-text\\\">toLocaleString()</span> 的输出格式。\"]},\"313\":{\"h\":\"类数组,数组,对象,之间的 关系和互相转换方法\",\"t\":[\"在JavaScript中，类数组（伪数组）、数组和对象是三种常用的数据结构，它们之间有着不同的特点和用途，但可以通过一些方法相互转换。\"]},\"314\":{\"h\":\"类数组（伪数组）与数组\",\"t\":[\"类数组对象不是数组实例，但具有类似数组的特征，如具有索引和<span class=\\\"ne-text\\\">length</span>属性。常见的类数组对象包括函数的 <span class=\\\"ne-text\\\">arguments</span>对象和某些DOM集合。\"]},\"315\":{\"h\":\"类数组转数组\",\"t\":[\"使用<span class=\\\"ne-text\\\">Array.from()</span>方法：\",\"let args = (function() { return arguments; // 类数组对象 })(1, 2, 3); let arr = Array.from(args); // [1, 2, 3]\",\"使用扩展运算符（<span class=\\\"ne-text\\\">...</span>）：\",\"let args = (function() { return arguments; // 类数组对象 })(1, 2, 3); let arr = [...args]; // [1, 2, 3]\",\"使用<span class=\\\"ne-text\\\">Array.prototype.slice().call(args)</span>方法：\",\"let args = (function() { return arguments; // 类数组对象 })(1, 2, 3); let arr = Array.prototype.slice.call(args); // [1, 2, 3]\"]},\"316\":{\"h\":\"数组转类数组\",\"t\":[\"数组本身就是类数组，但如果你想要创建一个真正的类数组对象（如<span class=\\\"ne-text\\\">arguments</span>），可以使用 <span class=\\\"ne-text\\\">Array</span>对象并设置 <span class=\\\"ne-text\\\">length</span>属性。\"]},\"317\":{\"h\":\"数组与对象\",\"t\":[\"数组是有序的数据集合，对象是键值对的集合。\"]},\"318\":{\"h\":\"数组转对象\",\"t\":[\"使用<span class=\\\"ne-text\\\">Array.prototype.reduce()</span>方法：\",\"let arr = ['a', 'b', 'c']; let obj = arr.reduce((acc, val, index) => { acc[val] = index + 1; return acc; }, {}); // { a: 1, b: 2, c: 3 }\",\"使用对象字面量和数组索引：\",\"let arr = ['a', 'b', 'c']; let obj = { a: arr[0], b: arr[1], c: arr[2] }; // { a: 'a', b: 'b', c: 'c' }\"]},\"319\":{\"h\":\"对象转数组\",\"t\":[\"使用<span class=\\\"ne-text\\\">Object.keys()</span>、<span class=\\\"ne-text\\\">Object.values()</span>或 <span class=\\\"ne-text\\\">Object.entries()</span>方法：\",\"let obj = { a: 1, b: 2, c: 3 }; let keys = Object.keys(obj); // [\\\"a\\\", \\\"b\\\", \\\"c\\\"] let values = Object.values(obj); // [1, 2, 3] let entries = Object.entries(obj); // [[\\\"a\\\", 1], [\\\"b\\\", 2], [\\\"c\\\", 3]]\",\"使用<span class=\\\"ne-text\\\">Array.from()</span>方法：\",\"let obj = { a: 1, b: 2, c: 3 }; let values = Array.from(obj.values()); // [1, 2, 3]\",\"使用<span class=\\\"ne-text\\\">JSON.stringify()</span>和 <span class=\\\"ne-text\\\">JSON.parse()</span>方法（对于简单对象）：\",\"let obj = { a: 1, b: 2, c: 3 }; let arr = JSON.parse(JSON.stringify(obj)); // [\\\"a\\\", 1, \\\"b\\\", 2, \\\"c\\\", 3]\",\"请注意，<span class=\\\"ne-text\\\">JSON.stringify()</span>和 <span class=\\\"ne-text\\\">JSON.parse()</span>方法在处理对象时会将对象转换为JSON字符串，然后再解析为数组，但这种方法会将键值对转换为连续的元素，而不是键值对的形式。\",\"通过这些方法，你可以在类数组、数组和对象之间进行灵活的转换，以适应不同的编程场景和需求。\"]},\"320\":{\"h\":\"变量提升是什么？与函数提升的区别？\",\"t\":[\"在JavaScript中，变量提升（Variable Hoisting）和函数提升（Function Hoisting）是两种不同的行为，它们都与JavaScript的执行上下文和作用域链有关。\"]},\"321\":{\"h\":\"变量提升\",\"t\":[\"变量提升是指JavaScript引擎在代码执行之前，将变量声明提升到当前作用域的顶部。这意味着变量可以在声明之前就被访问。\",\"console.log(myVar); // 输出 undefined var myVar = 5;\",\"在上面的代码中，尽管<span class=\\\"ne-text\\\">myVar</span>是在 <span class=\\\"ne-text\\\">console.log</span>之后声明的，但是由于变量提升，<span class=\\\"ne-text\\\">myVar</span>的声明被提升到了作用域顶部，所以在 <span class=\\\"ne-text\\\">console.log</span>执行时，<span class=\\\"ne-text\\\">myVar</span>已经存在，其值为 <span class=\\\"ne-text\\\">undefined</span>。\",\"对于<span class=\\\"ne-text\\\">let</span>和 <span class=\\\"ne-text\\\">const</span>声明的变量，虽然也存在提升，但是它们不会立即被初始化，而是处于一个称为“暂时性死区”（Temporal Dead Zone, TDZ）的状态，直到它们被实际声明。\",\"console.log(myLet); // 报错 ReferenceError let myLet = 10;\"]},\"322\":{\"h\":\"函数提升\",\"t\":[\"函数提升与变量提升类似，但是只适用于函数声明，不适用于函数表达式。在函数提升中，函数声明会被提升到当前作用域的顶部。\",\"console.log(myFunc); // 报错 TypeError myFunc(); // 输出 \\\"Hello, World!\\\" function myFunc() { console.log(\\\"Hello, World!\\\"); }\",\"在上面的代码中，尽管<span class=\\\"ne-text\\\">myFunc</span>是在 <span class=\\\"ne-text\\\">console.log</span>之后声明的，但是由于函数提升，<span class=\\\"ne-text\\\">myFunc</span>的声明被提升到了作用域顶部，所以在 <span class=\\\"ne-text\\\">console.log</span>执行时，<span class=\\\"ne-text\\\">myFunc</span>已经存在，但是尝试打印一个函数会抛出错误。\"]},\"323\":{\"h\":\"区别\",\"t\":[\"变量提升：适用于所有类型的变量声明（<span class=\\\"ne-text\\\">var</span>、<span class=\\\"ne-text\\\">let</span>、<span class=\\\"ne-text\\\">const</span>），但是 <span class=\\\"ne-text\\\">let</span>和 <span class=\\\"ne-text\\\">const</span>声明的变量在初始化之前不能被访问（TDZ）。\",\"函数提升：只适用于函数声明，不适用于函数表达式。函数表达式不会提升，但是变量名会被提升。\"]},\"324\":{\"h\":\"函数表达式与函数声明的区别\",\"t\":[\"函数声明：使用<span class=\\\"ne-text\\\">function</span>关键字，并且函数名是必需的。\",\"函数表达式：通常是一个匿名函数，赋值给一个变量。\",\"console.log(myFuncExpr); // 输出 undefined myFuncExpr(); // 报错 TypeError var myFuncExpr = function() { console.log(\\\"Hello, World!\\\"); };\",\"在上面的代码中，<span class=\\\"ne-text\\\">myFuncExpr</span>是一个函数表达式，它不会像函数声明那样被提升，所以 <span class=\\\"ne-text\\\">console.log</span>输出 <span class=\\\"ne-text\\\">undefined</span>，而 <span class=\\\"ne-text\\\">myFuncExpr()</span>在执行时抛出错误，因为此时 <span class=\\\"ne-text\\\">myFuncExpr</span>还没有被赋值。\",\"总结来说，变量提升和函数提升是JavaScript在代码执行前对变量和函数声明进行处理的行为，它们对于理解JavaScript的作用域和执行上下文非常重要。\"]},\"325\":{\"h\":\"什么是作用域链？如何延长？\",\"t\":[\"在jS解释器中查找一个变量或者函数时会首先从当前上下文对象中查找，如果当前上下文对象中不存在，就会向上层上下文中查找，直到找到该变量或者全局上下文时为止。这个查找过程中又上下文对象组成的链表结构就是作用域链。\",\"通过闭包可以延长作用域链\"]},\"326\":{\"h\":\"如何实现数组的随机排序？\",\"t\":[\"洗牌算法\",\"在JavaScript中，实现数组的随机排序通常使用Fisher-Yates（也称为Knuth）洗牌算法。这个算法可以确保每个元素都有相同的概率出现在数组的任何位置。\",\"以下是使用Fisher-Yates算法实现数组随机排序的步骤：\",\"从数组的最后一个元素开始，随机选择一个元素与当前位置的元素交换。\",\"移动到前一个元素，重复步骤1，直到遍历完整个数组。\",\"下面是具体的实现代码：\",\"function shuffleArray(array) { let currentIndex = array.length, temporaryValue, randomIndex; // 当仍有元素未洗牌时 while (currentIndex !== 0) { // 选取一个剩余元素… randomIndex = Math.floor(Math.random() * currentIndex); currentIndex -= 1; // 与当前元素交换 temporaryValue = array[currentIndex]; array[currentIndex] = array[randomIndex]; array[randomIndex] = temporaryValue; } return array; } // 示例 const myArray = [1, 2, 3, 4, 5]; console.log(shuffleArray(myArray));\",\"在这个函数中，<span class=\\\"ne-text\\\">currentIndex</span> 初始化为数组的长度，然后在每次迭代中减少。<span class=\\\"ne-text\\\">randomIndex</span> 是从0到 <span class=\\\"ne-text\\\">currentIndex</span>（包括 <span class=\\\"ne-text\\\">currentIndex</span>）的随机索引。然后，将 <span class=\\\"ne-text\\\">currentIndex</span>指向的元素与 <span class=\\\"ne-text\\\">randomIndex</span>指向的元素交换。\",\"这种方法确保每个元素都有相同的概率出现在数组的任何位置，从而实现了真正的随机排序。\",\"请注意，这个函数会直接修改传入的数组。如果你需要保留原始数组，可以先复制一份数组再进行排序：\",\"const originalArray = [1, 2, 3, 4, 5]; const arrayCopy = [...originalArray]; console.log(shuffleArray(arrayCopy)); console.log(originalArray); // 原始数组保持不变\",\"使用扩展运算符（<span class=\\\"ne-text\\\">...</span>）可以轻松地复制数组。\"]},\"327\":{\"h\":\"dom节点的Attribute和Property有何区别？\",\"t\":[\"1.attribute是HTML元素在标记中定义的属性，\",\"而property是DOM元素在JavaScript中的属性。\",\"2.attribute表示初始HTML属性的值，无法反映元素当前的状态，\",\"而property可以反映元素的实际状态。\",\"3.通过getAttribute()和setAttribute()方法可以操作attribute,\",\"通过直接访问DOM元素对象的属性来操作property.\",\"拓展\",\"在Web开发中，DOM（文档对象模型）节点的属性（Attribute）和特性（Property）是两个相关但不同的概念。它们在JavaScript中的表现和用途有所区别：\"]},\"328\":{\"h\":\"Attribute\",\"t\":[\"定义：Attribute是定义在HTML标签内的，用于为HTML元素提供额外信息的键值对。\",\"存储位置：Attribute存储在DOM中，可以通过<span class=\\\"ne-text\\\">element.getAttribute()</span>方法访问，也可以通过 <span class=\\\"ne-text\\\">element.setAttribute()</span>方法设置。\",\"表现：Attribute通常在HTML标签中可见，例如<span class=\\\"ne-text\\\"><input type=\\\"text\\\" value=\\\"Hello\\\"></span>中的 <span class=\\\"ne-text\\\">type</span>和 <span class=\\\"ne-text\\\">value</span>。\",\"编码：Attribute在HTML中是作为字符串存储的，即使它们看起来像数字或其他类型。\",\"标准化：浏览器会根据HTML规范对Attribute进行标准化处理。\"]},\"329\":{\"h\":\"Property\",\"t\":[\"定义：Property是JavaScript中DOM元素对象的属性，它们是可以通过JavaScript访问和修改的。\",\"存储位置：Property是对象的属性，可以通过点符号（<span class=\\\"ne-text\\\">.</span>）或方括号（<span class=\\\"ne-text\\\">[]</span>）访问和设置，例如 <span class=\\\"ne-text\\\">element.property</span>或 <span class=\\\"ne-text\\\">element['property']</span>。\",\"表现：Property反映了元素的实时状态，它们可能与Attribute相对应，也可能不对应。\",\"类型：Property是JavaScript变量，因此它们具有明确的类型，例如字符串、数字或布尔值。\",\"更新：修改Property可能会影响元素的表现，但不一定影响HTML标签内的Attribute。\"]},\"330\":{\"h\":\"区别\",\"t\":[\"来源：Attribute来自HTML标签，而Property来自DOM元素对象。\",\"访问方式：Attribute通过<span class=\\\"ne-text\\\">getAttribute</span>和 <span class=\\\"ne-text\\\">setAttribute</span>方法访问，Property通过点符号或方括号访问。\",\"同步性：对于布尔类型的Attribute和Property，它们通常是同步的，即修改一个另一个也会变。但对于其他类型，如<span class=\\\"ne-text\\\">value</span>属性，它们可能不同步，因为Property可能会被JavaScript代码修改，而Attribute只在HTML中更改。\",\"类型转换：Attribute在HTML中总是字符串，而Property具有JavaScript的类型转换特性。\"]},\"331\":{\"h\":\"示例\",\"t\":[\"考虑以下HTML元素：\",\"<input type=\\\"text\\\" value=\\\"Hello\\\">\",\"Attribute：\",\"<span class=\\\"ne-text\\\">type=\\\"text\\\"</span>：表示输入字段的类型。\",\"<span class=\\\"ne-text\\\">value=\\\"Hello\\\"</span>：表示输入字段的初始值。\",\"Property：\",\"<span class=\\\"ne-text\\\">input.type</span>：在JavaScript中访问时，<span class=\\\"ne-text\\\">type</span>是一个Property，其值为字符串 <span class=\\\"ne-text\\\">\\\"text\\\"</span>。\",\"<span class=\\\"ne-text\\\">input.value</span>：在JavaScript中访问时，<span class=\\\"ne-text\\\">value</span>是一个Property，其值为字符串 <span class=\\\"ne-text\\\">\\\"Hello\\\"</span>。如果通过JavaScript更改 <span class=\\\"ne-text\\\">input.value</span>，输入字段的值会实时更新，但HTML标签中的 <span class=\\\"ne-text\\\">value</span> Attribute不会改变。\",\"在实际开发中，了解Attribute和Property之间的区别对于正确操作DOM元素非常重要。\"]},\"332\":{\"h\":\"dom结构操作怎样添加、移除、移动、复制、创建和查找节点？\",\"t\":[\"拓展\",\"在JavaScript中，操作DOM（文档对象模型）结构是常见的任务，包括添加、移除、移动、复制、创建和查找节点。以下是这些操作的基本方法：\"]},\"333\":{\"h\":\"添加节点\",\"t\":[\"使用<span class=\\\"ne-text\\\">appendChild()</span>方法将新节点添加到父节点中。\",\"var newElement = document.createElement('div'); var parentElement = document.getElementById('parent'); parentElement.appendChild(newElement);\"]},\"334\":{\"h\":\"移除节点\",\"t\":[\"使用<span class=\\\"ne-text\\\">removeChild()</span>方法从DOM中移除节点。\",\"var elementToRemove = document.getElementById('removeMe'); var parentElement = elementToRemove.parentNode; parentElement.removeChild(elementToRemove);\"]},\"335\":{\"h\":\"移动节点\",\"t\":[\"移动节点通常是通过先移除再添加的方式实现。\",\"var elementToMove = document.getElementById('moveMe'); var newParent = document.getElementById('newParent'); newParent.appendChild(elementToMove); // 相当于移动了节点\"]},\"336\":{\"h\":\"替换节点\",\"t\":[\"使用<span class=\\\"ne-text\\\">replaceChild()</span>方法替换一个节点。\",\"var newElement = document.createElement('div'); var oldElement = document.getElementById('replaceMe'); var parentElement = oldElement.parentNode; parentElement.replaceChild(newElement, oldElement);\"]},\"337\":{\"h\":\"复制节点\",\"t\":[\"使用<span class=\\\"ne-text\\\">cloneNode()</span>方法复制节点。注意，如果设置为 <span class=\\\"ne-text\\\">true</span>，它将复制节点及其所有子节点。\",\"var elementToCopy = document.getElementById('copyMe'); var copiedElement = elementToCopy.cloneNode(false); // 只复制节点，不复制子节点 var parentElement = document.getElementById('parent'); parentElement.appendChild(copiedElement);\"]},\"338\":{\"h\":\"创建节点\",\"t\":[\"使用<span class=\\\"ne-text\\\">createElement()</span>方法创建新的元素节点。\",\"var newElement = document.createElement('p');\",\"使用<span class=\\\"ne-text\\\">createTextNode()</span>方法创建新的文本节点。\",\"var newText = document.createTextNode('这是一些文本');\"]},\"339\":{\"h\":\"查找节点\",\"t\":[\"使用<span class=\\\"ne-text\\\">getElementById()</span>方法通过ID查找节点。\",\"var element = document.getElementById('myId');\",\"使用<span class=\\\"ne-text\\\">getElementsByClassName()</span>方法通过类名查找节点列表。\",\"var elements = document.getElementsByClassName('myClass');\",\"使用<span class=\\\"ne-text\\\">getElementsByTagName()</span>方法通过标签名查找节点列表。\",\"var elements = document.getElementsByTagName('div');\",\"使用<span class=\\\"ne-text\\\">querySelector()</span>方法通过CSS选择器查找第一个匹配的节点。\",\"var element = document.querySelector('.myClass');\",\"使用<span class=\\\"ne-text\\\">querySelectorAll()</span>方法通过CSS选择器查找所有匹配的节点列表。\",\"var elements = document.querySelectorAll('.myClass');\",\"这些是操作DOM结构的基本方法。在实际应用中，你可能需要根据具体情况选择合适的方法来操作DOM。\"]},\"340\":{\"h\":\"什么是事件冒泡，它是如何工作的？如何阻止事件冒泡？\",\"t\":[\"事件向上传播到根节点\",\"event.stopPropagation() 阻止冒泡\",\"拓展\"]},\"341\":{\"h\":\"事件冒泡（Event Bubbling）\",\"t\":[\"事件冒泡是DOM事件传播的一种机制。当一个事件发生在某个元素上时，这个事件会从这个元素开始，逐级向上传播到根节点（document对象）。在这个过程中，每个父节点都会接收到这个事件，从而有机会对它进行处理。\"]},\"342\":{\"h\":\"工作原理\",\"t\":[\"事件首先在触发它的元素（目标元素）上被处理。\",\"然后，事件会逐级向上传播到父元素，直到达到根节点（<span class=\\\"ne-text\\\">document</span>对象）。\",\"在这个过程中，任何父元素都有机会捕获并处理这个事件。\"]},\"343\":{\"h\":\"示例\",\"t\":[\"假设你有以下的HTML结构：\",\"<div id=\\\"parent\\\"> <button id=\\\"child\\\">点击我</button> </div>\",\"并且你有以下的JavaScript代码：\",\"const childButton = document.getElementById('child'); const parentDiv = document.getElementById('parent'); childButton.addEventListener('click', function(event) { console.log('按钮被点击'); }); parentDiv.addEventListener('click', function(event) { console.log('容器被点击'); }); // 当你点击按钮时，会按照以下顺序触发事件： // 1. 按钮被点击 // 2. 容器被点击\",\"在这个例子中，当你点击按钮时，首先会触发按钮上的点击事件，然后事件会冒泡到父容器<span class=\\\"ne-text\\\">div</span>上，触发父容器的点击事件。\"]},\"344\":{\"h\":\"如何阻止事件冒泡\",\"t\":[\"虽然事件冒泡提供了一种强大的事件处理机制，但在某些情况下，你可能不希望事件继续向上传播。为了阻止事件冒泡，你可以使用<span class=\\\"ne-text\\\">event.stopPropagation()</span>方法。\"]},\"345\":{\"h\":\"示例\",\"t\":[\"继续使用上面的HTML结构，如果你只想处理按钮的点击事件，而不希望触发父容器的点击事件，你可以在按钮的点击事件处理函数中调用<span class=\\\"ne-text\\\">event.stopPropagation()</span>：\",\"childButton.addEventListener('click', function(event) { console.log('按钮被点击'); event.stopPropagation(); // 阻止事件冒泡 }); parentDiv.addEventListener('click', function(event) { console.log('容器被点击'); });\",\"在这个例子中，当你点击按钮时，只会触发按钮上的点击事件，而不会触发父容器的点击事件，因为<span class=\\\"ne-text\\\">event.stopPropagation()</span>阻止了事件的进一步传播。\"]},\"346\":{\"h\":\"总结\",\"t\":[\"事件冒泡是DOM事件处理中的一个重要概念，它允许事件在DOM树中向上传播。通过理解事件冒泡的工作原理，你可以更有效地控制事件处理逻辑。当需要阻止事件冒泡时，可以使用<span class=\\\"ne-text\\\">event.stopPropagation()</span>方法来实现。\"]},\"347\":{\"h\":\"什么是事件捕获，它是如何工作的？\",\"t\":[\"由外到内执行,捕获时间需要在监听时候添加第三个参数,为true\",\"const parentDiv = document.getElementById('parent'); const childButton = document.getElementById('child'); // 在捕获阶段添加事件处理器 parentDiv.addEventListener('click', function(event) { console.log('容器捕获点击'); }, true); // 在冒泡阶段添加事件处理器 childButton.addEventListener('click', function(event) { console.log('按钮被点击'); }); // 当你点击按钮时，会按照以下顺序触发事件： // 1. 容器捕获点击 // 2. 按钮被点击\",\"拓展\",\"事件捕获（Event Capturing）是DOM事件传播的另一个阶段，与事件冒泡相对。在事件捕获阶段，事件从根节点（document对象）开始，沿着DOM树向下传播到目标元素。这意味着在事件到达目标元素之前，它首先会经过一系列的父元素和祖先元素。\"]},\"348\":{\"h\":\"工作原理\",\"t\":[\"事件开始于根节点（document对象）。\",\"事件沿着DOM树向下传播，直到到达目标元素。\",\"在这个过程中，每个父元素都有机会捕获并处理事件，这发生在事件到达目标元素之前。\"]},\"349\":{\"h\":\"事件传播的三个阶段\",\"t\":[\"事件捕获阶段：事件从document对象开始，向下传播到目标元素的任何父元素或祖先元素。\",\"目标阶段：事件到达目标元素。\",\"事件冒泡阶段：事件从目标元素向上传播回document对象。\"]},\"350\":{\"h\":\"如何使用事件捕获\",\"t\":[\"在JavaScript中，你可以通过在<span class=\\\"ne-text\\\">addEventListener</span>方法中设置第三个参数来指定事件处理器是在捕获阶段还是冒泡阶段被触发。如果你想在捕获阶段触发事件处理器，可以将第三个参数设置为 <span class=\\\"ne-text\\\">true</span>。\"]},\"351\":{\"h\":\"示例\",\"t\":[\"const parentDiv = document.getElementById('parent'); const childButton = document.getElementById('child'); // 在捕获阶段添加事件处理器 parentDiv.addEventListener('click', function(event) { console.log('容器捕获点击'); }, true); // 在冒泡阶段添加事件处理器 childButton.addEventListener('click', function(event) { console.log('按钮被点击'); }); // 当你点击按钮时，会按照以下顺序触发事件： // 1. 容器捕获点击 // 2. 按钮被点击\",\"在这个例子中，点击按钮会首先触发父容器的点击事件（在捕获阶段），然后才是按钮本身的点击事件（在冒泡阶段）。\"]},\"352\":{\"h\":\"如何阻止事件捕获\",\"t\":[\"如果你想阻止事件在捕获阶段继续传播，可以使用<span class=\\\"ne-text\\\">event.stopPropagation()</span>方法。这将阻止事件进一步向下传播到目标元素或任何子元素。\",\"parentDiv.addEventListener('click', function(event) { console.log('容器捕获点击'); event.stopPropagation(); // 阻止事件进一步传播 }, true); childButton.addEventListener('click', function(event) { console.log('按钮被点击'); }, true);\",\"在这个例子中，由于在父容器的事件处理器中调用了<span class=\\\"ne-text\\\">event.stopPropagation()</span>，点击按钮将不会触发按钮本身的点击事件。\"]},\"353\":{\"h\":\"总结\",\"t\":[\"事件捕获提供了一种在事件到达目标元素之前处理事件的机制。通过在<span class=\\\"ne-text\\\">addEventListener</span>中设置 <span class=\\\"ne-text\\\">true</span>作为第三个参数，你可以在捕获阶段注册事件处理器。这允许你在事件到达目标元素之前进行干预，例如在父元素中捕获事件并阻止它进一步传播。\"]},\"354\":{\"h\":\"dom的事件模型\",\"t\":[\"1726711353383\"]},\"355\":{\"h\":\"DOM 事件模型\",\"t\":[\"<span class=\\\"ne-text\\\">addEventListener</span>：绑定事件的监听函数\",\"<span class=\\\"ne-text\\\">removeEventListener</span>：移除事件的监听函数\",\"<span class=\\\"ne-text\\\">dispatchEvent</span>：触发事件\"]},\"356\":{\"h\":\"事件模型\",\"t\":[\"由外向内找监听函数就是事件捕获\",\"在目标节点触发事件\",\"由内而外找监听函数就是事件冒泡\",\"事件传播的最上层对象是<span class=\\\"ne-text\\\">window</span>，上例的事件传播顺序，\",\"在捕获阶段依次为<span class=\\\"ne-text\\\">window</span>、<span class=\\\"ne-text\\\">documen</span>t、<span class=\\\"ne-text\\\">html</span>、<span class=\\\"ne-text\\\">body</span>、<span class=\\\"ne-text\\\">父节点</span>、<span class=\\\"ne-text\\\">目标节点</span>，\",\"在冒泡阶段依次为<span class=\\\"ne-text\\\">目标节点</span>、<span class=\\\"ne-text\\\">父节点</span>、<span class=\\\"ne-text\\\">body</span>、<span class=\\\"ne-text\\\">html</span>、<span class=\\\"ne-text\\\">document</span>、<span class=\\\"ne-text\\\">window</span>。\",\"DOM事件传播的三个阶段：捕获阶段，目标阶段 **，**冒泡阶段\",\"target v.s. currentTarget的区别\",\"区别\",\"**e.target - 用户操作的元素 **\",\"**e.currentTarget-程序员监听的元素 **\",\"this是e.currentTarget,我个人不推荐使用它\",\"举例：\",\"**div>span{文字},用户点击文字 **\",\"**e.target就是span **\",\"e.currentTarget就是div\",\"e.stopPropagation()：取消冒泡\",\"e.stopPropagation()可打断冒泡，浏览器不再向上走\",\"一般用于封装某些独立组件\",\"事件委托\",\"事件委托的优点包括：\",\"减少内存消耗：因为只需要在父元素上设置一个事件处理程序，而不是在每个子元素上都设置。\",\"动态元素管理：对于动态添加到DOM中的元素，不需要单独为它们添加事件处理程序，因为它们会继承父元素的事件处理程序。\",\"简化代码：可以简化事件处理代码，特别是当有多个元素需要相同类型的事件处理时。\",\"事件委托的实现示例：\",\"html <div id=\\\"parent\\\"> <button>按钮1</button> <button>按钮2</button> <!-- 更多按钮 --> </div>\",\"javascript复制 const parentDiv = document.getElementById('parent'); parentDiv.addEventListener('click', function(event) { const target = event.target; // 事件实际触发的元素 if (target.tagName === 'BUTTON') { console.log('按钮被点击', target.textContent); } });\",\"拓展\",\"DOM（文档对象模型）的事件模型描述了如何在用户与页面交互时处理事件。在Web开发中，主要有两种事件模型：DOM Level 0事件模型和DOM Level 2事件模型。\"]},\"357\":{\"h\":\"DOM Level 2事件模型\",\"t\":[\"这是现代浏览器使用的事件模型，它提供了更灵活和强大的事件处理机制。在DOM Level 2事件模型中：\",\"事件监听：事件处理程序通过JavaScript的<span class=\\\"ne-text\\\">addEventListener</span>方法添加到元素上，可以动态添加和移除。\",\"element.addEventListener('click', function(event) { // 处理事件 }, false);\",\"事件对象：当事件被触发时，会创建一个事件对象，它包含了事件的所有信息，如事件类型、目标、时间戳等。这个对象作为参数传递给事件处理函数。\",\"function handleClick(event) { console.log(event.type); // \\\"click\\\" console.log(event.target); // 事件目标元素 }\",\"事件传播：事件在DOM中传播的过程包括三个阶段：\",\"捕获阶段（Capturing Phase）：事件从根节点（document对象）开始，向下传播到目标元素。\",\"目标阶段（Target Phase）：事件到达目标元素。\",\"冒泡阶段（Bubbling Phase）：事件从目标元素向上传播回根节点。\",\"事件流：可以通过设置<span class=\\\"ne-text\\\">addEventListener</span>的第三个参数来控制事件处理是在捕获阶段还是冒泡阶段触发。默认情况下（第三个参数为 <span class=\\\"ne-text\\\">false</span>），事件处理在冒泡阶段触发。如果设置为 <span class=\\\"ne-text\\\">true</span>，则在捕获阶段触发。\",\"事件取消：可以使用<span class=\\\"ne-text\\\">event.preventDefault()</span>方法取消事件的默认行为，使用 <span class=\\\"ne-text\\\">event.stopPropagation()</span>方法阻止事件进一步传播。\",\"事件委托：由于事件冒泡的特性，可以在父元素上设置一个事件处理程序来管理所有子元素的同一类事件，这称为事件委托。这有助于减少内存消耗并简化代码。\",\"现代Web开发中，推荐使用DOM Level 2事件模型，因为它提供了更好的控制和更丰富的特性集。\"]},\"358\":{\"h\":\"事件对象\",\"t\":[\"在DOM事件处理中，当一个事件发生时，浏览器会创建一个事件对象（通常表示为<span class=\\\"ne-text\\\">event</span>），这个对象包含了关于事件的详细信息，以及一些可以调用的方法。事件对象作为参数自动传递给事件处理函数。\",\"事件对象包含以下常见的属性和方法：\",\"<span class=\\\"ne-text\\\">type</span>：事件的类型，例如 <span class=\\\"ne-text\\\">\\\"click\\\"</span>、<span class=\\\"ne-text\\\">\\\"mouseover\\\"</span>等。\",\"<span class=\\\"ne-text\\\">target</span>：触发事件的元素，也就是事件绑定的元素。\",\"<span class=\\\"ne-text\\\">currentTarget</span>：事件处理程序当前正在被执行的元素，这在事件委托中特别有用。\",\"<span class=\\\"ne-text\\\">eventPhase</span>：当前事件处于的阶段（捕获阶段、目标阶段或冒泡阶段）。\",\"<span class=\\\"ne-text\\\">bubbles</span>：指示事件是否冒泡。\",\"<span class=\\\"ne-text\\\">cancelable</span>：指示事件是否可以被取消。\",\"<span class=\\\"ne-text\\\">timeStamp</span>：事件被创建时的时间戳。\",\"<span class=\\\"ne-text\\\">preventDefault()</span>：取消事件的默认行为。\",\"<span class=\\\"ne-text\\\">stopPropagation()</span>：停止事件进一步传播。\",\"<span class=\\\"ne-text\\\">stopImmediatePropagation()</span>：停止事件的进一步传播，并且阻止同一元素上其他同类型事件的执行。\"]},\"359\":{\"h\":\"事件委托\",\"t\":[\"事件委托是一种技术，它利用了事件冒泡的原理。在这种技术中，事件监听器不是直接绑定在目标元素上，而是绑定在目标元素的父元素或祖先元素上。当子元素（目标元素）触发事件时，这个事件会冒泡到父元素，父元素上的事件处理程序就会执行。\",\"事件委托的优点包括：\",\"减少内存消耗：因为只需要在父元素上设置一个事件处理程序，而不是在每个子元素上都设置。\",\"动态元素管理：对于动态添加到DOM中的元素，不需要单独为它们添加事件处理程序，因为它们会继承父元素的事件处理程序。\",\"简化代码：可以简化事件处理代码，特别是当有多个元素需要相同类型的事件处理时。\",\"事件委托的实现示例：\",\"<div id=\\\"parent\\\"> <button>按钮1</button> <button>按钮2</button> <!-- 更多按钮 --> </div>\",\"const parentDiv = document.getElementById('parent'); parentDiv.addEventListener('click', function(event) { const target = event.target; // 事件实际触发的元素 if (target.tagName === 'BUTTON') { console.log('按钮被点击', target.textContent); } });\",\"在这个例子中，我们只在父元素<span class=\\\"ne-text\\\">div</span>上设置了一个点击事件的监听器。当任何按钮被点击时，事件会冒泡到 <span class=\\\"ne-text\\\">div</span>，然后事件处理程序会检查事件的目标是否是按钮。如果是，就执行相应的操作。这样，即使后续添加了更多的按钮，也不需要为它们单独设置事件监听器。\"]},\"360\":{\"h\":\"事件三要素是什么？\",\"t\":[\"事件类型（Event Type）\",\"事件目标（Event Target）\",\"事件处理器（Event Handler）\",\"拓展\",\"在DOM（文档对象模型）事件处理中，通常提到事件的三个基本要素，它们是：\",\"事件类型（Event Type）：\",\"这是触发事件的具体动作，比如<span class=\\\"ne-text\\\">click</span>、<span class=\\\"ne-text\\\">mouseover</span>、<span class=\\\"ne-text\\\">keydown</span>等。事件类型告诉你发生了什么类型的交互或动作。\",\"事件目标（Event Target）：\",\"这是触发事件的DOM元素。例如，如果你点击了一个按钮，那么这个按钮元素就是事件的目标。\",\"事件处理器（Event Handler）：\",\"这是当事件发生时，要执行的函数或代码。事件处理器是你定义的逻辑，用于响应特定的事件。\"]},\"361\":{\"h\":\"事件对象（Event Object）\",\"t\":[\"除了上述三个要素，还有一个重要的组成部分是事件对象。当事件被触发时，浏览器会创建一个事件对象，该对象包含了事件的详细信息和一些方法，用于控制事件的传播和默认行为。\",\"事件对象（Event Object）：\",\"这个对象作为参数自动传递给事件处理器函数。它提供了关于事件的详细信息，如事件的类型、目标、时间、是否可取消等。\",\"事件对象的方法包括<span class=\\\"ne-text\\\">preventDefault()</span>（取消事件的默认行为）、<span class=\\\"ne-text\\\">stopPropagation()</span>（停止事件的进一步传播）和 <span class=\\\"ne-text\\\">stopImmediatePropagation()</span>（停止事件的进一步传播，并阻止同一元素上其他同类型事件的执行）。\"]},\"362\":{\"h\":\"示例\",\"t\":[\"// 获取一个DOM元素 const button = document.getElementById('myButton'); // 定义一个事件处理器函数 function handleClick(event) { console.log('按钮被点击了'); console.log('事件类型:', event.type); // 事件类型 console.log('事件目标:', event.target); // 事件目标 // 可以调用事件对象的方法来控制事件行为 event.preventDefault(); event.stopPropagation(); } // 为按钮添加点击事件监听器 button.addEventListener('click', handleClick);\",\"在这个示例中，当按钮被点击时，会触发<span class=\\\"ne-text\\\">handleClick</span>事件处理器。这个处理器接收一个事件对象作为参数，从中可以访问事件的类型和目标，并且可以使用事件对象的方法来控制事件的行为。\"]},\"363\":{\"h\":\"获取元素位置？\",\"t\":[\"拓展\",\"在JavaScript中，获取元素的位置可以通过几种不同的方法，这些方法可以帮助你确定元素在页面上的确切位置，包括它距离页面左上角的距离，或者相对于其父元素的位置。以下是一些常用的方法：\"]},\"364\":{\"h\":\"1. 和\",\"t\":[\"这两个属性返回元素相对于其定位父元素（offset parent）的左（left）和顶（top）边的距离。\",\"const element = document.getElementById('myElement'); const xPos = element.offsetLeft; const yPos = element.offsetTop;\"]},\"365\":{\"h\":\"2.\",\"t\":[\"这个方法返回元素的大小以及其相对于视口的位置。它返回的是一个矩形对象，包含<span class=\\\"ne-text\\\">top</span>、<span class=\\\"ne-text\\\">right</span>、<span class=\\\"ne-text\\\">bottom</span>、<span class=\\\"ne-text\\\">left</span>、<span class=\\\"ne-text\\\">width</span>和 <span class=\\\"ne-text\\\">height</span>属性。\",\"const element = document.getElementById('myElement'); const rect = element.getBoundingClientRect(); const top = rect.top; const right = rect.right; const bottom = rect.bottom; const left = rect.left; const width = rect.width; const height = rect.height;\"]},\"366\":{\"h\":\"3.\",\"t\":[\"这个属性返回最近的含有定位（positioned）的父元素。如果所有父元素都没有定位，则返回最近的<span class=\\\"ne-text\\\"><table></span>或 <span class=\\\"ne-text\\\"><td></span>元素，如果这些元素也不存在，则返回 <span class=\\\"ne-text\\\"><body></span>元素。\",\"const element = document.getElementById('myElement'); const positionedParent = element.offsetParent;\"]},\"367\":{\"h\":\"4. 和\",\"t\":[\"这两个属性返回元素的边框宽度（border width），可以用来确定元素的内部尺寸。\",\"const element = document.getElementById('myElement'); const borderLeft = element.clientLeft; const borderTop = element.clientTop;\"]},\"368\":{\"h\":\"5. 和\",\"t\":[\"如果你需要获取元素的滚动位置，可以使用这两个属性。\",\"const element = document.getElementById('myElement'); const scrollLeft = element.scrollLeft; const scrollTop = element.scrollTop;\"]},\"369\":{\"h\":\"示例：获取元素相对于视口的位置\",\"t\":[\"以下示例展示了如何获取元素相对于浏览器视口的位置：\",\"const element = document.getElementById('myElement'); const rect = element.getBoundingClientRect(); const xPos = rect.left + window.scrollX; // 添加水平滚动距离 const yPos = rect.top + window.scrollY; // 添加垂直滚动距离 console.log(`Element is positioned at ${xPos} on the X-axis and ${yPos} on the Y-axis relative to the viewport.`);\",\"这些方法可以帮助你确定元素在页面上的位置，无论是相对于其父元素还是相对于整个视口。这对于执行动态布局、拖放功能或任何需要精确位置信息的操作都非常有用。\"]},\"370\":{\"h\":\"setTimeout和setInterval的区别及用法是什么？\",\"t\":[\"setTimeout(function, delay, [arg1, arg2, ...]);\",\"setInterval(function, interval, [arg1, arg2, ...]);\",\"** clearTimeout(timeoutId); // 停止setTimeout**\",\"** clearInterval(intervalId);**\",\"拓展\",\"<span class=\\\"ne-text\\\">setTimeout</span>和 <span class=\\\"ne-text\\\">setInterval</span>是JavaScript中用于定时执行代码的两个函数，它们都属于Window对象，也可用于Worker。尽管它们的目的相似，但用法和行为有所不同。\"]},\"371\":{\"h\":\"setTimeout\",\"t\":[\"<span class=\\\"ne-text\\\">setTimeout</span>用于在指定的毫秒数后执行一次代码。\",\"用法:\",\"setTimeout(function, delay, [arg1, arg2, ...]);\",\"<span class=\\\"ne-text\\\">function</span>: 要执行的函数。\",\"<span class=\\\"ne-text\\\">delay</span>: 延迟时间，单位为毫秒。\",\"<span class=\\\"ne-text\\\">arg1, arg2, ...</span>: 可选参数，传递给函数的参数。\",\"示例:\",\"function sayHello() { console.log('Hello after 3 seconds'); } setTimeout(sayHello, 3000); // 3秒后执行sayHello函数\"]},\"372\":{\"h\":\"setInterval\",\"t\":[\"<span class=\\\"ne-text\\\">setInterval</span>用于按照指定的时间间隔周期性地执行代码。\",\"用法:\",\"setInterval(function, interval, [arg1, arg2, ...]);\",\"<span class=\\\"ne-text\\\">function</span>: 要执行的函数。\",\"<span class=\\\"ne-text\\\">interval</span>: 每次执行的间隔时间，单位为毫秒。\",\"<span class=\\\"ne-text\\\">arg1, arg2, ...</span>: 可选参数，传递给函数的参数。\",\"示例:\",\"function repeatHello() { console.log('Hello every 2 seconds'); } const intervalId = setInterval(repeatHello, 2000); // 每2秒执行一次repeatHello函数\"]},\"373\":{\"h\":\"区别\",\"t\":[\"执行次数：<span class=\\\"ne-text\\\">setTimeout</span>执行一次后停止，而 <span class=\\\"ne-text\\\">setInterval</span>会不断重复执行，直到你明确地停止它（使用 <span class=\\\"ne-text\\\">clearInterval</span>）。\",\"延迟与间隔：<span class=\\\"ne-text\\\">setTimeout</span>的延迟是指从调用 <span class=\\\"ne-text\\\">setTimeout</span>到函数执行之间的时间。<span class=\\\"ne-text\\\">setInterval</span>的间隔是指函数执行之间的时间。\",\"停止执行：<span class=\\\"ne-text\\\">setTimeout</span>不需要手动停止，因为执行一次后自然结束。<span class=\\\"ne-text\\\">setInterval</span>需要使用 <span class=\\\"ne-text\\\">clearInterval</span>来停止。\"]},\"374\":{\"h\":\"停止定时器\",\"t\":[\"<span class=\\\"ne-text\\\">clearTimeout</span>用于停止 <span class=\\\"ne-text\\\">setTimeout</span>。\",\"<span class=\\\"ne-text\\\">clearInterval</span>用于停止 <span class=\\\"ne-text\\\">setInterval</span>。\",\"示例:\",\"const timeoutId = setTimeout(function() { console.log('This will not run'); }, 5000); clearTimeout(timeoutId); // 停止setTimeout const intervalId = setInterval(function() { console.log('This will run until it is cleared'); }, 1000); // 运行一段时间后停止 setTimeout(function() { clearInterval(intervalId); }, 10000);\"]},\"375\":{\"h\":\"注意事项\",\"t\":[\"当使用<span class=\\\"ne-text\\\">setInterval</span>时，如果执行的函数耗时较长，可能会导致执行重叠，即上一次执行还没完成，下一次又开始了。为了避免这种情况，可以使用 <span class=\\\"ne-text\\\">setTimeout</span>递归调用自身。\",\"<span class=\\\"ne-text\\\">setTimeout</span>和 <span class=\\\"ne-text\\\">setInterval</span>的精确度受到JavaScript单线程模型的限制，如果主线程被其他任务阻塞，定时器可能会延迟执行。\"]},\"376\":{\"h\":\"setTimeout来实现setInterval\",\"t\":[\"var timeWorker = {} var mySetInterval= function(fn, time) { // 定义一个key，来标识此定时器 var key = Symbol(); // 定义一个递归函数，持续调用定时器 var execute = function(fn, time) { timeWorker[key] = setTimeout(function(){ fn(); execute(fn, time); }, time) } execute(fn, time); // 返回key return key; } var myClearInterval = function(key) { if (key in timeWorker) { clearTimeout(timeWorker[key]); delete timeWorker[key]; } }\",\"拓展这段代码定义了两个函数：<span class=\\\"ne-text\\\">mySetInterval</span> 和 <span class=\\\"ne-text\\\">myClearInterval</span>，它们模拟了 <span class=\\\"ne-text\\\">setInterval</span> 和 <span class=\\\"ne-text\\\">clearInterval</span> 的行为，但是使用了 <span class=\\\"ne-text\\\">setTimeout</span> 来实现。这种方法可以避免 <span class=\\\"ne-text\\\">setInterval</span> 可能带来的一些问题，比如函数执行时间的不确定性和最小时间间隔的限制。\"]},\"377\":{\"h\":\"mySetInterval 函数\",\"t\":[\"这个函数接收两个参数：\",\"<span class=\\\"ne-text\\\">fn</span>：要重复执行的函数。\",\"<span class=\\\"ne-text\\\">time</span>：执行间隔时间，单位为毫秒。\",\"函数内部：\",\"**定义了一个 **<span class=\\\"ne-text\\\">key</span>，使用 <span class=\\\"ne-text\\\">Symbol</span> 来确保唯一性，这样可以在 <span class=\\\"ne-text\\\">timeWorker</span> 对象中唯一标识每个定时器。\",\"**定义了一个 **<span class=\\\"ne-text\\\">execute</span> 函数，它使用 <span class=\\\"ne-text\\\">setTimeout</span> 来实现定时调用 <span class=\\\"ne-text\\\">fn</span> 函数。每次 <span class=\\\"ne-text\\\">fn</span> 执行后，<span class=\\\"ne-text\\\">execute</span> 函数会再次调用自己，形成一个递归循环。\",\"**调用 **<span class=\\\"ne-text\\\">execute</span> 函数开始执行定时任务。\",\"**返回 **<span class=\\\"ne-text\\\">key</span>，这个 <span class=\\\"ne-text\\\">key</span> 可以用于以后取消定时任务。\"]},\"378\":{\"h\":\"myClearInterval 函数\",\"t\":[\"**这个函数用于取消由 **<span class=\\\"ne-text\\\">mySetInterval</span> 设置的定时任务。\",\"**它接收一个 **<span class=\\\"ne-text\\\">key</span> 参数，这个 <span class=\\\"ne-text\\\">key</span> 是 <span class=\\\"ne-text\\\">mySetInterval</span> 返回的。\",\"**如果 **<span class=\\\"ne-text\\\">timeWorker</span> 对象中存在这个 <span class=\\\"ne-text\\\">key</span>，则使用 <span class=\\\"ne-text\\\">clearTimeout</span> 来取消对应的定时器，然后从 <span class=\\\"ne-text\\\">timeWorker</span> 对象中删除这个 <span class=\\\"ne-text\\\">key</span>。\"]},\"379\":{\"h\":\"使用示例\",\"t\":[\"var myIntervalKey = mySetInterval(function() { console.log('这条消息会每2秒打印一次'); }, 2000); // 当你想停止定时任务时 myClearInterval(myIntervalKey);\"]},\"380\":{\"h\":\"注意事项\",\"t\":[\"**确保在不需要定时任务时调用 **<span class=\\\"ne-text\\\">myClearInterval</span> 来清除定时器，避免内存泄漏。\",\"**由于使用了 **<span class=\\\"ne-text\\\">Symbol</span> 作为 <span class=\\\"ne-text\\\">key</span>，所以每个定时器都是唯一的，即使在多个 <span class=\\\"ne-text\\\">mySetInterval</span> 调用之间也不会冲突。\",\"**这种方法比直接使用 **<span class=\\\"ne-text\\\">setInterval</span> 更灵活，因为它允许你在每次迭代后根据需要调整间隔时间或停止定时器。\"]},\"381\":{\"h\":\"document.write和innerHTML的区别？\",\"t\":[\"<span class=\\\"ne-text\\\">document.write</span> 主要用于在文档加载时写入内容，\",\"**而 **<span class=\\\"ne-text\\\">innerHTML</span> 用于在文档加载完成后修改元素的内容。\",\"拓展\",\"<span class=\\\"ne-text\\\">document.write</span> 和 <span class=\\\"ne-text\\\">innerHTML</span> 都是用来操作HTML文档内容的方法，但它们在用法和用途上有一些区别：\"]},\"382\":{\"h\":\"document.write\",\"t\":[\"<span class=\\\"ne-text\\\">document.write</span> 是一个只读属性，它返回当前文档的内容，如果尝试读取它的值，会返回空字符串。\",\"<span class=\\\"ne-text\\\">document.write</span> 方法可以用来向文档中写入字符串参数。当调用这个方法时，它会将字符串参数写入文档的输出流中。\",\"<span class=\\\"ne-text\\\">document.write</span> 只能用于在加载文档的过程中写入内容，一旦文档加载完成（即 <span class=\\\"ne-text\\\">DOMContentLoaded</span> 事件之后），再使用 <span class=\\\"ne-text\\\">document.write</span> 会清空整个文档的内容。\",\"<span class=\\\"ne-text\\\">document.write</span> 通常在服务器生成HTML或在文档加载时由JavaScript动态生成内容时使用。\"]},\"383\":{\"h\":\"innerHTML\",\"t\":[\"<span class=\\\"ne-text\\\">innerHTML</span> 是一个属性，它返回指定元素内的HTML内容。\",\"<span class=\\\"ne-text\\\">innerHTML</span> 可以用来读取或设置元素内的HTML内容。当你设置一个元素的 <span class=\\\"ne-text\\\">innerHTML</span> 属性时，它会替换该元素内部的所有内容（包括子元素）。\",\"<span class=\\\"ne-text\\\">innerHTML</span> 可以在任何时候使用，即使在文档加载完成后也可以安全地使用，不会导致整个文档内容被清空。\",\"<span class=\\\"ne-text\\\">innerHTML</span> 常用于动态更新页面的部分内容，比如通过JavaScript操作DOM来更改或添加新的元素和文本。\"]},\"384\":{\"h\":\"区别\",\"t\":[\"用途：<span class=\\\"ne-text\\\">document.write</span> 主要用于在文档加载时写入内容，而 <span class=\\\"ne-text\\\">innerHTML</span> 用于在文档加载完成后修改元素的内容。\",\"安全性：<span class=\\\"ne-text\\\">innerHTML</span> 可以导致跨站脚本（XSS）攻击，因为它允许执行HTML和JavaScript。在使用 <span class=\\\"ne-text\\\">innerHTML</span> 时，需要确保内容是安全的，不包含用户输入的恶意代码。<span class=\\\"ne-text\\\">document.write</span> 也有类似的安全风险。\",\"灵活性：<span class=\\\"ne-text\\\">innerHTML</span> 更灵活，因为它可以用于单个元素，而 <span class=\\\"ne-text\\\">document.write</span> 影响整个文档。\",\"性能 **：频繁使用 **<span class=\\\"ne-text\\\">innerHTML</span> 可能会导致性能问题，因为它涉及到DOM的重绘和重排。<span class=\\\"ne-text\\\">document.write</span> 在文档加载时使用，不涉及重绘和重排的问题。\"]},\"385\":{\"h\":\"示例\",\"t\":[\"// 使用 document.write document.write('<p>Hello World</p>'); // 使用 innerHTML var element = document.getElementById('myElement'); element.innerHTML = '<strong>Bold Text</strong>';\",\"**在实际开发中，推荐使用 **<span class=\\\"ne-text\\\">innerHTML</span> 来动态更新页面内容，因为它提供了更好的控制和灵活性。同时，要注意防范XSS攻击，确保处理的内容是安全的。\"]},\"386\":{\"h\":\"元素拖动如何实现，原理是怎样？\",\"t\":[\"原生\",\"mousedown：当鼠标按下时，记录当前鼠标位置和元素的初始位置。\",\"mousemove：当鼠标移动时，计算鼠标的新位置，并相应地移动元素。\",\"mouseup：当鼠标释放时，停止移动元素。\",\"使用HTML5拖放API\",\"draggable属性：给元素添加<span class=\\\"ne-text\\\">draggable=\\\"true\\\"</span>属性，使其可拖动。\",\"拖动事件：监听<span class=\\\"ne-text\\\">dragstart</span>、<span class=\\\"ne-text\\\">dragover</span>、<span class=\\\"ne-text\\\">dragend</span>等事件来控制拖动过程。\",\"拓展\",\"元素拖动是Web开发中常见的交互功能，可以通过原生JavaScript或HTML5的拖放API来实现。以下是两种方法的实现方式和原理：\"]},\"387\":{\"h\":\"使用原生JavaScript\",\"t\":[\"原生JavaScript实现元素拖动的原理是监听鼠标事件，通过计算鼠标移动的距离来更新元素的位置。\",\"mousedown：当鼠标按下时，记录当前鼠标位置和元素的初始位置。\",\"mousemove：当鼠标移动时，计算鼠标的新位置，并相应地移动元素。\",\"mouseup：当鼠标释放时，停止移动元素。\"]},\"388\":{\"h\":\"示例代码\",\"t\":[\"var dragElement = document.getElementById('draggable'); var offsetX, offsetY, dragX, dragY; dragElement.onmousedown = function(e) { // 获取鼠标点击时的屏幕坐标 offsetX = e.clientX - dragX; offsetY = e.clientY - dragY; // 绑定移动和松开事件 document.onmousemove = dragMove; document.onmouseup = stopDragging; }; function dragMove(e) { // 计算元素新的位置 dragX = e.clientX - offsetX; dragY = e.clientY - offsetY; // 设置元素的新位置 dragElement.style.left = dragX + 'px'; dragElement.style.top = dragY + 'px'; } function stopDragging() { // 解除鼠标移动和松开事件 document.onmouseup = null; document.onmousemove = null; }\"]},\"389\":{\"h\":\"使用HTML5拖放API\",\"t\":[\"HTML5提供了一套拖放API，可以更方便地实现拖动功能。\",\"draggable属性：给元素添加<span class=\\\"ne-text\\\">draggable=\\\"true\\\"</span>属性，使其可拖动。\",\"拖动事件：监听<span class=\\\"ne-text\\\">dragstart</span>、<span class=\\\"ne-text\\\">dragover</span>、<span class=\\\"ne-text\\\">dragend</span>等事件来控制拖动过程。\"]},\"390\":{\"h\":\"示例代码\",\"t\":[\"<div id=\\\"draggable\\\" draggable=\\\"true\\\">可拖动的元素</div> <div id=\\\"dropzone\\\">放置区域</div> <script> var dragItem = document.getElementById('draggable'); var dropZone = document.getElementById('dropzone'); dragItem.addEventListener('dragstart', function(e) { // 拖动开始时的事件处理 }); dropZone.addEventListener('dragover', function(e) { // 阻止默认行为以启用drop e.preventDefault(); }); dropZone.addEventListener('drop', function(e) { // 拖动结束并放置时的事件处理 var data = e.dataTransfer.getData(\\\"text\\\"); // 将拖动的元素移动到放置区域 dropZone.appendChild(dragItem); }); </script>\"]},\"391\":{\"h\":\"原理\",\"t\":[\"鼠标事件：通过监听鼠标事件来控制元素的移动。\",\"事件委托：在<span class=\\\"ne-text\\\">document</span>上监听事件，而不是直接在元素上，这样可以处理从元素外部移动到元素内部的情况。\",\"坐标计算：计算鼠标移动的距离，并更新元素的位置。\",\"CSS定位：通常使用CSS的<span class=\\\"ne-text\\\">position</span>属性（如 <span class=\\\"ne-text\\\">absolute</span>或 <span class=\\\"ne-text\\\">fixed</span>）来使元素脱离文档流，从而可以自由移动。\",\"在实际应用中，可以根据具体需求选择使用原生JavaScript或HTML5拖放API来实现元素拖动。HTML5拖放API提供了更丰富的功能和更好的浏览器兼容性，但可能需要处理更多的事件和细节。原生JavaScript方法则更灵活，可以自定义更多的行为和样式。\"]},\"392\":{\"h\":\"图片\",\"t\":[\"页面加载就像吃饭，懒加载就是吃多少盛多少，预加载就是把饭先盛好等你吃\",\"懒加载和预加载实现\",\"lazy preloadhttps://blog.csdn.net/weixin_49078296/article/details/140249963\",\"https://blog.csdn.net/qq_44741577/article/details/139324747\",\"拓展\",\"图片的懒加载（Lazy Loading）和预加载（Preloading）是两种优化网页性能的技术，它们分别用于减少初始页面加载时间并提高用户体验。\"]},\"393\":{\"h\":\"图片懒加载\",\"t\":[\"懒加载是一种延迟加载网页中非关键资源的技术。对于图片而言，懒加载意味着图片只有在接近滚动到视窗（viewport）时才开始加载。\",\"优点：\",\"减少初始页面加载时间：页面加载时不需要加载所有图片，从而减少了HTTP请求和数据传输量。\",\"节省带宽：用户可能只浏览页面的一部分，懒加载可以确保未浏览到的图片不会被加载。\",\"提高性能：对于图片较多的页面，懒加载可以显著提高页面的响应速度和性能。\",\"实现方式：\",\"原生JavaScript：通过监听滚动事件和计算元素的位置来实现。\",\"**HTML5 <span class=\\\"ne-text\\\">loading</span> ** 属性：<span class=\\\"ne-text\\\"><img loading=\\\"lazy\\\"></span>，现代浏览器支持这个属性，可以自动实现图片懒加载。\",\"Intersection Observer API：这是一个更现代和更高效的方法，用于异步检测目标元素与祖先元素或顶级文档视窗(<span class=\\\"ne-text\\\">viewport</span>)的交叉状态。\"]},\"394\":{\"h\":\"图片预加载\",\"t\":[\"预加载是一种在页面加载时就提前加载资源的技术。对于图片而言，预加载意味着在用户浏览到图片之前，图片已经被加载到浏览器缓存中。\",\"优点：\",\"提高用户体验：用户滚动到图片位置时，图片已经加载完成，无需等待加载。\",\"减少加载时间：通过提前加载图片，可以减少用户实际看到图片时的加载时间。\",\"实现方式：\",\"<span class=\\\"ne-text\\\">preload</span> ** 关键字** ：在CSS中使用<span class=\\\"ne-text\\\">preload</span>关键字预加载关键图片。\",\"link rel=\\\"preload\\\" href=\\\"image.jpg\\\" as=\\\"image\\\"\",\"JavaScript：使用JavaScript动态创建图片元素并设置其<span class=\\\"ne-text\\\">src</span>属性来预加载图片。\",\"const preloadImage = (url) => { const img = new Image(); img.src = url; }; preloadImage('important-image.jpg');\",\"CSS Sprites：将多个小图标合并到一个图片文件中，然后通过CSS背景位置来显示不同的图标，这样可以减少HTTP请求。\"]},\"395\":{\"h\":\"选择懒加载还是预加载？\",\"t\":[\"懒加载：适用于图片数量众多且不是所有图片都会立即需要的场景，特别是在长页面滚动或无限滚动的网页中。\",\"预加载：适用于关键路径上的资源，比如首屏显示的图片或对用户体验至关重要的资源。\",\"在实际应用中，可以根据页面的具体需求和用户行为来决定使用懒加载、预加载或两者结合使用。例如，对于首屏内容可以采用预加载，而对于页面下方的内容则可以使用懒加载。\"]},\"396\":{\"h\":\"mouseover和mouseenter的区别\",\"t\":[\"mouseover:只要鼠标指计移入事件所绑定的元素或其子元素，都会触发该事件\",\"mouseenter:只有鼠标指引事件所绑定的元素时，才会触发该事件\",\"就是mouseover存在冒泡，mouseenter不存在\",\"拓展\",\"<span class=\\\"ne-text\\\">mouseover</span> 和 <span class=\\\"ne-text\\\">mouseenter</span> 都是鼠标事件，但它们在触发行为和事件传播上有所不同。\"]},\"397\":{\"h\":\"mouseover\",\"t\":[\"当鼠标指针移动到元素上时触发。\",\"**如果鼠标指针移动到其子元素上，也会触发父元素上的 **<span class=\\\"ne-text\\\">mouseover</span> 事件。\",\"事件会冒泡，意味着如果鼠标指针移动到一个元素的子元素上，父元素也会接收到事件。\"]},\"398\":{\"h\":\"mouseenter\",\"t\":[\"**当鼠标指针移动到元素上时触发，与 **<span class=\\\"ne-text\\\">mouseover</span> 类似。\",\"**不同之处在于，当鼠标指针移动到其子元素上时，不会再次触发父元素上的 **<span class=\\\"ne-text\\\">mouseenter</span> 事件。\",\"**事件不会冒泡，父元素不会因子元素上的鼠标指针移动而触发 **<span class=\\\"ne-text\\\">mouseenter</span> 事件。\"]},\"399\":{\"h\":\"区别总结\",\"t\":[\"事件传播：<span class=\\\"ne-text\\\">mouseover</span> 会冒泡，而 <span class=\\\"ne-text\\\">mouseenter</span> 不会。\",\"子元素交互：当鼠标指针移动到子元素上时，<span class=\\\"ne-text\\\">mouseover</span> 会在所有包含的元素上触发，而 <span class=\\\"ne-text\\\">mouseenter</span> 只在最初进入的元素上触发一次。\"]},\"400\":{\"h\":\"示例\",\"t\":[\"<div id=\\\"parent\\\" onmouseenter=\\\"console.log('parent mouseenter')\\\"> <div id=\\\"child\\\" onmouseenter=\\\"console.log('child mouseenter')\\\"> Hover over me! </div> </div>\",\"在这个例子中，当你将鼠标指针移动到子元素上时：\",\"**使用 **<span class=\\\"ne-text\\\">mouseenter</span>，只会打印 \\\"parent mouseenter\\\" 一次，即使鼠标指针在子元素上移动，也不会再次触发父元素上的 <span class=\\\"ne-text\\\">mouseenter</span> 事件。\",\"**如果将 **<span class=\\\"ne-text\\\">mouseenter</span> 改为 <span class=\\\"ne-text\\\">mouseover</span>，则每次鼠标指针移动到子元素的不同位置时，都会触发父元素上的 <span class=\\\"ne-text\\\">mouseover</span> 事件，因为 <span class=\\\"ne-text\\\">mouseover</span> 会冒泡。\",\"**选择使用 **<span class=\\\"ne-text\\\">mouseover</span> 还是 <span class=\\\"ne-text\\\">mouseenter</span> 取决于你是否需要处理事件冒泡以及对子元素的交互是否敏感。\"]},\"401\":{\"h\":\"new操作符做了哪些事情\",\"t\":[\"创建一个新对象\",\"** 新对象原型指向构造函数原型对象**\",\"** 将构造函数的this指向新对象**\",\"根据返回值判断\",\"拓展\",\"**这段代码是一个自定义的构造函数 **<span class=\\\"ne-text\\\">mynew</span>，它模拟了 JavaScript 中 <span class=\\\"ne-text\\\">new</span> 操作符的行为。下面是对代码的逐行解释：\",\"**创建一个新对象 **<span class=\\\"ne-text\\\">obj</span>，这个对象将作为构造函数的实例。\",\"**将新对象的原型指向构造函数 **<span class=\\\"ne-text\\\">Func</span> 的原型对象，这样新对象就可以继承构造函数的原型上的属性和方法。\",\"**使用 **<span class=\\\"ne-text\\\">Func.apply(obj, args)</span> 调用构造函数，并将 <span class=\\\"ne-text\\\">this</span> 指向新对象 <span class=\\\"ne-text\\\">obj</span>，同时传入构造函数所需的参数 <span class=\\\"ne-text\\\">args</span>。这里有一个语法错误，应该是 <span class=\\\"ne-text\\\">Func.apply(obj, args)</span> 而不是 <span class=\\\"ne-text\\\">let result Func.apply(obj,args)</span>。\",\"**判断构造函数的返回值。如果返回值是一个对象，则返回该对象；否则，返回新创建的对象 **<span class=\\\"ne-text\\\">obj</span>。\",\"修正后的代码如下：\",\"function mynew(Func, ...args) { // 1. 创建一个新对象 const obj = {}; // 2. 新对象原型指向构造函数原型对象 obj.__proto__ = Func.prototype; // 3. 将构造函数的this指向新对象 const result = Func.apply(obj, args); // 4. 根据返回值判断 return result instanceof Object ? result : obj; }\",\"这样，<span class=\\\"ne-text\\\">mynew</span> 函数就可以像 <span class=\\\"ne-text\\\">new</span> 操作符一样使用了。例如：\",\"function Person(name) { this.name = name; } Person.prototype.sayHello = function() { console.log(`Hello, my name is ${this.name}.`); }; const person = mynew(Person, 'Kimi'); person.sayHello(); // 输出: Hello, my name is Kimi.\",\"**请注意，虽然这个自定义的 **<span class=\\\"ne-text\\\">mynew</span> 函数可以模拟 <span class=\\\"ne-text\\\">new</span> 操作符的行为，但在实际开发中，直接使用 <span class=\\\"ne-text\\\">new</span> 操作符更为简洁和可靠。此外，现代 JavaScript 开发中更推荐使用 <span class=\\\"ne-text\\\">class</span> 关键字来定义类和构造函数。\"]},\"402\":{\"h\":\"平时是怎么调试]S的\",\"t\":[\"浏览器开发者工具\",\"<span class=\\\"ne-text\\\">console</span>** API**\",\"断点\",\"拓展\",\"调试 JavaScript 代码是开发过程中的一个重要环节，可以帮助你理解代码的执行流程、查找和修复错误。以下是一些常用的 JavaScript 调试技巧和工具：\",\"浏览器开发者工具:\",\"Chrome DevTools: Chrome 浏览器内置的开发者工具非常强大，提供了元素检查、控制台、网络监控、性能分析、内存分析、断点调试等功能。\",\"Firefox Developer Tools: Firefox 浏览器的开发者工具同样提供了类似的功能，包括但不限于元素检查器、控制台、调试器、网络监控等。\",\"**使用 <span class=\\\"ne-text\\\">console</span> ** API:\",\"<span class=\\\"ne-text\\\">console.log()</span>: 输出信息到控制台，是最常用的调试方法。\",\"<span class=\\\"ne-text\\\">console.error()</span>: 输出错误信息，通常会显示在控制台的错误区域。\",\"<span class=\\\"ne-text\\\">console.warn()</span>: 输出警告信息，用于提示潜在的问题。\",\"<span class=\\\"ne-text\\\">console.info()</span>: 输出一般信息。\",\"<span class=\\\"ne-text\\\">console.debug()</span>: 输出调试信息，通常只在调试模式下显示。\",\"<span class=\\\"ne-text\\\">console.table()</span>: 以表格形式展示对象的属性。\",\"<span class=\\\"ne-text\\\">console.group()</span> 和 <span class=\\\"ne-text\\\">console.groupEnd()</span>: 用于将相关的输出分组。\",\"断点和步进执行:\",\"在代码中你想要检查的地方设置断点。\",\"使用步进（Step into）、步过（Step over）、步出（Step out）来逐行或逐函数执行代码。\",\"**使用 <span class=\\\"ne-text\\\">debugger</span> ** 语句:\",\"**在代码中添加 **<span class=\\\"ne-text\\\">debugger</span> 语句，当执行到这一行时，如果开发者工具是打开状态，代码执行将暂停。\",\"源代码映射（Source Maps）:\",\"当你使用构建工具（如 Webpack、Gulp 等）压缩或转译代码时，源代码映射可以帮助你将压缩后的代码映射回原始源代码，方便调试。\",\"性能分析器:\",\"使用浏览器的 Performance tab 来记录和分析页面加载和运行时的性能瓶颈。\",\"内存分析:\",\"使用 Heap Snapshot 和 Allocation Timeline 来分析内存使用情况，查找内存泄漏。\",\"网络监控:\",\"监控和分析页面的网络请求，包括请求的资源、加载时间、请求方法、状态码等。\",\"使用调试器 API:\",\"**浏览器提供了一些调试相关的 API，如 **<span class=\\\"ne-text\\\">console.clear()</span> 来清除控制台输出，<span class=\\\"ne-text\\\">console.count()</span> 来计数同一行代码被执行的次数等。\",\"单元测试:\",\"使用单元测试框架（如 Jest、Mocha、Jasmine）来编写测试用例，自动测试代码逻辑。\",\"代码审查:\",\"通过代码审查来发现潜在的问题，这可以是自我审查或者团队成员之间的相互审查。\",\"使用第三方调试工具:\",\"除了浏览器开发者工具，还有许多第三方调试工具，如 Visual Studio Code 的调试功能、Chrome 插件等。\",\"调试是一个迭代的过程，通常需要结合多种方法来定位和解决问题。随着经验的积累，你会更熟练地使用这些工具和技巧。\"]},\"403\":{\"h\":\"解释一下webworker\",\"t\":[\"https://blog.csdn.net/weixin_37680520/article/details/117623499\",\"https://blog.csdn.net/chenyajundd/article/details/137033829\",\"JavaScript是单线程模型，即所有任务只能在同一个线程上面完成\",\"Web Worker 的作用，就是为 JavaScript ** 创造多线程环境** ，允许主线程创建 Worker 线程，将一些任务分配给后者运行。\"]},\"404\":{\"h\":\"Web Worker 有以下几个使用注意点。\",\"t\":[\"**（1）**同源限制\",\"分配给 Worker 线程运行的脚本文件，必须与主线程的脚本文件同源。\",\"**（2）**DOM 限制\",\"Worker 线程所在的全局对象，与主线程不一样，无法读取主线程所在网页的 DOM 对象，也无法使用document、window、parent这些对象。但是，Worker 线程可以navigator对象和location对象。\",\"**（3）**通信联系\",\"Worker 线程和主线程不在同一个上下文环境，它们不能直接通信，必须****通过消息完成。\",\"**（4）**脚本限制\",\"Worker 线程不能执行alert()方法和confirm()方法，但可以使用 XMLHttpRequest 对象发出 AJAX 请求。\",\"**（5）**文件限制\",\"Worker 线程无法读取本地文件，即不能打开本机的文件系统（file://），它所加载的脚本，必须来自网络。\"]},\"405\":{\"h\":\"如何使用web worker\",\"t\":[\"**发送消息 : **postMessage\",\"**接收消息 : **onmessage\",\"拓展\",\"Web Workers 是一种在 Web 应用程序中进行多线程编程的机制。它允许你在后台线程中运行 JavaScript 代码，而不会干扰主线程的执行。这意味着你可以在不阻塞用户界面的情况下执行计算密集型任务。\",\"以下是 Web Workers 的一些关键点：\",\"线程隔离：Web Workers 运行在与主线程（UI 线程）隔离的环境中。这种隔离确保了 Worker 内的脚本错误不会导致主线程崩溃，同时也避免了 Worker 访问 DOM 的能力，因为它们在不同的执行环境中运行。\",\"通信 **：主线程和 Worker 之间通过消息传递进行通信。你可以使用 **<span class=\\\"ne-text\\\">postMessage()</span> 方法发送消息，并通过监听 <span class=\\\"ne-text\\\">message</span> 事件来接收消息。这种机制是双向的，允许两个线程之间交换数据。\",\"不访问 DOM：由于 Web Workers 运行在后台线程，它们没有权限直接访问 DOM。如果需要与 DOM 交互，你必须在主线程中执行这些操作，然后通过消息传递与 Worker 共享结果。\",\"生命周期 **：你可以使用 **<span class=\\\"ne-text\\\">Worker</span> 构造函数创建一个新的 Worker，然后通过调用它的 <span class=\\\"ne-text\\\">terminate()</span> 方法来终止它。当 Worker 执行完毕或者被终止时，它会自动清理资源。\",\"用途：Web Workers 适用于执行那些需要大量计算的任务，比如数据分析、视频处理、音频处理、复杂的图形渲染等，而不会导致用户界面变得不响应。\",\"限制 **：每个 Worker 都有自己的全局上下文，这意味着它们有自己的变量和全局对象。但是，Worker 不能共享全局变量或者全局对象（如 **<span class=\\\"ne-text\\\">window</span> 或 <span class=\\\"ne-text\\\">document</span>）。\",\"同源策略：Web Workers 受到同源策略的限制，即它们只能加载与主页面相同来源的脚本。\",\"性能考虑：虽然 Web Workers 可以提高性能，但它们也有自己的开销。创建和通信都涉及到一定的性能成本，因此应该明智地使用，避免过度使用。\",\"下面是一个简单的 Web Workers 示例：\",\"// main.js // 创建一个新的 Worker const myWorker = new Worker('worker.js'); // 接收来自 Worker 的消息 myWorker.onmessage = function(e) { console.log('Message received from worker', e.data); }; // 发送消息给 Worker myWorker.postMessage('Hello, worker!');\",\"// worker.js // 接收来自主线程的消息 self.onmessage = function(e) { console.log('Message received from main script', e.data); // 做一些计算... // 发送消息回主线程 self.postMessage('Hi, main script!'); };\",\"**在这个例子中，主线程创建了一个 Worker，并发送了一条消息。Worker 接收消息，处理它，然后回复主线程。主线程监听 **<span class=\\\"ne-text\\\">message</span> 事件来接收 Worker 的响应。\",\"1.主线程采用new命令，调用Worker()构造函数，新建一个 Worker 线程。 var worker = new Worker('./work.js'); 2.主线程调用worker.postMessage()方法，向 Worker 发消息。 worker.postMessage('Hello World'); 它可以是各种数据类型，包括二进制数据。 3.主线程通过worker.onmessage指定监听函数，接收子线程发回来的消息。 worker.onmessage = function (event) { console.log('Received message ' + event.data); doSomething(); } function doSomething() { // 执行任务 worker.postMessage('Work done!'); } // 这里的worker.onmessage 也可以换成self.addEventListener ,self代表子线程自身，即子线程的全局对象 等同于 self.addEventListener('message', function (e) { self.postMessage('You said: ' + e.data); }, false); 4.Worker 完成任务以后，主线程就可以把它关掉。 worker.terminate(); 5.Worker 内部如果要加载其他脚本，有一个专门的方法importScripts()。 importScripts('script1.js', 'script2.js'); 6.主线程可以监听 Worker 是否发生错误。如果发生错误，Worker 会触发主线程的error事件。 worker.onerror(function (event) { console.log([ 'ERROR: Line ', e.lineno, ' in ', e.filename, ': ', e.message ].join('')); }); // 或者 worker.addEventListener('error', function (event) { // ... });\"]},\"406\":{\"h\":\"Navigator -Javascript navigator对象详解\",\"t\":[\"https://blog.csdn.net/cuclife/article/details/139061021\",\"https://blog.csdn.net/cuclife/article/details/139061021\",\"<span class=\\\"ne-text\\\">navigator</span>对象是JavaScript中的一个内置对象，它提供了有关浏览器的信息。\",\"帮助开发者检测用户的浏览器环境，从而实现浏览器兼容性处理或者功能检测。\"]},\"407\":{\"h\":\"一、属性和方法概览\",\"t\":[\"<span class=\\\"ne-text\\\">navigator.appCodeName</span>: 返回浏览器的 代码名，通常为\\\"Mozilla\\\"。\",\"<span class=\\\"ne-text\\\">navigator.appName</span>: 返回浏览器的 名称，如\\\"Microsoft Internet Explorer\\\"。\",\"<span class=\\\"ne-text\\\">navigator.appVersion</span>: 返回浏览器的 平台和版本信息。\",\"<span class=\\\"ne-text\\\">navigator.userAgent</span>: 返回 用户代理字符串，包含****浏览器类型、版本号及操作系统等信息。\",\"<span class=\\\"ne-text\\\">navigator.platform</span>: 返回运行浏览器的 操作系统平台。\",\"<span class=\\\"ne-text\\\">navigator.language</span>: 返回用户的 首选语言。\",\"<span class=\\\"ne-text\\\">navigator.cookieEnabled</span>: 告诉你浏览器 是否支持并启用了cookie。\",\"<span class=\\\"ne-text\\\">navigator.onLine</span>: 表示用户当前 是否在线。\",\"<span class=\\\"ne-text\\\">navigator.geolocation</span>: 提供了 地理定位的功能（如果浏览器支持的话）。\",\"<span class=\\\"ne-text\\\">navigator.vendor</span>: 返回浏览器 供应商名称。\",\"…还有更多，比如与硬件相关的属性（比如<span class=\\\"ne-text\\\">navigator.hardwareConcurrency</span>查询CPU核心数，但使用需谨慎考虑隐私问题）。\"]},\"408\":{\"h\":\"三、注意事项\",\"t\":[\"隐私与安全：使用<span class=\\\"ne-text\\\">navigator</span>中的某些属性（如 <span class=\\\"ne-text\\\">geolocation</span>）时，应确保遵循用户的隐私偏好和相关法律法规，提供明确的用户许可请求。\",\"一致性问题：不同浏览器对<span class=\\\"ne-text\\\">navigator</span>对象的支持程度和返回值可能有差异，编写代码时应考虑这些差异，尽量采用广泛兼容的特性。\",\"User-Agent嗅探：虽然可以通过<span class=\\\"ne-text\\\">navigator.userAgent</span>进行浏览器或设备的简单识别，但这种方法不鼓励用于功能检测，因为User-Agent可以被轻易篡改，且现代Web开发更推荐使用特性检测（Feature Detection）而非浏览器嗅探。\",\"性能考量：频繁访问某些<span class=\\\"ne-text\\\">navigator</span>属性可能影响性能，特别是像 <span class=\\\"ne-text\\\">navigator.hardwareConcurrency</span>这样可能涉及复杂计算的属性。\"]},\"409\":{\"h\":\"三种事件模型是什么？\",\"t\":[\"拓展\",\"在 JavaScript 中，事件模型指的是事件的触发、处理和分发的方式。主要有三种事件模型：\",\"DOM 0 级事件模型：\",\"这是最古老的事件模型，直接绑定事件处理器到元素上。\",\"没有事件监听器的概念，而是直接将函数赋值给 HTML 元素的事件属性。\",\"这种方式的缺点是同一个元素的同一个事件只能绑定一个处理函数，而且不支持捕获和冒泡阶段。\",\"示例：\",\"document.getElementById('myButton').onclick = function() { alert('Button clicked!'); };\",\"DOM 2 级事件模型：\",\"也称为 DOM Level 2 Events，引入了事件监听器的概念。\",\"**支持 **<span class=\\\"ne-text\\\">addEventListener</span> 方法，可以为元素添加多个事件处理器，并且可以指定事件处理的三个阶段：无捕获（bubble）、捕获（capture）和冒泡（bubbling）。\",\"**可以使用 **<span class=\\\"ne-text\\\">removeEventListener</span> 方法移除事件处理器。\",\"示例：\",\"var button = document.getElementById('myButton'); button.addEventListener('click', function() { alert('Button clicked!'); }, false); // false 表示在冒泡阶段执行\",\"IE 事件模型：\",\"这是 Internet Explorer 浏览器特有的事件模型，与其他浏览器的 DOM 事件模型有所不同。\",\"**IE 事件模型使用 **<span class=\\\"ne-text\\\">attachEvent</span> 方法来绑定事件处理器，使用 <span class=\\\"ne-text\\\">detachEvent</span> 方法来移除事件处理器。\",\"IE 事件模型中的事件对象 (<span class=\\\"ne-text\\\">event</span>) 不是通过参数传递给事件处理器的，而是作为全局 <span class=\\\"ne-text\\\">window.event</span> 对象。\",\"示例：\",\"var button = document.getElementById('myButton'); button.attachEvent('onclick', function() { alert('Button clicked!'); });\",\"在现代 Web 开发中，推荐使用 DOM 2 级事件模型，因为它提供了更多的灵活性和控制能力。同时，为了兼容不支持 DOM 2 级事件模型的旧版 IE 浏览器，开发者可能需要使用 polyfills 或其他兼容性解决方案。\",\"需要注意的是，随着 Web 标准的不断发展，旧版的 IE 浏览器已经逐渐被淘汰，现代浏览器都支持 DOM 2 级事件模型。因此，DOM 2 级事件模型现在是事实上的标准，并且在现代 Web 开发中被广泛使用。\"]},\"410\":{\"c\":[\"JavaScript\"]},\"411\":{\"h\":\"Vue\"},\"412\":{\"h\":\"虚拟dom\",\"t\":[\"虚拟DOM就是用Js来模拟出DOM结构，通过****diff算法来计算出最小的变更，通过对应的渲染器，来渲染到页面上。\",\"同时虚拟DOM也为跨平台开发提供了极大的便利，开发者写的同一套代码（有些需要针对不同平台做区分），通过不同的渲染规则，就可以生成不同平台的代码。\",\"在vue中会通过****渲染器来将虚拟DOM转换为对应平台的真实DOM。如renderer(vnode， container)，该方法会根据vnode描述的信息（如tag、props、children）来创建DOM元素，根据规则为对应的元素添加属性和事件，处理vnode下的children。\"]},\"413\":{\"h\":\"双端diff算法和快速diff算法\",\"t\":[\"在Vue.js框架中，虚拟DOM的diff算法是用于比较新旧虚拟DOM树差异的核心机制，目的是为了高效地更新真实DOM。Vue 2和Vue 3在diff算法上有所不同，Vue 2使用的是双端diff算法，而Vue 3则引入了快速diff算法。\"]},\"414\":{\"h\":\"Vue 2的双端diff算法\",\"t\":[\"双端diff算法（Two-way diff）是一种在两端同时进行对比的算法。它从新旧两个虚拟DOM列表的头部和尾部开始，向中间进行扫描，寻找相同key的节点，并对这些节点进行更新或移动。这种方法可以减少不必要的DOM操作，但仍然存在一些性能瓶颈，尤其是在处理大量节点或复杂列表时。\"]},\"415\":{\"h\":\"Vue 3的快速diff算法\",\"t\":[\"Vue 3引入了快速diff算法，这是一种更高效的算法，它借鉴了纯文本diff算法的思想。快速diff算法在处理新旧节点列表时，会先进行预处理，找出可以确定无需比较的相同前后缀节点，然后只对中间不确定的部分进行深入比较。这种方法可以进一步减少不必要的DOM操作，提高性能。\",\"快速diff算法的核心在于使用了一个名为source数组来记录新节点的位置索引，并通过构建最长递增子序列（Longest Increasing Subsequence, LIS）来确定哪些节点需要移动。这种方法相比双端diff算法，处理的边际条件更少，性能更优。\"]},\"416\":{\"h\":\"总结\",\"t\":[\"Vue 3的快速diff算法相比Vue 2的双端diff算法，在处理复杂列表更新时，能够提供更好的性能。它通过预处理和最长递增子序列的构建，减少了不必要的DOM操作，使得渲染更新更加高效。这种算法的改进是Vue 3性能提升的一个重要方面。\"]},\"417\":{\"h\":\"vue2和vue3有哪些不同\",\"t\":[\"Vue 2 和 Vue 3 都是流行的前端框架 Vue.js 的主要版本，它们在功能、性能和语法上有一些显著的差异。以下是 Vue 2 和 Vue 3 之间的一些主要区别：\",\"响应式系统的重写：\",\"**Vue 2 使用的是 **<span class=\\\"ne-text\\\">defineProperty</span>（Object.defineProperty）来实现响应式系统。\",\"Vue 3 引入了基于 Proxy 的响应式系统，这使得 Vue 3 能够更高效地追踪依赖和更新视图。\",\"Composition API：\",\"Vue 3 引入了 Composition API，这是一种新的编写组件逻辑的方式，它提供了更好的代码组织和复用性，特别是在处理复杂组件时。\",\"Fragment、Teleport 和 Suspense：\",\"**Vue 3 引入了新的内置组件，如 **<span class=\\\"ne-text\\\">Fragment</span>（允许多个根节点）、<span class=\\\"ne-text\\\">Teleport</span>（可以将组件的子节点传输到 DOM 的其他部分）和 <span class=\\\"ne-text\\\">Suspense</span>（用于异步组件的加载状态处理）。\",\"性能提升：\",\"Vue 3 在虚拟 DOM 的重写、组件初始化、编译器优化等方面都进行了性能提升。\",\"Tree-shaking 支持：\",\"Vue 3 的模块化系统更好地支持了 Tree-shaking，这意味着在最终的构建中可以移除未使用的代码，从而减少应用的大小。\",\"自定义渲染器 API：\",\"Vue 3 提供了更灵活的自定义渲染器 API，允许开发者创建自定义的渲染器。\",\"全局 API 的更改：\",\"**Vue 3 对全局 API 进行了更改，例如 **<span class=\\\"ne-text\\\">Vue.prototype</span> 被 <span class=\\\"ne-text\\\">app.config.globalProperties</span> 替代。\",\"模板和组件的改进：\",\"**Vue 3 改进了模板编译器，支持更广泛的 JavaScript 特性，并允许在 **<span class=\\\"ne-text\\\"><script></span> 标签中使用新的语法。\",\"TypeScript 支持：\",\"Vue 3 的代码库使用 TypeScript 重写，提供了更好的类型推断和类型检查。\",\"内部重构：\",\"Vue 3 进行了大规模的内部重构，包括虚拟 DOM 的重写和响应式系统的改进。\",\"新的生命周期钩子：\",\"**Vue 3 引入了一些新的生命周期钩子，如 **<span class=\\\"ne-text\\\">onBeforeMount</span>、<span class=\\\"ne-text\\\">onMounted</span>、<span class=\\\"ne-text\\\">onBeforeUpdate</span>、<span class=\\\"ne-text\\\">onUpdated</span>、<span class=\\\"ne-text\\\">onBeforeUnmount</span> 和 <span class=\\\"ne-text\\\">onUnmounted</span>。\",\"更好的组件通信：\",\"**Vue 3 提供了 **<span class=\\\"ne-text\\\">provide</span> 和 <span class=\\\"ne-text\\\">inject</span> 的改进版本，使得跨组件的状态共享更加方便。\",\"这些改进使得 Vue 3 在性能、可维护性和开发体验上都有了显著的提升。开发者在升级到 Vue 3 时，需要对这些变化有所了解，并可能需要对现有的代码进行一些调整。\"]},\"418\":{\"h\":\"vue3双向绑定实现\",\"t\":[\"劫持数据 Proxy\",\"依赖收集 get\",\"**派发更新 set **\",\"// WeakMap常用于存储只有当key所引用的对象存在时（没有被回收）才有价值的消息，十分贴合双向绑定场景 const bucket = new WeakMap(); // 存储副作用函数 let activeEffect; // 用一个全局变量处理被注册的函数 const tempObj = {}; // 临时对象，用于操作 const data = { text: \\\"hello world\\\" }; // 响应数据源 // 用于清除依赖 function cleanup(effectFn) { for (let i = 0; i < effectFn.deps.length; i++) { const deps = effectFn.deps[i]; deps.delete(effectFn); } effectFn.deps.length = 0; } // 处理依赖函数 function effect(fn) { const effectFn = () => { cleanup(effectFn); activeEffect = effectFn; fn(); }; effectFn.deps = []; effectFn(); } // 在get时拦截函数调用track函数追踪变化 function track(target, key) { if (!activeEffect) return; // let depsMap = bucket.get(target); if (!depsMap) { bucket.set(target, (depsMap = new Map())); } let deps = depsMap.get(key); if (!deps) { depsMap.set(key, (deps = new Set())); } deps.add(activeEffect); activeEffect.deps.push(deps); } // 在set拦截函数内调用trigger来触发变化 function trigger(target, key) { const depsMap = bucket.get(target); if (!depsMap) return; const effects = depsMap.get(key); const effectsToRun = new Set(effects); effectsToRun.forEach(effectFn => effectFn()); // effects && effects.forEach(fn => fn()); } const obj = new Proxy(data, { // 拦截读取操作 get(target, key) { if (!activeEffect) return; // console.log(\\\"get -> key\\\", key); track(target, key); return target[key]; }, // 拦截设置操作 set(target, key, newValue) { console.log(\\\"set -> key: newValue\\\", key, newValue); target[key] = newValue; trigger(target, key); }, }); effect(() => { tempObj.text = obj.text; console.log(\\\"tempObj.text :>> \\\", tempObj.text); }); setTimeout(() => { obj.text = \\\"hi vue3\\\"; }, 1000);\"]},\"419\":{\"h\":\"vue3中的ref、toRef、toRefs总结\"},\"420\":{\"h\":\"总结\",\"t\":[\"<span class=\\\"ne-text\\\">ref</span> 用于创建单一值的响应式引用。\",\"<span class=\\\"ne-text\\\">toRef</span> 用于创建对象某个属性的响应式引用。\",\"<span class=\\\"ne-text\\\">toRefs</span> 用于将响应式对象的每个属性转换为响应式引用。\",\"computed和watch的区别\",\"拓展\",\"在 Vue 3 中，响应式系统得到了重写，引入了基于 Proxy 的 API，这使得 Vue 3 的响应式特性更加强大和灵活。<span class=\\\"ne-text\\\">ref</span>、<span class=\\\"ne-text\\\">toRef</span> 和 <span class=\\\"ne-text\\\">toRefs</span> 是 Vue 3 中与响应式系统相关的几个重要函数，它们在 Composition API 中扮演着关键角色。\"]},\"421\":{\"h\":\"ref\",\"t\":[\"<span class=\\\"ne-text\\\">ref</span> 是一个用于创建响应式引用的函数。它接受一个值作为参数，并返回一个包含 <span class=\\\"ne-text\\\">.value</span> 属性的响应式对象。这个对象的 <span class=\\\"ne-text\\\">.value</span> 属性指向原始值，并且当原始值改变时，任何依赖于该响应式引用的组件都会重新渲染。\",\"import { ref } from 'vue'; const count = ref(0); // 创建一个响应式引用\",\"**在模板中使用时，可以直接访问 **<span class=\\\"ne-text\\\">.value</span> 属性：\",\"<template> <div>{{ count.value }}</div> </template>\",\"**或者在 Vue 3.2 及更高版本中，可以使用 **<span class=\\\"ne-text\\\">v-model</span> 指令的 <span class=\\\"ne-text\\\">modelValue</span> 和 <span class=\\\"ne-text\\\">\\\"update:modelValue\\\"</span> 事件进行更简洁的绑定：\",\"<template> <input v-model=\\\"count\\\" /> </template>\"]},\"422\":{\"h\":\"toRef\",\"t\":[\"<span class=\\\"ne-text\\\">toRef</span> 用于创建一个响应式引用，但它是针对对象的某个属性。当你有一个响应式对象，并想要创建一个仅针对其某个属性的响应式引用时，可以使用 <span class=\\\"ne-text\\\">toRef</span>。\",\"import { toRef } from 'vue'; const state = reactive({ count: 0 }); const countRef = toRef(state, 'count'); // 创建一个仅针对 state.count 的响应式引用\",\"这样，<span class=\\\"ne-text\\\">countRef</span> 将仅追踪 <span class=\\\"ne-text\\\">state</span> 对象中 <span class=\\\"ne-text\\\">count</span> 属性的变化。\"]},\"423\":{\"h\":\"toRefs\",\"t\":[\"<span class=\\\"ne-text\\\">toRefs</span> 用于将一个响应式对象转换为一个包含多个响应式引用的对象。这在处理由 <span class=\\\"ne-text\\\">reactive</span> 创建的响应式对象时非常有用，因为它允许你保留每个属性的响应性。\",\"import { toRefs } from 'vue'; const state = reactive({ count: 0, name: 'Vue' }); const { count, name } = toRefs(state);\",\"现在，<span class=\\\"ne-text\\\">count</span> 和 <span class=\\\"ne-text\\\">name</span> 都是响应式引用，它们的更新将触发依赖它们的组件重新渲染。\"]},\"424\":{\"h\":\"总结\",\"t\":[\"<span class=\\\"ne-text\\\">ref</span> 用于创建单一值的响应式引用。\",\"<span class=\\\"ne-text\\\">toRef</span> 用于创建对象某个属性的响应式引用。\",\"<span class=\\\"ne-text\\\">toRefs</span> 用于将响应式对象的每个属性转换为响应式引用。。这些函数是 Vue 3 Composition API 的基础，它们提供了一种灵活的方式来处理响应式数据。\"]},\"425\":{\"h\":\"computed和watch的区别\",\"t\":[\"使用场景：computed适用于一个数据 受多个数据影响 使用；\",\"watch适合一个数据 影响 多个数据使用。\",\"区别：computed属性默认会走缓存，只有依赖数据发生变化，才会重新计算，不支持异步，有异步导致数据发生变化时，无法做出相应改变；\",\"watch不依赖缓存，一旦数据发生变化就直接触发响应操作，支持异步。\"]},\"426\":{\"h\":\"vue-router的路由守卫\",\"t\":[\"全局前置守卫\",\" router.beforeEach((to, from, next) => { // to: 即将进入的目标 // from:当前导航正要离开的路由 return false // 返回false用于取消导航 return {name: 'Login'} // 返回到对应name的页面 next({name: 'Login'}) // 进入到对应的页面 next() // 放行 })\",\"全局解析守卫:类似beforeEach\",\"router.beforeResolve(to => { if(to.meta.canCopy) { return false // 也可取消导航 } })\",\"全局后置钩子\",\"router.afterEach((to, from) => { logInfo(to.fullPath) })\",\"导航错误钩子，导航发生错误调用\",\"router.onError(error => { logError(error) })\",\"路由独享守卫,beforeEnter可以传入单个函数，也可传入多个函数。\",\"function dealParams(to) { // ... } function dealPermission(to) { // ... } const routes = [ { path: '/home', component: Home, beforeEnter: (to, from) => { return false // 取消导航 }, // beforeEnter: [dealParams, dealPermission] } ]\",\"组件内的守卫\",\"const Home = { template: `...`, beforeRouteEnter(to, from) { // 此时组件实例还未被创建，不能获取this }, beforeRouteUpdate(to, from) { // 当前路由改变，但是组件被复用的时候调用，此时组件已挂载好 }, beforeRouteLeave(to, from) { // 导航离开渲染组件的对应路由时调用 } }\"]},\"427\":{\"h\":\"composition Api对比 option Api的优势\",\"t\":[\"更好的****代码组织\",\"--组合式API\",\"更好的****逻辑复用\",\"**--Hooks钩子函数 及 替代mixin的 **自定义的use 前缀的 Hooks\",\"更好的****类型推导\",\"--TS\"]},\"428\":{\"c\":[\"vue\"]},\"429\":{\"h\":\"React\"},\"430\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"431\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"432\":{\"c\":[\"React\"]},\"433\":{\"h\":\"node.js\"},\"434\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"435\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"436\":{\"c\":[\"node.js\"]},\"437\":{\"h\":\"Express\",\"t\":[\"一个被数字 10 星标了的香蕉文章。\"]},\"438\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"439\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"440\":{\"c\":[\"Express\"]},\"441\":{\"h\":\"Linux\"},\"442\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"443\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"444\":{\"c\":[\"Linux\"]},\"445\":{\"h\":\"C\"},\"446\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"447\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"448\":{\"c\":[\"C\"]},\"449\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"450\":{\"h\":\"技术笔记\"},\"451\":{\"h\":\"技术笔记\"},\"452\":{\"h\":\"前端\"},\"453\":{\"h\":\"后端\"},\"454\":{\"h\":\"前端\"},\"455\":{\"h\":\"后端\"}},\"dirtCount\":0,\"index\":[[\"后端\",{\"0\":{\"453\":1,\"455\":1}}],[\"后比较\",{\"1\":{\"106\":3,\"304\":3}}],[\"技术笔记\",{\"0\":{\"450\":1,\"451\":1}}],[\"星标了的香蕉文章\",{\"1\":{\"239\":1,\"437\":1}}],[\"前缀的\",{\"1\":{\"229\":1,\"427\":1}}],[\"前端\",{\"0\":{\"452\":1,\"454\":1},\"2\":{\"74\":1,\"272\":1}}],[\"及\",{\"1\":{\"229\":1,\"427\":1}}],[\"及更高版本中\",{\"1\":{\"223\":1,\"421\":1}}],[\"逻辑复用\",{\"1\":{\"229\":1,\"427\":1}}],[\"组合式api\",{\"1\":{\"229\":1,\"427\":1}}],[\"组件内的守卫\",{\"1\":{\"228\":1,\"426\":1}}],[\"组件初始化\",{\"1\":{\"219\":1,\"417\":1}}],[\"此时组件已挂载好\",{\"1\":{\"228\":1,\"426\":1}}],[\"此时组件实例还未被创建\",{\"1\":{\"228\":1,\"426\":1}}],[\"此外\",{\"1\":{\"203\":1,\"401\":1}}],[\"路由独享守卫\",{\"1\":{\"228\":1,\"426\":1}}],[\"导航离开渲染组件的对应路由时调用\",{\"1\":{\"228\":1,\"426\":1}}],[\"导航发生错误调用\",{\"1\":{\"228\":1,\"426\":1}}],[\"导航错误钩子\",{\"1\":{\"228\":1,\"426\":1}}],[\"放行\",{\"1\":{\"228\":1,\"426\":1}}],[\"进入到对应的页面\",{\"1\":{\"228\":1,\"426\":1}}],[\"进行了大规模的内部重构\",{\"1\":{\"219\":1,\"417\":1}}],[\"进行了更改\",{\"1\":{\"219\":1,\"417\":1}}],[\"进行类型转换\",{\"1\":{\"106\":1,\"304\":1}}],[\"多个数据使用\",{\"1\":{\"227\":1,\"425\":1}}],[\"影响\",{\"1\":{\"227\":1,\"425\":1}}],[\"影响整个文档\",{\"1\":{\"186\":1,\"384\":1}}],[\"受多个数据影响\",{\"1\":{\"227\":1,\"425\":1}}],[\"受到同源策略的限制\",{\"1\":{\"207\":1,\"405\":1}}],[\"现在\",{\"1\":{\"225\":1,\"423\":1}}],[\"现代浏览器都支持\",{\"1\":{\"211\":1,\"409\":1}}],[\"现代浏览器支持这个属性\",{\"1\":{\"195\":1,\"393\":1}}],[\"现代\",{\"1\":{\"203\":1,\"401\":1}}],[\"现代web开发中\",{\"1\":{\"159\":1,\"357\":1}}],[\"拦截设置操作\",{\"1\":{\"220\":1,\"418\":1}}],[\"拦截读取操作\",{\"1\":{\"220\":1,\"418\":1}}],[\"响应式系统得到了重写\",{\"1\":{\"222\":1,\"420\":1}}],[\"响应式系统的重写\",{\"1\":{\"219\":1,\"417\":1}}],[\"响应数据源\",{\"1\":{\"220\":1,\"418\":1}}],[\"临时对象\",{\"1\":{\"220\":1,\"418\":1}}],[\"存储副作用函数\",{\"1\":{\"220\":1,\"418\":1}}],[\"存储位置\",{\"1\":{\"130\":1,\"131\":1,\"328\":1,\"329\":1}}],[\"十分贴合双向绑定场景\",{\"1\":{\"220\":1,\"418\":1}}],[\"派发更新\",{\"1\":{\"220\":1,\"418\":1}}],[\"依赖收集\",{\"1\":{\"220\":1,\"418\":1}}],[\"依赖于宿主环境的对象\",{\"1\":{\"103\":1,\"301\":1}}],[\"劫持数据\",{\"1\":{\"220\":1,\"418\":1}}],[\"特性\",{\"1\":{\"219\":1,\"417\":1}}],[\"特别是在处理复杂组件时\",{\"1\":{\"219\":1,\"417\":1}}],[\"特别是在长页面滚动或无限滚动的网页中\",{\"1\":{\"197\":1,\"395\":1}}],[\"特别是像\",{\"1\":{\"210\":1,\"408\":1}}],[\"特别是当有多个元素需要相同类型的事件处理时\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"模板和组件的改进\",{\"1\":{\"219\":1,\"417\":1}}],[\"替代mixin的\",{\"1\":{\"229\":1,\"427\":1}}],[\"替代\",{\"1\":{\"219\":1,\"417\":1}}],[\"替换节点\",{\"0\":{\"138\":1,\"336\":1}}],[\"替换字符串中的斜杠\",{\"1\":{\"114\":1,\"312\":1}}],[\"全局后置钩子\",{\"1\":{\"228\":1,\"426\":1}}],[\"全局解析守卫\",{\"1\":{\"228\":1,\"426\":1}}],[\"全局前置守卫\",{\"1\":{\"228\":1,\"426\":1}}],[\"全局\",{\"1\":{\"219\":1,\"417\":1}}],[\"自定义的use\",{\"1\":{\"229\":1,\"427\":1}}],[\"自定义渲染器\",{\"1\":{\"219\":1,\"417\":1}}],[\"自动测试代码逻辑\",{\"1\":{\"204\":1,\"402\":1}}],[\"能够更高效地追踪依赖和更新视图\",{\"1\":{\"219\":1,\"417\":1}}],[\"能够提供更好的性能\",{\"1\":{\"218\":1,\"416\":1}}],[\"快速diff算法的核心在于使用了一个名为source数组来记录新节点的位置索引\",{\"1\":{\"217\":1,\"415\":1}}],[\"快速diff算法在处理新旧节点列表时\",{\"1\":{\"217\":1,\"415\":1}}],[\"找出可以确定无需比较的相同前后缀节点\",{\"1\":{\"217\":1,\"415\":1}}],[\"尤其是在处理大量节点或复杂列表时\",{\"1\":{\"216\":1,\"414\":1}}],[\"寻找相同key的节点\",{\"1\":{\"216\":1,\"414\":1}}],[\"双端diff算法\",{\"1\":{\"216\":1,\"414\":1}}],[\"双端diff算法和快速diff算法\",{\"0\":{\"215\":1,\"413\":1}}],[\"目的是为了高效地更新真实dom\",{\"1\":{\"215\":1,\"413\":1}}],[\"目标\",{\"1\":{\"159\":1,\"163\":1,\"357\":1,\"361\":1}}],[\"目标阶段或冒泡阶段\",{\"1\":{\"160\":1,\"358\":1}}],[\"目标阶段\",{\"1\":{\"151\":1,\"158\":1,\"159\":1,\"349\":1,\"356\":1,\"357\":1}}],[\"目标元素\",{\"1\":{\"144\":1,\"161\":1,\"342\":1,\"359\":1}}],[\"该方法会根据vnode描述的信息\",{\"1\":{\"214\":1,\"412\":1}}],[\"该对象包含了事件的详细信息和一些方法\",{\"1\":{\"163\":1,\"361\":1}}],[\"渲染器来将虚拟dom转换为对应平台的真实dom\",{\"1\":{\"214\":1,\"412\":1}}],[\"虚拟dom的diff算法是用于比较新旧虚拟dom树差异的核心机制\",{\"1\":{\"215\":1,\"413\":1}}],[\"虚拟dom就是用js来模拟出dom结构\",{\"1\":{\"214\":1,\"412\":1}}],[\"虚拟dom\",{\"0\":{\"214\":1,\"412\":1}}],[\"旧版的\",{\"1\":{\"211\":1,\"409\":1}}],[\"支持异步\",{\"1\":{\"227\":1,\"425\":1}}],[\"支持更广泛的\",{\"1\":{\"219\":1,\"417\":1}}],[\"支持\",{\"1\":{\"211\":1,\"219\":2,\"409\":1,\"417\":2}}],[\"支持范型\",{\"1\":{\"96\":1,\"294\":1}}],[\"引入了一些新的生命周期钩子\",{\"1\":{\"219\":1,\"417\":1}}],[\"引入了新的内置组件\",{\"1\":{\"219\":1,\"417\":1}}],[\"引入了\",{\"1\":{\"219\":1,\"417\":1}}],[\"引入了基于\",{\"1\":{\"219\":1,\"222\":1,\"417\":1,\"420\":1}}],[\"引入了事件监听器的概念\",{\"1\":{\"211\":1,\"409\":1}}],[\"引用上面的三句话即可\",{\"1\":{\"92\":1,\"290\":1}}],[\"引用比较\",{\"1\":{\"78\":1,\"276\":1}}],[\"级事件模型现在是事实上的标准\",{\"1\":{\"211\":1,\"409\":1}}],[\"级事件模型的旧版\",{\"1\":{\"211\":1,\"409\":1}}],[\"级事件模型\",{\"1\":{\"211\":4,\"409\":4}}],[\"频繁访问某些<span\",{\"1\":{\"210\":1,\"408\":1}}],[\"频繁使用\",{\"1\":{\"186\":1,\"384\":1}}],[\"尽量采用广泛兼容的特性\",{\"1\":{\"210\":1,\"408\":1}}],[\"尽管它们的目的相似\",{\"1\":{\"172\":1,\"370\":1}}],[\"尽管<span\",{\"1\":{\"123\":1,\"124\":1,\"321\":1,\"322\":1}}],[\"尽管在逻辑上它表示空\",{\"1\":{\"110\":1,\"308\":1}}],[\"编译器优化等方面都进行了性能提升\",{\"1\":{\"219\":1,\"417\":1}}],[\"编写代码时应考虑这些差异\",{\"1\":{\"210\":1,\"408\":1}}],[\"编码\",{\"1\":{\"130\":1,\"328\":1}}],[\"供应商名称\",{\"1\":{\"209\":1,\"407\":1}}],[\"地理定位的功能\",{\"1\":{\"209\":1,\"407\":1}}],[\"地址\",{\"1\":{\"4\":1,\"8\":1,\"9\":1,\"46\":1,\"50\":1,\"51\":1}}],[\"告诉你浏览器\",{\"1\":{\"209\":1,\"407\":1}}],[\"首选语言\",{\"1\":{\"209\":1,\"407\":1}}],[\"首先会触发按钮上的点击事件\",{\"1\":{\"145\":1,\"343\":1}}],[\"首先创建一个空对象\",{\"1\":{\"88\":1,\"286\":1}}],[\"版本号及操作系统等信息\",{\"1\":{\"209\":1,\"407\":1}}],[\"平台和版本信息\",{\"1\":{\"209\":1,\"407\":1}}],[\"平时是怎么调试\",{\"0\":{\"204\":1,\"402\":1}}],[\"名称\",{\"1\":{\"209\":1,\"407\":1}}],[\"帮助开发者检测用户的浏览器环境\",{\"1\":{\"208\":1,\"406\":1}}],[\"完成任务以后\",{\"1\":{\"207\":1,\"405\":1}}],[\"完全从文档流中移除元素\",{\"1\":{\"73\":1,\"271\":1}}],[\"向中间进行扫描\",{\"1\":{\"216\":1,\"414\":1}}],[\"向\",{\"1\":{\"207\":1,\"405\":1}}],[\"向下传播到目标元素\",{\"1\":{\"159\":1,\"357\":1}}],[\"向下传播到目标元素的任何父元素或祖先元素\",{\"1\":{\"151\":1,\"349\":1}}],[\"做一些计算\",{\"1\":{\"207\":1,\"405\":1}}],[\"避免过度使用\",{\"1\":{\"207\":1,\"405\":1}}],[\"避免内存泄漏\",{\"1\":{\"182\":1,\"380\":1}}],[\"复杂的图形渲染等\",{\"1\":{\"207\":1,\"405\":1}}],[\"复制节点\",{\"0\":{\"139\":1,\"337\":1}}],[\"复制\",{\"0\":{\"134\":1,\"332\":1},\"1\":{\"134\":1,\"332\":1}}],[\"音频处理\",{\"1\":{\"207\":1,\"405\":1}}],[\"视频处理\",{\"1\":{\"207\":1,\"405\":1}}],[\"视为相等\",{\"1\":{\"108\":1,\"306\":1}}],[\"生命周期\",{\"1\":{\"207\":1,\"405\":1}}],[\"生成器函数就是遍历器生成函数\",{\"1\":{\"97\":1,\"295\":1}}],[\"共享结果\",{\"1\":{\"207\":1,\"405\":1}}],[\"允许开发者创建自定义的渲染器\",{\"1\":{\"219\":1,\"417\":1}}],[\"允许多个根节点\",{\"1\":{\"219\":1,\"417\":1}}],[\"允许两个线程之间交换数据\",{\"1\":{\"207\":1,\"405\":1}}],[\"允许主线程创建\",{\"1\":{\"205\":1,\"403\":1}}],[\"隔离的环境中\",{\"1\":{\"207\":1,\"405\":1}}],[\"应确保遵循用户的隐私偏好和相关法律法规\",{\"1\":{\"210\":1,\"408\":1}}],[\"应用程序中进行多线程编程的机制\",{\"1\":{\"207\":1,\"405\":1}}],[\"应该是\",{\"1\":{\"203\":1,\"401\":1}}],[\"接收子线程发回来的消息\",{\"1\":{\"207\":1,\"405\":1}}],[\"接收来自主线程的消息\",{\"1\":{\"207\":1,\"405\":1}}],[\"接收来自\",{\"1\":{\"207\":1,\"405\":1}}],[\"接收消息\",{\"1\":{\"207\":2,\"405\":2}}],[\"接口和生成器\",{\"1\":{\"75\":1,\"97\":1,\"273\":1,\"295\":1}}],[\"发消息\",{\"1\":{\"207\":1,\"405\":1}}],[\"发送消息回主线程\",{\"1\":{\"207\":1,\"405\":1}}],[\"发送消息给\",{\"1\":{\"207\":1,\"405\":1}}],[\"发送消息\",{\"1\":{\"207\":1,\"405\":1}}],[\"发生外边距合并\",{\"1\":{\"67\":1,\"71\":1,\"265\":1,\"269\":1}}],[\"脚本限制\",{\"1\":{\"206\":1,\"404\":1}}],[\"限制\",{\"1\":{\"206\":1,\"207\":1,\"404\":1,\"405\":1}}],[\"线程隔离\",{\"1\":{\"207\":1,\"405\":1}}],[\"线程无法读取本地文件\",{\"1\":{\"206\":1,\"404\":1}}],[\"线程不能执行alert\",{\"1\":{\"206\":1,\"404\":1}}],[\"线程和主线程不在同一个上下文环境\",{\"1\":{\"206\":1,\"404\":1}}],[\"线程可以navigator对象和location对象\",{\"1\":{\"206\":1,\"404\":1}}],[\"线程所在的全局对象\",{\"1\":{\"206\":1,\"404\":1}}],[\"线程运行的脚本文件\",{\"1\":{\"206\":1,\"404\":1}}],[\"线程\",{\"1\":{\"205\":1,\"207\":2,\"403\":1,\"405\":2}}],[\"创造多线程环境\",{\"1\":{\"205\":1,\"403\":1}}],[\"创建的响应式对象时非常有用\",{\"1\":{\"225\":1,\"423\":1}}],[\"创建和通信都涉及到一定的性能成本\",{\"1\":{\"207\":1,\"405\":1}}],[\"创建和查找节点\",{\"0\":{\"134\":1,\"332\":1},\"1\":{\"134\":1,\"332\":1}}],[\"创建节点\",{\"0\":{\"140\":1,\"338\":1}}],[\"创建\",{\"1\":{\"96\":1,\"294\":1}}],[\"创建一个仅针对\",{\"1\":{\"224\":1,\"422\":1}}],[\"创建一个响应式引用\",{\"1\":{\"223\":1,\"421\":1}}],[\"创建一个新的\",{\"1\":{\"207\":1,\"405\":1}}],[\"创建一个新的date对象\",{\"1\":{\"114\":1,\"312\":1}}],[\"创建一个新对象\",{\"1\":{\"203\":3,\"401\":3}}],[\"创建一个新数组\",{\"1\":{\"87\":3,\"285\":3}}],[\"创建一个数组的副本\",{\"1\":{\"87\":1,\"285\":1}}],[\"解释一下webworker\",{\"0\":{\"205\":1,\"403\":1}}],[\"解除鼠标移动和松开事件\",{\"1\":{\"190\":1,\"388\":1}}],[\"随着\",{\"1\":{\"211\":1,\"409\":1}}],[\"随着经验的积累\",{\"1\":{\"204\":1,\"402\":1}}],[\"随机选择一个元素与当前位置的元素交换\",{\"1\":{\"128\":1,\"326\":1}}],[\"插件等\",{\"1\":{\"204\":1,\"402\":1}}],[\"单元测试\",{\"1\":{\"204\":1,\"402\":1}}],[\"单位为毫秒\",{\"1\":{\"173\":1,\"174\":1,\"179\":1,\"371\":1,\"372\":1,\"377\":1}}],[\"状态码等\",{\"1\":{\"204\":1,\"402\":1}}],[\"加载时间\",{\"1\":{\"204\":1,\"402\":1}}],[\"监控和分析页面的网络请求\",{\"1\":{\"204\":1,\"402\":1}}],[\"监听<span\",{\"1\":{\"188\":1,\"191\":1,\"386\":1,\"389\":1}}],[\"压缩或转译代码时\",{\"1\":{\"204\":1,\"402\":1}}],[\"源代码映射可以帮助你将压缩后的代码映射回原始源代码\",{\"1\":{\"204\":1,\"402\":1}}],[\"源代码映射\",{\"1\":{\"204\":1,\"402\":1}}],[\"语句\",{\"1\":{\"204\":2,\"402\":2}}],[\"语雀\",{\"0\":{\"9\":1,\"51\":1},\"2\":{\"10\":1,\"52\":1}}],[\"步出\",{\"1\":{\"204\":1,\"402\":1}}],[\"步过\",{\"1\":{\"204\":1,\"402\":1}}],[\"网络监控等\",{\"1\":{\"204\":1,\"402\":1}}],[\"网络监控\",{\"1\":{\"204\":2,\"402\":2}}],[\"控制台\",{\"1\":{\"204\":2,\"402\":2}}],[\"查找内存泄漏\",{\"1\":{\"204\":1,\"402\":1}}],[\"查找和修复错误\",{\"1\":{\"204\":1,\"402\":1}}],[\"查找节点\",{\"0\":{\"141\":1,\"339\":1}}],[\"调试是一个迭代的过程\",{\"1\":{\"204\":1,\"402\":1}}],[\"调试器\",{\"1\":{\"204\":1,\"402\":1}}],[\"调试技巧和工具\",{\"1\":{\"204\":1,\"402\":1}}],[\"调试\",{\"1\":{\"204\":1,\"402\":1}}],[\"调用worker\",{\"1\":{\"207\":1,\"405\":1}}],[\"调用构造函数\",{\"1\":{\"203\":1,\"401\":1}}],[\"调用之间也不会冲突\",{\"1\":{\"182\":1,\"380\":1}}],[\"调用\",{\"1\":{\"179\":1,\"377\":1}}],[\"调用实例方法\",{\"1\":{\"88\":1,\"286\":1}}],[\"断点和步进执行\",{\"1\":{\"204\":1,\"402\":1}}],[\"断点调试等功能\",{\"1\":{\"204\":1,\"402\":1}}],[\"断点\",{\"1\":{\"204\":1,\"402\":1}}],[\"修正后的代码如下\",{\"1\":{\"203\":1,\"401\":1}}],[\"修改property可能会影响元素的表现\",{\"1\":{\"131\":1,\"329\":1}}],[\"修改第一个实例\",{\"1\":{\"93\":1,\"291\":1}}],[\"修改元素\",{\"1\":{\"87\":1,\"285\":1}}],[\"否则\",{\"1\":{\"203\":1,\"401\":1}}],[\"新的生命周期钩子\",{\"1\":{\"219\":1,\"417\":1}}],[\"新建一个\",{\"1\":{\"207\":1,\"405\":1}}],[\"新对象原型指向构造函数原型对象\",{\"1\":{\"203\":2,\"401\":2}}],[\"新数组的元素是原数组元素经过回调函数处理后的结果\",{\"1\":{\"86\":1,\"284\":1}}],[\"意味着如果鼠标指针移动到一个元素的子元素上\",{\"1\":{\"199\":1,\"397\":1}}],[\"才会重新计算\",{\"1\":{\"227\":1,\"425\":1}}],[\"才会触发该事件\",{\"1\":{\"198\":1,\"396\":1}}],[\"才有价值的消息\",{\"1\":{\"220\":1,\"418\":1}}],[\"才使用\",{\"1\":{\"107\":1,\"305\":1}}],[\"都有自己的全局上下文\",{\"1\":{\"207\":1,\"405\":1}}],[\"都会触发父元素上的\",{\"1\":{\"202\":1,\"400\":1}}],[\"都会触发该事件\",{\"1\":{\"198\":1,\"396\":1}}],[\"都是响应式引用\",{\"1\":{\"225\":1,\"423\":1}}],[\"都是流行的前端框架\",{\"1\":{\"219\":1,\"417\":1}}],[\"都是鼠标事件\",{\"1\":{\"198\":1,\"396\":1}}],[\"都是用来操作html文档内容的方法\",{\"1\":{\"183\":1,\"381\":1}}],[\"预加载或两者结合使用\",{\"1\":{\"197\":1,\"395\":1}}],[\"预加载\",{\"1\":{\"197\":1,\"395\":1}}],[\"预加载意味着在用户浏览到图片之前\",{\"1\":{\"196\":1,\"394\":1}}],[\"预加载是一种在页面加载时就提前加载资源的技术\",{\"1\":{\"196\":1,\"394\":1}}],[\"预加载就是把饭先盛好等你吃\",{\"1\":{\"194\":1,\"392\":1}}],[\"节省带宽\",{\"1\":{\"195\":1,\"393\":1}}],[\"节点的属性\",{\"1\":{\"129\":1,\"327\":1}}],[\"减少了不必要的dom操作\",{\"1\":{\"218\":1,\"416\":1}}],[\"减少加载时间\",{\"1\":{\"196\":1,\"394\":1}}],[\"减少初始页面加载时间\",{\"1\":{\"195\":1,\"393\":1}}],[\"减少内存消耗\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"优点\",{\"1\":{\"195\":1,\"196\":1,\"393\":1,\"394\":1}}],[\"优先级要高于\",{\"1\":{\"72\":1,\"270\":1}}],[\"懒加载\",{\"1\":{\"197\":1,\"395\":1}}],[\"懒加载可以显著提高页面的响应速度和性能\",{\"1\":{\"195\":1,\"393\":1}}],[\"懒加载可以确保未浏览到的图片不会被加载\",{\"1\":{\"195\":1,\"393\":1}}],[\"懒加载意味着图片只有在接近滚动到视窗\",{\"1\":{\"195\":1,\"393\":1}}],[\"懒加载是一种延迟加载网页中非关键资源的技术\",{\"1\":{\"195\":1,\"393\":1}}],[\"懒加载和预加载实现\",{\"1\":{\"194\":1,\"392\":1}}],[\"懒加载就是吃多少盛多少\",{\"1\":{\"194\":1,\"392\":1}}],[\"页面加载时不需要加载所有图片\",{\"1\":{\"195\":1,\"393\":1}}],[\"页面加载就像吃饭\",{\"1\":{\"194\":1,\"392\":1}}],[\"页面布局发生错乱\",{\"1\":{\"64\":1,\"262\":1}}],[\"图片已经加载完成\",{\"1\":{\"196\":1,\"394\":1}}],[\"图片已经被加载到浏览器缓存中\",{\"1\":{\"196\":1,\"394\":1}}],[\"图片预加载\",{\"0\":{\"196\":1,\"394\":1}}],[\"图片懒加载\",{\"0\":{\"195\":1,\"393\":1}}],[\"图片的懒加载\",{\"1\":{\"194\":1,\"392\":1}}],[\"图片\",{\"0\":{\"194\":1,\"392\":1}}],[\"坐标计算\",{\"1\":{\"193\":1,\"391\":1}}],[\"鼠标事件\",{\"1\":{\"193\":1,\"391\":1}}],[\"拖动结束并放置时的事件处理\",{\"1\":{\"192\":1,\"390\":1}}],[\"拖动开始时的事件处理\",{\"1\":{\"192\":1,\"390\":1}}],[\"拖动事件\",{\"1\":{\"188\":1,\"191\":1,\"386\":1,\"389\":1}}],[\"拖放功能或任何需要精确位置信息的操作都非常有用\",{\"1\":{\"171\":1,\"369\":1}}],[\"计算鼠标移动的距离\",{\"1\":{\"193\":1,\"391\":1}}],[\"计算鼠标的新位置\",{\"1\":{\"188\":1,\"189\":1,\"386\":1,\"387\":1}}],[\"计算元素新的位置\",{\"1\":{\"190\":1,\"388\":1}}],[\"计算bfc的高度时\",{\"1\":{\"64\":1,\"262\":1}}],[\"记录当前鼠标位置和元素的初始位置\",{\"1\":{\"188\":1,\"189\":1,\"386\":1,\"387\":1}}],[\"确保处理的内容是安全的\",{\"1\":{\"187\":1,\"385\":1}}],[\"确保在不需要定时任务时调用\",{\"1\":{\"182\":1,\"380\":1}}],[\"性能提升\",{\"1\":{\"219\":1,\"417\":1}}],[\"性能和语法上有一些显著的差异\",{\"1\":{\"219\":1,\"417\":1}}],[\"性能更优\",{\"1\":{\"217\":1,\"415\":1}}],[\"性能考量\",{\"1\":{\"210\":1,\"408\":1}}],[\"性能考虑\",{\"1\":{\"207\":1,\"405\":1}}],[\"性能分析器\",{\"1\":{\"204\":1,\"402\":1}}],[\"性能分析\",{\"1\":{\"204\":1,\"402\":1}}],[\"性能\",{\"1\":{\"186\":1,\"384\":1}}],[\"灵活性\",{\"1\":{\"186\":1,\"384\":1}}],[\"需要对这些变化有所了解\",{\"1\":{\"219\":1,\"417\":1}}],[\"需要注意的是\",{\"1\":{\"211\":1,\"409\":1}}],[\"需要确保内容是安全的\",{\"1\":{\"186\":1,\"384\":1}}],[\"需要根据你的具体需求来决定\",{\"1\":{\"83\":1,\"281\":1}}],[\"攻击\",{\"1\":{\"186\":1,\"384\":1}}],[\"安全性\",{\"1\":{\"186\":1,\"384\":1}}],[\"再使用\",{\"1\":{\"184\":1,\"382\":1}}],[\"再去执行微任务队列\",{\"1\":{\"98\":1,\"296\":1}}],[\"作为\",{\"1\":{\"182\":1,\"380\":1}}],[\"参数\",{\"1\":{\"180\":1,\"378\":1}}],[\"参数自定义\",{\"1\":{\"114\":1,\"312\":1}}],[\"设置元素的新位置\",{\"1\":{\"190\":1,\"388\":1}}],[\"设置的定时任务\",{\"1\":{\"180\":1,\"378\":1}}],[\"设置为元素宽度的一半的负值来实现水平居中\",{\"1\":{\"62\":1,\"260\":1}}],[\"形成一个递归循环\",{\"1\":{\"179\":1,\"377\":1}}],[\"形式\",{\"1\":{\"76\":2,\"274\":2}}],[\"执行任务\",{\"1\":{\"207\":1,\"405\":1}}],[\"执行完毕或者被终止时\",{\"1\":{\"207\":1,\"405\":1}}],[\"执行后\",{\"1\":{\"179\":1,\"377\":1}}],[\"执行间隔时间\",{\"1\":{\"179\":1,\"377\":1}}],[\"执行次数\",{\"1\":{\"175\":1,\"373\":1}}],[\"持续调用定时器\",{\"1\":{\"178\":1,\"376\":1}}],[\"下一次又开始了\",{\"1\":{\"177\":1,\"375\":1}}],[\"下面是一个简单的\",{\"1\":{\"207\":1,\"405\":1}}],[\"下面是对代码的逐行解释\",{\"1\":{\"203\":1,\"401\":1}}],[\"下面是具体的实现代码\",{\"1\":{\"128\":1,\"326\":1}}],[\"下面我将提供一个简单的示例\",{\"1\":{\"88\":1,\"286\":1}}],[\"运行在后台线程\",{\"1\":{\"207\":1,\"405\":1}}],[\"运行在与主线程\",{\"1\":{\"207\":1,\"405\":1}}],[\"运行一段时间后停止\",{\"1\":{\"176\":1,\"374\":1}}],[\"运算符\",{\"1\":{\"107\":2,\"305\":2}}],[\"运算符称为相等运算符\",{\"1\":{\"106\":1,\"304\":1}}],[\"运算符称为严格相等运算符\",{\"1\":{\"105\":1,\"303\":1}}],[\"传递给函数的参数\",{\"1\":{\"173\":1,\"174\":1,\"371\":1,\"372\":1}}],[\"延迟与间隔\",{\"1\":{\"175\":1,\"373\":1}}],[\"延迟时间\",{\"1\":{\"173\":1,\"371\":1}}],[\"延时\",{\"1\":{\"98\":1,\"296\":1}}],[\"延时队列\",{\"1\":{\"98\":1,\"296\":1}}],[\"停止移动元素\",{\"1\":{\"188\":1,\"189\":1,\"386\":1,\"387\":1}}],[\"停止定时器\",{\"0\":{\"176\":1,\"374\":1}}],[\"停止执行\",{\"1\":{\"175\":1,\"373\":1}}],[\"停止settimeout\",{\"1\":{\"172\":1,\"176\":1,\"370\":1,\"374\":1}}],[\"停止事件的进一步传播\",{\"1\":{\"160\":1,\"163\":2,\"358\":1,\"361\":2}}],[\"停止事件进一步传播\",{\"1\":{\"160\":1,\"358\":1}}],[\"添加垂直滚动距离\",{\"1\":{\"171\":1,\"369\":1}}],[\"添加水平滚动距离\",{\"1\":{\"171\":1,\"369\":1}}],[\"添加节点\",{\"0\":{\"135\":1,\"333\":1}}],[\"边的距离\",{\"1\":{\"166\":1,\"364\":1}}],[\"除了浏览器开发者工具\",{\"1\":{\"204\":1,\"402\":1}}],[\"除了上述三个要素\",{\"1\":{\"163\":1,\"361\":1}}],[\"除非有边框或内边距\",{\"1\":{\"73\":1,\"271\":1}}],[\"处理依赖函数\",{\"1\":{\"220\":1,\"418\":1}}],[\"处理的边际条件更少\",{\"1\":{\"217\":1,\"415\":1}}],[\"处理vnode下的children\",{\"1\":{\"214\":1,\"412\":1}}],[\"处理和分发的方式\",{\"1\":{\"211\":1,\"409\":1}}],[\"处理它\",{\"1\":{\"207\":1,\"405\":1}}],[\"处理事件\",{\"1\":{\"159\":1,\"357\":1}}],[\"处理各种复杂的比较需求\",{\"1\":{\"78\":1,\"276\":1}}],[\"更好的\",{\"1\":{\"229\":3,\"427\":3}}],[\"更好的组件通信\",{\"1\":{\"219\":1,\"417\":1}}],[\"更灵活\",{\"1\":{\"182\":1,\"186\":1,\"380\":1,\"384\":1}}],[\"更多按钮\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"更新\",{\"1\":{\"131\":1,\"329\":1}}],[\"简化代码\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"动态元素管理\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"取决于你是否需要处理事件冒泡以及对子元素的交互是否敏感\",{\"1\":{\"202\":1,\"400\":1}}],[\"取决于你的具体需求和代码的上下文\",{\"1\":{\"113\":1,\"311\":1}}],[\"取消导航\",{\"1\":{\"228\":1,\"426\":1}}],[\"取消事件的默认行为\",{\"1\":{\"160\":1,\"163\":1,\"358\":1,\"361\":1}}],[\"取消冒泡\",{\"1\":{\"158\":1,\"356\":1}}],[\"举例\",{\"1\":{\"158\":1,\"356\":1}}],[\"程序员监听的元素\",{\"1\":{\"158\":1,\"356\":1}}],[\"冒泡阶段\",{\"1\":{\"158\":1,\"159\":1,\"356\":1,\"357\":1}}],[\"捕获\",{\"1\":{\"211\":1,\"409\":1}}],[\"捕获阶段\",{\"1\":{\"158\":1,\"159\":1,\"160\":1,\"356\":1,\"357\":1,\"358\":1}}],[\"捕获时间需要在监听时候添加第三个参数\",{\"1\":{\"149\":1,\"347\":1}}],[\"上例的事件传播顺序\",{\"1\":{\"158\":1,\"356\":1}}],[\"上被处理\",{\"1\":{\"144\":1,\"342\":1}}],[\"绑定移动和松开事件\",{\"1\":{\"190\":1,\"388\":1}}],[\"绑定事件的监听函数\",{\"1\":{\"157\":1,\"355\":1}}],[\"绑定其构造函数\",{\"1\":{\"88\":1,\"286\":1}}],[\"点击按钮将不会触发按钮本身的点击事件\",{\"1\":{\"154\":1,\"352\":1}}],[\"点击按钮会首先触发父容器的点击事件\",{\"1\":{\"153\":1,\"351\":1}}],[\"点击操作等\",{\"1\":{\"98\":1,\"296\":1}}],[\"沿着dom树向下传播到目标元素\",{\"1\":{\"149\":1,\"347\":1}}],[\"阻止默认行为以启用drop\",{\"1\":{\"192\":1,\"390\":1}}],[\"阻止事件进一步传播\",{\"1\":{\"154\":1,\"352\":1}}],[\"阻止事件冒泡\",{\"1\":{\"147\":1,\"345\":1}}],[\"阻止冒泡\",{\"1\":{\"142\":1,\"340\":1}}],[\"继续使用上面的html结构\",{\"1\":{\"147\":1,\"345\":1}}],[\"继承终极版\",{\"1\":{\"93\":1,\"291\":1}}],[\"继承\",{\"0\":{\"95\":1,\"293\":1},\"1\":{\"92\":2,\"290\":2}}],[\"虽然可以通过<span\",{\"1\":{\"210\":1,\"408\":1}}],[\"虽然\",{\"1\":{\"207\":1,\"405\":1}}],[\"虽然这个自定义的\",{\"1\":{\"203\":1,\"401\":1}}],[\"虽然事件冒泡提供了一种强大的事件处理机制\",{\"1\":{\"146\":1,\"344\":1}}],[\"虽然也存在提升\",{\"1\":{\"123\":1,\"321\":1}}],[\"触发事件时\",{\"1\":{\"161\":1,\"359\":1}}],[\"触发事件的元素\",{\"1\":{\"160\":1,\"358\":1}}],[\"触发事件\",{\"1\":{\"157\":1,\"355\":1}}],[\"触发父容器的点击事件\",{\"1\":{\"145\":1,\"343\":1}}],[\"触发bfc的条件\",{\"0\":{\"65\":1,\"263\":1}}],[\"容器捕获点击\",{\"1\":{\"149\":2,\"153\":2,\"154\":1,\"347\":2,\"351\":2,\"352\":1}}],[\"容器被点击\",{\"1\":{\"145\":2,\"147\":1,\"343\":2,\"345\":1}}],[\"容器里面的子元素不会影响到外面的元素\",{\"1\":{\"64\":1,\"262\":1}}],[\"按钮被点击了\",{\"1\":{\"164\":1,\"362\":1}}],[\"按钮被点击\",{\"1\":{\"145\":2,\"147\":1,\"149\":2,\"153\":2,\"154\":1,\"158\":1,\"161\":1,\"343\":2,\"345\":1,\"347\":2,\"351\":2,\"352\":1,\"356\":1,\"359\":1}}],[\"按照任务类型分\",{\"1\":{\"98\":1,\"296\":1}}],[\"假设你有以下的html结构\",{\"1\":{\"145\":1,\"343\":1}}],[\"任何依赖于该响应式引用的组件都会重新渲染\",{\"1\":{\"223\":1,\"421\":1}}],[\"任何父元素都有机会捕获并处理这个事件\",{\"1\":{\"144\":1,\"342\":1}}],[\"任意一个对象实现了遵守迭代器协议的\",{\"1\":{\"97\":1,\"295\":1}}],[\"工作原理\",{\"0\":{\"144\":1,\"150\":1,\"342\":1,\"348\":1}}],[\"逐级向上传播到根节点\",{\"1\":{\"143\":1,\"341\":1}}],[\"事件进行更简洁的绑定\",{\"1\":{\"223\":1,\"421\":1}}],[\"事件来接收\",{\"1\":{\"207\":1,\"405\":1}}],[\"事件来接收消息\",{\"1\":{\"207\":1,\"405\":1}}],[\"事件不会冒泡\",{\"1\":{\"200\":1,\"398\":1}}],[\"事件\",{\"1\":{\"199\":1,\"200\":2,\"202\":2,\"397\":1,\"398\":2,\"400\":2}}],[\"事件之后\",{\"1\":{\"184\":1,\"382\":1}}],[\"事件目标\",{\"1\":{\"162\":2,\"164\":2,\"360\":2,\"362\":2}}],[\"事件目标元素\",{\"1\":{\"159\":1,\"357\":1}}],[\"事件类型告诉你发生了什么类型的交互或动作\",{\"1\":{\"162\":1,\"360\":1}}],[\"事件类型\",{\"1\":{\"162\":2,\"164\":2,\"360\":2,\"362\":2}}],[\"事件三要素是什么\",{\"0\":{\"162\":1,\"360\":1}}],[\"事件会冒泡\",{\"1\":{\"199\":1,\"397\":1}}],[\"事件会冒泡到\",{\"1\":{\"161\":1,\"359\":1}}],[\"事件会逐级向上传播到父元素\",{\"1\":{\"144\":1,\"342\":1}}],[\"事件被创建时的时间戳\",{\"1\":{\"160\":1,\"358\":1}}],[\"事件的类型\",{\"1\":{\"160\":1,\"358\":1}}],[\"事件取消\",{\"1\":{\"159\":1,\"357\":1}}],[\"事件处理中\",{\"1\":{\"162\":1,\"360\":1}}],[\"事件处理器是你定义的逻辑\",{\"1\":{\"162\":1,\"360\":1}}],[\"事件处理器\",{\"1\":{\"162\":2,\"360\":2}}],[\"事件处理程序当前正在被执行的元素\",{\"1\":{\"160\":1,\"358\":1}}],[\"事件处理程序通过javascript的<span\",{\"1\":{\"159\":1,\"357\":1}}],[\"事件处理在冒泡阶段触发\",{\"1\":{\"159\":1,\"357\":1}}],[\"事件流\",{\"1\":{\"159\":1,\"357\":1}}],[\"事件在dom中传播的过程包括三个阶段\",{\"1\":{\"159\":1,\"357\":1}}],[\"事件传播\",{\"1\":{\"159\":1,\"201\":1,\"357\":1,\"399\":1}}],[\"事件传播的最上层对象是<span\",{\"1\":{\"158\":1,\"356\":1}}],[\"事件传播的三个阶段\",{\"0\":{\"151\":1,\"349\":1}}],[\"事件对象的方法包括<span\",{\"1\":{\"163\":1,\"361\":1}}],[\"事件对象包含以下常见的属性和方法\",{\"1\":{\"160\":1,\"358\":1}}],[\"事件对象作为参数自动传递给事件处理函数\",{\"1\":{\"160\":1,\"358\":1}}],[\"事件对象\",{\"0\":{\"160\":1,\"163\":1,\"358\":1,\"361\":1},\"1\":{\"159\":1,\"163\":1,\"357\":1,\"361\":1}}],[\"事件监听器不是直接绑定在目标元素上\",{\"1\":{\"161\":1,\"359\":1}}],[\"事件监听\",{\"1\":{\"159\":1,\"357\":1}}],[\"事件实际触发的元素\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"事件委托是一种技术\",{\"1\":{\"161\":1,\"359\":1}}],[\"事件委托的实现示例\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"事件委托的优点包括\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"事件委托\",{\"0\":{\"161\":1,\"359\":1},\"1\":{\"158\":1,\"159\":1,\"193\":1,\"356\":1,\"357\":1,\"391\":1}}],[\"事件模型中的事件对象\",{\"1\":{\"211\":1,\"409\":1}}],[\"事件模型使用\",{\"1\":{\"211\":1,\"409\":1}}],[\"事件模型有所不同\",{\"1\":{\"211\":1,\"409\":1}}],[\"事件模型指的是事件的触发\",{\"1\":{\"211\":1,\"409\":1}}],[\"事件模型\",{\"0\":{\"157\":1,\"158\":1,\"355\":1,\"356\":1},\"1\":{\"211\":1,\"409\":1}}],[\"事件到达目标元素\",{\"1\":{\"151\":1,\"159\":1,\"349\":1,\"357\":1}}],[\"事件从目标元素向上传播回根节点\",{\"1\":{\"159\":1,\"357\":1}}],[\"事件从目标元素向上传播回document对象\",{\"1\":{\"151\":1,\"349\":1}}],[\"事件从document对象开始\",{\"1\":{\"151\":1,\"349\":1}}],[\"事件从根节点\",{\"1\":{\"149\":1,\"159\":1,\"347\":1,\"357\":1}}],[\"事件沿着dom树向下传播\",{\"1\":{\"150\":1,\"348\":1}}],[\"事件开始于根节点\",{\"1\":{\"150\":1,\"348\":1}}],[\"事件捕获提供了一种在事件到达目标元素之前处理事件的机制\",{\"1\":{\"155\":1,\"353\":1}}],[\"事件捕获阶段\",{\"1\":{\"151\":1,\"349\":1}}],[\"事件捕获\",{\"1\":{\"149\":1,\"347\":1}}],[\"事件首先在触发它的元素\",{\"1\":{\"144\":1,\"342\":1}}],[\"事件冒泡阶段\",{\"1\":{\"151\":1,\"349\":1}}],[\"事件冒泡是dom事件处理中的一个重要概念\",{\"1\":{\"148\":1,\"346\":1}}],[\"事件冒泡是dom事件传播的一种机制\",{\"1\":{\"143\":1,\"341\":1}}],[\"事件冒泡\",{\"0\":{\"143\":1,\"341\":1}}],[\"事件向上传播到根节点\",{\"1\":{\"142\":1,\"340\":1}}],[\"什么是事件捕获\",{\"0\":{\"149\":1,\"347\":1}}],[\"什么是事件冒泡\",{\"0\":{\"142\":1,\"340\":1}}],[\"什么是作用域链\",{\"0\":{\"127\":1,\"325\":1}}],[\"queryselectorall\",{\"1\":{\"141\":1,\"339\":1}}],[\"queryselector\",{\"1\":{\"141\":1,\"339\":1}}],[\"qq\",{\"1\":{\"63\":1,\"88\":1,\"89\":1,\"194\":1,\"261\":1,\"286\":1,\"287\":1,\"392\":1}}],[\"结构是常见的任务\",{\"1\":{\"134\":1,\"332\":1}}],[\"结合\",{\"1\":{\"87\":1,\"285\":1}}],[\"操作系统平台\",{\"1\":{\"209\":1,\"407\":1}}],[\"操作dom\",{\"1\":{\"134\":1,\"332\":1}}],[\"操作符更为简洁和可靠\",{\"1\":{\"203\":1,\"401\":1}}],[\"操作符一样使用了\",{\"1\":{\"203\":1,\"401\":1}}],[\"操作符的行为\",{\"1\":{\"203\":2,\"401\":2}}],[\"操作符\",{\"1\":{\"78\":1,\"96\":1,\"276\":1,\"294\":1}}],[\"移动节点通常是通过先移除再添加的方式实现\",{\"1\":{\"137\":1,\"335\":1}}],[\"移动节点\",{\"0\":{\"137\":1,\"335\":1}}],[\"移动\",{\"0\":{\"134\":1,\"332\":1},\"1\":{\"134\":1,\"332\":1}}],[\"移动到前一个元素\",{\"1\":{\"128\":1,\"326\":1}}],[\"移除事件的监听函数\",{\"1\":{\"157\":1,\"355\":1}}],[\"移除节点\",{\"0\":{\"136\":1,\"334\":1}}],[\"移除\",{\"0\":{\"134\":1,\"332\":1},\"1\":{\"134\":1,\"332\":1}}],[\"了解attribute和property之间的区别对于正确操作dom元素非常重要\",{\"1\":{\"133\":1,\"331\":1}}],[\"了解这些对象的来源和特性有助于更好地理解和使用javascript的各种功能\",{\"1\":{\"103\":1,\"301\":1}}],[\"输入字段的值会实时更新\",{\"1\":{\"133\":1,\"331\":1}}],[\"输出调试信息\",{\"1\":{\"204\":1,\"402\":1}}],[\"输出一般信息\",{\"1\":{\"204\":1,\"402\":1}}],[\"输出警告信息\",{\"1\":{\"204\":1,\"402\":1}}],[\"输出错误信息\",{\"1\":{\"204\":1,\"402\":1}}],[\"输出信息到控制台\",{\"1\":{\"204\":1,\"402\":1}}],[\"输出格式化后的日期和时间\",{\"1\":{\"114\":1,\"312\":1}}],[\"输出每个元素\",{\"1\":{\"85\":1,\"283\":1}}],[\"输出\",{\"1\":{\"78\":3,\"79\":2,\"81\":1,\"82\":3,\"83\":3,\"86\":1,\"88\":1,\"113\":2,\"123\":1,\"124\":1,\"126\":1,\"203\":1,\"276\":3,\"277\":2,\"279\":1,\"280\":3,\"281\":3,\"284\":1,\"286\":1,\"311\":2,\"321\":1,\"322\":1,\"324\":1,\"401\":1}}],[\"考虑以下html元素\",{\"1\":{\"133\":1,\"331\":1}}],[\"访问\",{\"1\":{\"207\":1,\"405\":1}}],[\"访问方式\",{\"1\":{\"132\":1,\"330\":1}}],[\"访问和设置\",{\"1\":{\"131\":1,\"329\":1}}],[\"因此\",{\"1\":{\"211\":1,\"409\":1}}],[\"因此应该明智地使用\",{\"1\":{\"207\":1,\"405\":1}}],[\"因此它们具有明确的类型\",{\"1\":{\"131\":1,\"329\":1}}],[\"因为user\",{\"1\":{\"210\":1,\"408\":1}}],[\"因为执行一次后自然结束\",{\"1\":{\"175\":1,\"373\":1}}],[\"因为只需要在父元素上设置一个事件处理程序\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"因为<span\",{\"1\":{\"147\":1,\"345\":1}}],[\"因为property可能会被javascript代码修改\",{\"1\":{\"132\":1,\"330\":1}}],[\"因为此时\",{\"1\":{\"126\":1,\"324\":1}}],[\"因为在字符串中单个斜杠是特殊字符的开始\",{\"1\":{\"114\":1,\"312\":1}}],[\"因为显式地赋予了空值\",{\"1\":{\"113\":1,\"311\":1}}],[\"因为变量已声明但未初始化\",{\"1\":{\"113\":1,\"311\":1}}],[\"因为空字符串被转换为数字\",{\"1\":{\"106\":1,\"304\":1}}],[\"因为\",{\"1\":{\"106\":1,\"108\":1,\"202\":1,\"304\":1,\"306\":1,\"400\":1}}],[\"因为字符串\",{\"1\":{\"106\":1,\"108\":1,\"304\":1,\"306\":1}}],[\"因为一个是字符串\",{\"1\":{\"105\":1,\"108\":1,\"303\":1,\"306\":1}}],[\"因为他听起来很高端的样子\",{\"1\":{\"93\":1,\"291\":1}}],[\"因为它提供了更多的灵活性和控制能力\",{\"1\":{\"211\":1,\"409\":1}}],[\"因为它提供了更好的控制和灵活性\",{\"1\":{\"187\":1,\"385\":1}}],[\"因为它提供了更好的控制和更丰富的特性集\",{\"1\":{\"159\":1,\"357\":1}}],[\"因为它涉及到dom的重绘和重排\",{\"1\":{\"186\":1,\"384\":1}}],[\"因为它可以用于单个元素\",{\"1\":{\"186\":1,\"384\":1}}],[\"因为它允许你保留每个属性的响应性\",{\"1\":{\"225\":1,\"423\":1}}],[\"因为它允许你在每次迭代后根据需要调整间隔时间或停止定时器\",{\"1\":{\"182\":1,\"380\":1}}],[\"因为它允许执行html和javascript\",{\"1\":{\"186\":1,\"384\":1}}],[\"因为它们在不同的执行环境中运行\",{\"1\":{\"207\":1,\"405\":1}}],[\"因为它们在内存中的地址不同\",{\"1\":{\"78\":1,\"276\":1}}],[\"因为它们会继承父元素的事件处理程序\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"因为它不会进行隐式的类型转换\",{\"1\":{\"107\":1,\"305\":1}}],[\"因为它还包括了符号属性\",{\"1\":{\"83\":1,\"281\":1}}],[\"因为它仍占据空间\",{\"1\":{\"73\":1,\"271\":1}}],[\"浏览器已经逐渐被淘汰\",{\"1\":{\"211\":1,\"409\":1}}],[\"浏览器\",{\"1\":{\"211\":1,\"409\":1}}],[\"浏览器特有的事件模型\",{\"1\":{\"211\":1,\"409\":1}}],[\"浏览器类型\",{\"1\":{\"209\":1,\"407\":1}}],[\"浏览器提供了一些调试相关的\",{\"1\":{\"204\":1,\"402\":1}}],[\"浏览器的开发者工具同样提供了类似的功能\",{\"1\":{\"204\":1,\"402\":1}}],[\"浏览器的事件循环机制\",{\"0\":{\"98\":1,\"296\":1},\"1\":{\"75\":1,\"273\":1}}],[\"浏览器内置的开发者工具非常强大\",{\"1\":{\"204\":1,\"402\":1}}],[\"浏览器开发者工具\",{\"1\":{\"204\":2,\"402\":2}}],[\"浏览器会创建一个事件对象\",{\"1\":{\"160\":1,\"163\":1,\"358\":1,\"361\":1}}],[\"浏览器会根据html规范对attribute进行标准化处理\",{\"1\":{\"130\":1,\"328\":1}}],[\"浏览器不再向上走\",{\"1\":{\"158\":1,\"356\":1}}],[\"标题\",{\"0\":{\"232\":1,\"233\":1,\"236\":1,\"237\":1,\"240\":1,\"241\":1,\"244\":1,\"245\":1,\"248\":1,\"249\":1,\"430\":1,\"431\":1,\"434\":1,\"435\":1,\"438\":1,\"439\":1,\"442\":1,\"443\":1,\"446\":1,\"447\":1}}],[\"标签中使用新的语法\",{\"1\":{\"219\":1,\"417\":1}}],[\"标准的不断发展\",{\"1\":{\"211\":1,\"409\":1}}],[\"标准化\",{\"1\":{\"130\":1,\"328\":1}}],[\"标志表示全局搜索\",{\"1\":{\"114\":1,\"312\":1}}],[\"表现\",{\"1\":{\"130\":1,\"131\":1,\"328\":1,\"329\":1}}],[\"表示在冒泡阶段执行\",{\"1\":{\"211\":1,\"409\":1}}],[\"表示用户当前\",{\"1\":{\"209\":1,\"407\":1}}],[\"表示输入字段的初始值\",{\"1\":{\"133\":1,\"331\":1}}],[\"表示输入字段的类型\",{\"1\":{\"133\":1,\"331\":1}}],[\"表示对象中不存在某个属性\",{\"1\":{\"111\":1,\"309\":1}}],[\"表示对象为空\",{\"1\":{\"82\":1,\"280\":1}}],[\"表示函数没有返回值时\",{\"1\":{\"111\":1,\"309\":1}}],[\"表示函数期望返回一个对象\",{\"1\":{\"110\":1,\"308\":1}}],[\"表示变量初始化未完成\",{\"1\":{\"111\":1,\"309\":1}}],[\"表示一个变量初始化为空\",{\"1\":{\"110\":1,\"308\":1}}],[\"表示空对象\",{\"1\":{\"109\":1,\"307\":1}}],[\"文件限制\",{\"1\":{\"206\":1,\"404\":1}}],[\"文字\",{\"1\":{\"158\":1,\"356\":1}}],[\"文档对象模型\",{\"1\":{\"129\":1,\"134\":1,\"158\":1,\"162\":1,\"327\":1,\"332\":1,\"356\":1,\"360\":1}}],[\"文章\",{\"2\":{\"10\":1,\"52\":1}}],[\"无捕获\",{\"1\":{\"211\":1,\"409\":1}}],[\"无法做出相应改变\",{\"1\":{\"227\":1,\"425\":1}}],[\"无法读取主线程所在网页的\",{\"1\":{\"206\":1,\"404\":1}}],[\"无法反映元素当前的状态\",{\"1\":{\"129\":1,\"327\":1}}],[\"无需等待加载\",{\"1\":{\"196\":1,\"394\":1}}],[\"无论是相对于其父元素还是相对于整个视口\",{\"1\":{\"171\":1,\"369\":1}}],[\"无论是由ecmascript规范定义的还是由宿主环境提供的\",{\"1\":{\"102\":1,\"300\":1}}],[\"初始化为数组的长度\",{\"1\":{\"128\":1,\"326\":1}}],[\"选取一个剩余元素\",{\"1\":{\"128\":1,\"326\":1}}],[\"选择懒加载还是预加载\",{\"0\":{\"197\":1,\"395\":1}}],[\"选择使用\",{\"1\":{\"113\":1,\"202\":1,\"311\":1,\"400\":1}}],[\"选择哪种方法取决于你的具体需求\",{\"1\":{\"73\":1,\"87\":1,\"271\":1,\"285\":1}}],[\"重写\",{\"1\":{\"219\":1,\"417\":1}}],[\"重复步骤1\",{\"1\":{\"128\":1,\"326\":1}}],[\"重点3\",{\"1\":{\"93\":1,\"291\":1}}],[\"重点2\",{\"1\":{\"93\":1,\"291\":1}}],[\"重点1\",{\"1\":{\"93\":1,\"291\":1}}],[\"洗牌算法\",{\"1\":{\"128\":2,\"326\":2}}],[\"赋值给一个变量\",{\"1\":{\"126\":1,\"324\":1}}],[\"报错\",{\"1\":{\"123\":1,\"124\":1,\"126\":1,\"321\":1,\"322\":1,\"324\":1}}],[\"zone\",{\"1\":{\"123\":1,\"321\":1}}],[\"zh\",{\"1\":{\"96\":1,\"294\":1}}],[\"暂时性死区\",{\"1\":{\"123\":1,\"321\":1}}],[\"变量提升和函数提升是javascript在代码执行前对变量和函数声明进行处理的行为\",{\"1\":{\"126\":1,\"324\":1}}],[\"变量提升是指javascript引擎在代码执行之前\",{\"1\":{\"123\":1,\"321\":1}}],[\"变量提升是什么\",{\"0\":{\"122\":1,\"320\":1}}],[\"变量提升\",{\"0\":{\"123\":1,\"321\":1},\"1\":{\"122\":1,\"125\":1,\"320\":1,\"323\":1}}],[\"伪数组\",{\"0\":{\"116\":1,\"314\":1},\"1\":{\"115\":1,\"313\":1}}],[\"关系和互相转换方法\",{\"0\":{\"115\":1,\"313\":1}}],[\"关键字来定义类和构造函数\",{\"1\":{\"203\":1,\"401\":1}}],[\"关键字\",{\"1\":{\"196\":1,\"394\":1}}],[\"关键字继承父类\",{\"1\":{\"96\":1,\"294\":1}}],[\"关键字new功能\",{\"1\":{\"88\":1,\"286\":1}}],[\"之间通过消息传递进行通信\",{\"1\":{\"207\":1,\"405\":1}}],[\"之间的一些主要区别\",{\"1\":{\"219\":1,\"417\":1}}],[\"之间的\",{\"0\":{\"115\":1,\"313\":1}}],[\"之后不会改变\",{\"1\":{\"97\":1,\"295\":1}}],[\"之后\",{\"1\":{\"88\":1,\"286\":1}}],[\"您可能需要使用\",{\"1\":{\"114\":1,\"312\":1}}],[\"您的目标似乎是创建一个日期对象\",{\"1\":{\"114\":1,\"312\":1}}],[\"您的代码中有几个语法错误\",{\"1\":{\"114\":1,\"312\":1}}],[\"日\",{\"1\":{\"114\":1,\"312\":1}}],[\"日时\",{\"0\":{\"114\":1,\"312\":1}}],[\"正则表达式中的双斜杠\",{\"1\":{\"114\":1,\"312\":1}}],[\"秒\",{\"0\":{\"114\":1,\"312\":1},\"1\":{\"114\":1,\"312\":1}}],[\"分配给\",{\"1\":{\"206\":1,\"404\":1}}],[\"分\",{\"0\":{\"114\":1,\"312\":1},\"1\":{\"114\":1,\"312\":1}}],[\"月\",{\"0\":{\"114\":1,\"312\":1},\"1\":{\"114\":1,\"312\":1}}],[\"年\",{\"0\":{\"114\":1,\"312\":1},\"1\":{\"114\":1,\"312\":1}}],[\"怎么获取当前日期\",{\"0\":{\"114\":1,\"312\":1}}],[\"怎么判断两个对象相等\",{\"0\":{\"77\":1,\"275\":1}}],[\"显式返回\",{\"1\":{\"113\":1,\"311\":1}}],[\"显式地表示一个空或不存在的对象引用\",{\"1\":{\"110\":1,\"308\":1}}],[\"隐私与安全\",{\"1\":{\"210\":1,\"408\":1}}],[\"隐式返回\",{\"1\":{\"113\":1,\"311\":1}}],[\"隐藏\",{\"1\":{\"73\":1,\"271\":1}}],[\"隐藏的元素仍会影响布局\",{\"1\":{\"73\":1,\"271\":1}}],[\"隐藏元素可以通过多种方式实现\",{\"1\":{\"73\":1,\"271\":1}}],[\"隐藏元素\",{\"0\":{\"73\":1,\"271\":1}}],[\"被\",{\"1\":{\"219\":1,\"417\":1}}],[\"被认为是javascript的一个bug\",{\"1\":{\"112\":1,\"310\":1}}],[\"被转换为数字\",{\"1\":{\"106\":2,\"108\":1,\"304\":2,\"306\":1}}],[\"值的来源\",{\"1\":{\"112\":1,\"310\":1}}],[\"区别总结\",{\"0\":{\"201\":1,\"399\":1}}],[\"区别\",{\"0\":{\"112\":1,\"125\":1,\"132\":1,\"175\":1,\"186\":1,\"310\":1,\"323\":1,\"330\":1,\"373\":1,\"384\":1},\"1\":{\"158\":1,\"227\":1,\"356\":1,\"425\":1}}],[\"已经声明但是没有赋值\",{\"1\":{\"109\":1,\"307\":1}}],[\"针对\",{\"1\":{\"109\":2,\"307\":2}}],[\"推荐使用dom\",{\"1\":{\"159\":1,\"357\":1}}],[\"推荐使用\",{\"0\":{\"107\":1,\"305\":1},\"1\":{\"187\":1,\"211\":1,\"385\":1,\"409\":1}}],[\"会先进行预处理\",{\"1\":{\"217\":1,\"415\":1}}],[\"会触发主线程的error事件\",{\"1\":{\"207\":1,\"405\":1}}],[\"会触发<span\",{\"1\":{\"164\":1,\"362\":1}}],[\"会在所有包含的元素上触发\",{\"1\":{\"201\":1,\"399\":1}}],[\"会冒泡\",{\"1\":{\"201\":1,\"202\":1,\"399\":1,\"400\":1}}],[\"会清空整个文档的内容\",{\"1\":{\"184\":1,\"382\":1}}],[\"会返回空字符串\",{\"1\":{\"184\":1,\"382\":1}}],[\"会创建一个事件对象\",{\"1\":{\"159\":1,\"357\":1}}],[\"会按照以下顺序触发事件\",{\"1\":{\"145\":1,\"149\":1,\"153\":1,\"343\":1,\"347\":1,\"351\":1}}],[\"会将\",{\"1\":{\"108\":1,\"306\":1}}],[\"会根据隐式类型转换规则尝试将它们转换为相同类型\",{\"1\":{\"106\":1,\"304\":1}}],[\"会尝试进行类型转换\",{\"1\":{\"106\":1,\"304\":1}}],[\"会覆盖父类的方法\",{\"1\":{\"96\":1,\"294\":1}}],[\"时才开始加载\",{\"1\":{\"195\":1,\"393\":1}}],[\"时间\",{\"1\":{\"163\":1,\"361\":1}}],[\"时间戳等\",{\"1\":{\"159\":1,\"357\":1}}],[\"时\",{\"1\":{\"105\":1,\"114\":1,\"186\":1,\"210\":1,\"219\":1,\"303\":1,\"312\":1,\"384\":1,\"408\":1,\"417\":1}}],[\"类似beforeeach\",{\"1\":{\"228\":1,\"426\":1}}],[\"类似\",{\"1\":{\"200\":1,\"398\":1}}],[\"类数组对象\",{\"1\":{\"117\":3,\"315\":3}}],[\"类数组对象不是数组实例\",{\"1\":{\"116\":1,\"314\":1}}],[\"类数组转数组\",{\"0\":{\"117\":1,\"315\":1}}],[\"类数组\",{\"0\":{\"115\":1,\"116\":1,\"313\":1,\"314\":1},\"1\":{\"115\":1,\"313\":1}}],[\"类型推导\",{\"1\":{\"229\":1,\"427\":1}}],[\"类型转换\",{\"1\":{\"132\":1,\"330\":1}}],[\"类型\",{\"1\":{\"110\":2,\"111\":2,\"112\":1,\"131\":1,\"308\":2,\"309\":2,\"310\":1,\"329\":1}}],[\"类型和值都相等\",{\"1\":{\"105\":1,\"303\":1}}],[\"类的各种语法\",{\"1\":{\"96\":1,\"294\":1}}],[\"严格相等运算符\",{\"0\":{\"105\":1,\"303\":1}}],[\"严格等于\",{\"1\":{\"78\":1,\"276\":1}}],[\"由于\",{\"1\":{\"207\":1,\"405\":1}}],[\"由于使用了\",{\"1\":{\"182\":1,\"380\":1}}],[\"由于事件冒泡的特性\",{\"1\":{\"159\":1,\"357\":1}}],[\"由于在父容器的事件处理器中调用了<span\",{\"1\":{\"154\":1,\"352\":1}}],[\"由内而外找监听函数就是事件冒泡\",{\"1\":{\"158\":1,\"356\":1}}],[\"由外向内找监听函数就是事件捕获\",{\"1\":{\"158\":1,\"356\":1}}],[\"由外到内执行\",{\"1\":{\"149\":1,\"347\":1}}],[\"由javascript引擎实现的对象\",{\"1\":{\"103\":1,\"301\":1}}],[\"由ecmascript规范定义的对象\",{\"1\":{\"103\":1,\"301\":1}}],[\"互换使用\",{\"1\":{\"102\":1,\"300\":1}}],[\"数字或布尔值\",{\"1\":{\"131\":1,\"329\":1}}],[\"数组和对象之间进行灵活的转换\",{\"1\":{\"121\":1,\"319\":1}}],[\"数组和对象是三种常用的数据结构\",{\"1\":{\"115\":1,\"313\":1}}],[\"数组转对象\",{\"0\":{\"120\":1,\"318\":1}}],[\"数组转类数组\",{\"0\":{\"118\":1,\"316\":1}}],[\"数组是有序的数据集合\",{\"1\":{\"119\":1,\"317\":1}}],[\"数组与对象\",{\"0\":{\"119\":1,\"317\":1}}],[\"数组本身就是类数组\",{\"1\":{\"118\":1,\"316\":1}}],[\"数组\",{\"0\":{\"115\":1,\"313\":1}}],[\"数组的长度为0\",{\"1\":{\"82\":1,\"280\":1}}],[\"数组的foreach和map方法有哪些区别\",{\"0\":{\"84\":1,\"282\":1},\"1\":{\"75\":1,\"273\":1}}],[\"数学计算等\",{\"1\":{\"101\":1,\"299\":1}}],[\"错误处理\",{\"1\":{\"101\":1,\"299\":1}}],[\"例如在父元素中捕获事件并阻止它进一步传播\",{\"1\":{\"155\":1,\"353\":1}}],[\"例如字符串\",{\"1\":{\"131\":1,\"329\":1}}],[\"例如<span\",{\"1\":{\"130\":1,\"328\":1}}],[\"例如\",{\"1\":{\"114\":1,\"131\":1,\"160\":1,\"162\":1,\"197\":1,\"203\":1,\"219\":1,\"312\":1,\"329\":1,\"358\":1,\"360\":1,\"395\":1,\"401\":1,\"417\":1}}],[\"例如设置\",{\"1\":{\"73\":1,\"271\":1}}],[\"例子\",{\"0\":{\"108\":1,\"113\":1,\"306\":1,\"311\":1},\"1\":{\"100\":1,\"101\":1,\"102\":1,\"105\":1,\"106\":1,\"298\":1,\"299\":1,\"300\":1,\"303\":1,\"304\":1}}],[\"宿主对象是依赖于宿主环境\",{\"1\":{\"100\":1,\"298\":1}}],[\"宿主对象是由javascript运行环境\",{\"1\":{\"100\":1,\"298\":1}}],[\"宿主对象的具体特性和行为可能会因不同的宿主环境而异\",{\"1\":{\"100\":1,\"298\":1}}],[\"宿主对象\",{\"0\":{\"100\":1,\"298\":1},\"1\":{\"99\":1,\"103\":1,\"297\":1,\"301\":1}}],[\"列举宿主对象\",{\"0\":{\"99\":1,\"297\":1}}],[\"循环延时\",{\"1\":{\"98\":1,\"296\":1}}],[\"循环引用或特殊对象\",{\"1\":{\"78\":1,\"276\":1}}],[\"高\",{\"1\":{\"98\":1,\"296\":1}}],[\"交互\",{\"1\":{\"207\":1,\"405\":1}}],[\"交互队列\",{\"1\":{\"98\":1,\"296\":1}}],[\"交叉轴居中\",{\"1\":{\"58\":1,\"59\":1,\"256\":1,\"257\":1}}],[\"最高\",{\"1\":{\"98\":1,\"296\":1}}],[\"最佳方法\",{\"1\":{\"67\":1,\"265\":1}}],[\"微队列\",{\"1\":{\"98\":1,\"296\":1}}],[\"消息队列有优先级\",{\"1\":{\"98\":1,\"296\":1}}],[\"先进行宏任务\",{\"1\":{\"98\":1,\"296\":1}}],[\"故可以把generator赋值给对象的\",{\"1\":{\"97\":1,\"295\":1}}],[\"没有被回收\",{\"1\":{\"220\":1,\"418\":1}}],[\"没有事件监听器的概念\",{\"1\":{\"211\":1,\"409\":1}}],[\"没有值\",{\"1\":{\"109\":1,\"307\":1}}],[\"没有自身的prototype\",{\"1\":{\"97\":1,\"295\":1}}],[\"没有任何自身的属性\",{\"1\":{\"82\":1,\"280\":1}}],[\"箭头函数的this在定义的时候就已经确认了\",{\"1\":{\"97\":1,\"295\":1}}],[\"箭头函数不会创建自身的this\",{\"1\":{\"97\":1,\"295\":1}}],[\"箭头函数和普通函数有什么区别\",{\"0\":{\"97\":1,\"295\":1},\"1\":{\"75\":1,\"273\":1}}],[\"抽象类可以包含抽象方法\",{\"1\":{\"96\":1,\"294\":1}}],[\"等同于\",{\"1\":{\"207\":1,\"405\":1}}],[\"等也是内置对象\",{\"1\":{\"101\":1,\"299\":1}}],[\"等是内置对象\",{\"1\":{\"101\":1,\"299\":1}}],[\"等都是宿主对象\",{\"1\":{\"100\":2,\"298\":2}}],[\"等\",{\"1\":{\"96\":1,\"204\":1,\"294\":1,\"402\":1}}],[\"开发者在升级到\",{\"1\":{\"219\":1,\"417\":1}}],[\"开发者写的同一套代码\",{\"1\":{\"214\":1,\"412\":1}}],[\"开发者可能需要使用\",{\"1\":{\"211\":1,\"409\":1}}],[\"开发中被广泛使用\",{\"1\":{\"211\":1,\"409\":1}}],[\"开发中\",{\"1\":{\"211\":1,\"409\":1}}],[\"开发中更推荐使用\",{\"1\":{\"203\":1,\"401\":1}}],[\"开始\",{\"1\":{\"149\":1,\"159\":1,\"347\":1,\"357\":1}}],[\"开头描述的私有属性\",{\"1\":{\"96\":1,\"294\":1}}],[\"开头的\",{\"1\":{\"96\":1,\"294\":1}}],[\"开启bfc\",{\"1\":{\"68\":1,\"69\":1,\"70\":1,\"266\":1,\"267\":1,\"268\":1}}],[\"开启bfc属性\",{\"1\":{\"67\":1,\"265\":1}}],[\"以表格形式展示对象的属性\",{\"1\":{\"204\":1,\"402\":1}}],[\"以下示例展示了如何获取元素相对于浏览器视口的位置\",{\"1\":{\"171\":1,\"369\":1}}],[\"以下是\",{\"1\":{\"207\":1,\"219\":1,\"405\":1,\"417\":1}}],[\"以下是两种方法的实现方式和原理\",{\"1\":{\"188\":1,\"386\":1}}],[\"以下是这些操作的基本方法\",{\"1\":{\"134\":1,\"332\":1}}],[\"以下是使用fisher\",{\"1\":{\"128\":1,\"326\":1}}],[\"以下是修正后的代码\",{\"1\":{\"114\":1,\"312\":1}}],[\"以下是它们的定义和区别\",{\"1\":{\"99\":1,\"297\":1}}],[\"以下是一些常用的\",{\"1\":{\"204\":1,\"402\":1}}],[\"以下是一些常用的方法\",{\"1\":{\"165\":1,\"363\":1}}],[\"以下是一些常用的方法来隐藏元素\",{\"1\":{\"73\":1,\"271\":1}}],[\"以下是一些判断对象是否为空的方法\",{\"1\":{\"83\":1,\"281\":1}}],[\"以下是一些判断对象相等的方法\",{\"1\":{\"78\":1,\"276\":1}}],[\"以下是对您提供的文件内容的总结\",{\"1\":{\"60\":1,\"258\":1}}],[\"以及一些可以调用的方法\",{\"1\":{\"160\":1,\"358\":1}}],[\"以适应不同的编程场景和需求\",{\"1\":{\"121\":1,\"319\":1}}],[\"以\",{\"1\":{\"96\":1,\"294\":1}}],[\"注意事项\",{\"0\":{\"177\":1,\"182\":1,\"210\":1,\"375\":1,\"380\":1,\"408\":1}}],[\"注意\",{\"1\":{\"96\":1,\"139\":1,\"294\":1,\"337\":1}}],[\"注意这一点也是原型链继承的弊端\",{\"1\":{\"92\":1,\"290\":1}}],[\"面试题目\",{\"1\":{\"96\":1,\"294\":1}}],[\"静态属性方法\",{\"1\":{\"96\":1,\"294\":1}}],[\"示例代码\",{\"0\":{\"190\":1,\"192\":1,\"388\":1,\"390\":1}}],[\"示例\",{\"0\":{\"133\":1,\"145\":1,\"147\":1,\"153\":1,\"164\":1,\"171\":1,\"187\":1,\"202\":1,\"331\":1,\"343\":1,\"345\":1,\"351\":1,\"362\":1,\"369\":1,\"385\":1,\"400\":1},\"1\":{\"96\":1,\"128\":1,\"173\":1,\"174\":1,\"176\":1,\"207\":1,\"211\":3,\"294\":1,\"326\":1,\"371\":1,\"372\":1,\"374\":1,\"405\":1,\"409\":3}}],[\"必须来自网络\",{\"1\":{\"206\":1,\"404\":1}}],[\"必须\",{\"1\":{\"206\":1,\"404\":1}}],[\"必须与主线程的脚本文件同源\",{\"1\":{\"206\":1,\"404\":1}}],[\"必须使用\",{\"1\":{\"96\":1,\"294\":1}}],[\"必会\",{\"0\":{\"93\":1,\"291\":1}}],[\"原理\",{\"0\":{\"193\":1,\"391\":1}}],[\"原理是怎样\",{\"0\":{\"188\":1,\"386\":1}}],[\"原始数组保持不变\",{\"1\":{\"128\":1,\"326\":1}}],[\"原生javascript\",{\"1\":{\"195\":1,\"393\":1}}],[\"原生javascript方法则更灵活\",{\"1\":{\"193\":1,\"391\":1}}],[\"原生javascript实现元素拖动的原理是监听鼠标事件\",{\"1\":{\"189\":1,\"387\":1}}],[\"原生\",{\"1\":{\"188\":1,\"386\":1}}],[\"原生对象是由javascript引擎实现的对象\",{\"1\":{\"102\":1,\"300\":1}}],[\"原生对象包括了所有由javascript引擎直接实现的对象\",{\"1\":{\"102\":1,\"300\":1}}],[\"原生对象通常是指那些直接由javascript引擎实现的对象\",{\"1\":{\"102\":1,\"300\":1}}],[\"原生对象\",{\"0\":{\"102\":1,\"300\":1},\"1\":{\"102\":1,\"103\":1,\"300\":1,\"301\":1}}],[\"原生对象并说明其定义\",{\"0\":{\"99\":1,\"297\":1}}],[\"原生也不支持多重继承\",{\"1\":{\"96\":1,\"294\":1}}],[\"原型链有什么用\",{\"1\":{\"92\":1,\"290\":1}}],[\"原型链最终会指向\",{\"1\":{\"92\":1,\"290\":1}}],[\"原型链是什么\",{\"1\":{\"92\":1,\"290\":1}}],[\"原型相关的面试题目\",{\"0\":{\"91\":1,\"289\":1}}],[\"原型\",{\"1\":{\"88\":1,\"92\":1,\"286\":1,\"290\":1}}],[\"原型和原型链\",{\"0\":{\"89\":1,\"287\":1},\"1\":{\"75\":1,\"273\":1}}],[\"说明\",{\"1\":{\"96\":1,\"294\":1}}],[\"说说你对原型和原型链的理解\",{\"0\":{\"92\":1,\"290\":1}}],[\"且现代web开发更推荐使用特性检测\",{\"1\":{\"210\":1,\"408\":1}}],[\"且只能继承一个\",{\"1\":{\"96\":1,\"294\":1}}],[\"且不占据空间\",{\"1\":{\"73\":2,\"271\":2}}],[\"有异步导致数据发生变化时\",{\"1\":{\"227\":1,\"425\":1}}],[\"有些需要针对不同平台做区分\",{\"1\":{\"214\":1,\"412\":1}}],[\"有以下几个使用注意点\",{\"0\":{\"206\":1,\"404\":1}}],[\"有访问描述符\",{\"1\":{\"96\":1,\"294\":1}}],[\"有一个专门的方法importscripts\",{\"1\":{\"207\":1,\"405\":1}}],[\"有一个私有属性和方法\",{\"1\":{\"96\":1,\"294\":1}}],[\"有一些库如lodash提供了深度比较功能\",{\"1\":{\"78\":1,\"276\":1}}],[\"有几个关键点\",{\"1\":{\"96\":1,\"294\":1}}],[\"代码组织\",{\"1\":{\"229\":1,\"427\":1}}],[\"代码名\",{\"1\":{\"209\":1,\"407\":1}}],[\"代码\",{\"1\":{\"207\":1,\"405\":1}}],[\"代码审查\",{\"1\":{\"204\":1,\"402\":1}}],[\"代码执行将暂停\",{\"1\":{\"204\":1,\"402\":1}}],[\"代码是开发过程中的一个重要环节\",{\"1\":{\"204\":1,\"402\":1}}],[\"代码实现\",{\"0\":{\"96\":1,\"294\":1}}],[\"代表\",{\"1\":{\"72\":1,\"270\":1}}],[\"七\",{\"0\":{\"95\":1,\"293\":1}}],[\"一旦数据发生变化就直接触发响应操作\",{\"1\":{\"227\":1,\"425\":1}}],[\"一旦文档加载完成\",{\"1\":{\"184\":1,\"382\":1}}],[\"一致性问题\",{\"1\":{\"210\":1,\"408\":1}}],[\"一\",{\"0\":{\"209\":1,\"407\":1}}],[\"一次\",{\"1\":{\"202\":1,\"400\":1}}],[\"一般用于封装某些独立组件\",{\"1\":{\"158\":1,\"356\":1}}],[\"一个被数字\",{\"1\":{\"239\":1,\"437\":1}}],[\"一个具体值\",{\"1\":{\"109\":1,\"307\":1}}],[\"一个是数字\",{\"1\":{\"105\":1,\"108\":1,\"303\":1,\"306\":1}}],[\"一个独立的渲染区\",{\"0\":{\"64\":1,\"262\":1}}],[\"一定要记住\",{\"1\":{\"94\":1,\"292\":1}}],[\"整半天就一套代码\",{\"1\":{\"94\":1,\"292\":1}}],[\"好吧\",{\"1\":{\"94\":1,\"292\":1}}],[\"小结\",{\"0\":{\"94\":1,\"292\":1}}],[\"第三个参数为\",{\"1\":{\"159\":1,\"357\":1}}],[\"第二个学生\",{\"1\":{\"93\":1,\"96\":1,\"291\":1,\"294\":1}}],[\"第一个学生\",{\"1\":{\"93\":1,\"96\":1,\"291\":1,\"294\":1}}],[\"换成\",{\"1\":{\"93\":1,\"291\":1}}],[\"把\",{\"1\":{\"93\":1,\"291\":1}}],[\"把闭包简单理解成\",{\"1\":{\"88\":1,\"286\":1}}],[\"很简单\",{\"1\":{\"93\":1,\"291\":1}}],[\"还有更多\",{\"1\":{\"209\":1,\"407\":1}}],[\"还有许多第三方调试工具\",{\"1\":{\"204\":1,\"402\":1}}],[\"还有一个重要的组成部分是事件对象\",{\"1\":{\"163\":1,\"361\":1}}],[\"还是\",{\"1\":{\"113\":1,\"202\":1,\"311\":1,\"400\":1}}],[\"还比较它们的值\",{\"1\":{\"105\":1,\"303\":1}}],[\"还不如叫\",{\"1\":{\"93\":1,\"291\":1}}],[\"还获取了符号属性\",{\"1\":{\"82\":1,\"280\":1}}],[\"寄生式组合继承\",{\"0\":{\"93\":1,\"291\":1}}],[\"六\",{\"0\":{\"93\":1,\"291\":1}}],[\"直到你明确地停止它\",{\"1\":{\"175\":1,\"373\":1}}],[\"直到到达目标元素\",{\"1\":{\"150\":1,\"348\":1}}],[\"直到达到根节点\",{\"1\":{\"144\":1,\"342\":1}}],[\"直到遍历完整个数组\",{\"1\":{\"128\":1,\"326\":1}}],[\"直到找到该变量或者全局上下文时为止\",{\"1\":{\"127\":1,\"325\":1}}],[\"直到找到该属性\",{\"1\":{\"92\":1,\"290\":1}}],[\"直到它们被实际声明\",{\"1\":{\"123\":1,\"321\":1}}],[\"直接绑定事件处理器到元素上\",{\"1\":{\"211\":1,\"409\":1}}],[\"直接使用\",{\"1\":{\"203\":1,\"401\":1}}],[\"直接使用类名调用\",{\"1\":{\"96\":1,\"294\":1}}],[\"直接返回\",{\"1\":{\"105\":1,\"303\":1}}],[\"直接改变对象的\",{\"1\":{\"89\":1,\"287\":1}}],[\"就可以生成不同平台的代码\",{\"1\":{\"214\":1,\"412\":1}}],[\"就是为\",{\"1\":{\"205\":1,\"403\":1}}],[\"就是mouseover存在冒泡\",{\"1\":{\"198\":1,\"396\":1}}],[\"就执行相应的操作\",{\"1\":{\"161\":1,\"359\":1}}],[\"就会向上层上下文中查找\",{\"1\":{\"127\":1,\"325\":1}}],[\"就会去原型链上查找\",{\"1\":{\"92\":1,\"290\":1}}],[\"就行了\",{\"1\":{\"93\":1,\"291\":1}}],[\"就足够了\",{\"1\":{\"83\":1,\"281\":1}}],[\"扩展\",{\"1\":{\"92\":2,\"290\":2}}],[\"而vue\",{\"1\":{\"215\":1,\"413\":1}}],[\"而且不支持捕获和冒泡阶段\",{\"1\":{\"211\":1,\"409\":1}}],[\"而且也有可能让你手写一个\",{\"1\":{\"93\":1,\"291\":1}}],[\"而非浏览器嗅探\",{\"1\":{\"210\":1,\"408\":1}}],[\"而对于页面下方的内容则可以使用懒加载\",{\"1\":{\"197\":1,\"395\":1}}],[\"而attribute只在html中更改\",{\"1\":{\"132\":1,\"330\":1}}],[\"而property具有javascript的类型转换特性\",{\"1\":{\"132\":1,\"330\":1}}],[\"而property来自dom元素对象\",{\"1\":{\"132\":1,\"330\":1}}],[\"而property可以反映元素的实际状态\",{\"1\":{\"129\":1,\"327\":1}}],[\"而property是dom元素在javascript中的属性\",{\"1\":{\"129\":1,\"327\":1}}],[\"而是作为全局\",{\"1\":{\"211\":1,\"409\":1}}],[\"而是直接将函数赋值给\",{\"1\":{\"211\":1,\"409\":1}}],[\"而是绑定在目标元素的父元素或祖先元素上\",{\"1\":{\"161\":1,\"359\":1}}],[\"而是处于一个称为\",{\"1\":{\"123\":1,\"321\":1}}],[\"而是创建一个新数组\",{\"1\":{\"86\":1,\"284\":1}}],[\"而不会导致用户界面变得不响应\",{\"1\":{\"207\":1,\"405\":1}}],[\"而不会干扰主线程的执行\",{\"1\":{\"207\":1,\"405\":1}}],[\"而不会触发父容器的点击事件\",{\"1\":{\"147\":1,\"345\":1}}],[\"而不希望触发父容器的点击事件\",{\"1\":{\"147\":1,\"345\":1}}],[\"而不是\",{\"1\":{\"203\":1,\"401\":1}}],[\"而不是直接在元素上\",{\"1\":{\"193\":1,\"391\":1}}],[\"而不是在每个子元素上都设置\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"而不是键值对的形式\",{\"1\":{\"121\":1,\"319\":1}}],[\"而不是由ecmascript规范定义的对象\",{\"1\":{\"100\":1,\"298\":1}}],[\"而不仅仅是第一个\",{\"1\":{\"114\":1,\"312\":1}}],[\"而不关心它们的类型\",{\"1\":{\"106\":1,\"304\":1}}],[\"而接口只能定义方法的签名\",{\"1\":{\"96\":1,\"294\":1}}],[\"而\",{\"1\":{\"92\":1,\"126\":1,\"175\":1,\"183\":1,\"186\":2,\"201\":2,\"290\":1,\"324\":1,\"373\":1,\"381\":1,\"384\":2,\"399\":2}}],[\"同源策略\",{\"1\":{\"207\":1,\"405\":1}}],[\"同源限制\",{\"1\":{\"206\":1,\"404\":1}}],[\"同步性\",{\"1\":{\"132\":1,\"330\":1}}],[\"同内置对象和宿主对象的例子\",{\"1\":{\"102\":1,\"300\":1}}],[\"同样的\",{\"1\":{\"92\":1,\"290\":1}}],[\"同时虚拟dom也为跨平台开发提供了极大的便利\",{\"1\":{\"214\":1,\"412\":1}}],[\"同时也避免了\",{\"1\":{\"207\":1,\"405\":1}}],[\"同时传入构造函数所需的参数\",{\"1\":{\"203\":1,\"401\":1}}],[\"同时\",{\"1\":{\"187\":1,\"211\":1,\"385\":1,\"409\":1}}],[\"同时箭头函数无法作为构造函数使用\",{\"1\":{\"97\":1,\"295\":1}}],[\"同时函数都有一个公开可访问属性\",{\"1\":{\"92\":1,\"290\":1}}],[\"同时将这个空对象赋值给构造函数内部的this\",{\"1\":{\"88\":1,\"286\":1}}],[\"同时给父子元素设置同一方向的一个外边距\",{\"1\":{\"71\":1,\"269\":1}}],[\"同时给兄弟元素设置一个下外边距同时设置一个上外边距\",{\"1\":{\"67\":1,\"71\":1,\"265\":1,\"269\":1}}],[\"来确定哪些节点需要移动\",{\"1\":{\"217\":1,\"415\":1}}],[\"来确保唯一性\",{\"1\":{\"179\":1,\"377\":1}}],[\"来创建dom元素\",{\"1\":{\"214\":1,\"412\":1}}],[\"来渲染到页面上\",{\"1\":{\"214\":1,\"412\":1}}],[\"来编写测试用例\",{\"1\":{\"204\":1,\"402\":1}}],[\"来计数同一行代码被执行的次数等\",{\"1\":{\"204\":1,\"402\":1}}],[\"来清除控制台输出\",{\"1\":{\"204\":1,\"402\":1}}],[\"来清除定时器\",{\"1\":{\"182\":1,\"380\":1}}],[\"来分析内存使用情况\",{\"1\":{\"204\":1,\"402\":1}}],[\"来记录和分析页面加载和运行时的性能瓶颈\",{\"1\":{\"204\":1,\"402\":1}}],[\"来逐行或逐函数执行代码\",{\"1\":{\"204\":1,\"402\":1}}],[\"来使元素脱离文档流\",{\"1\":{\"193\":1,\"391\":1}}],[\"来动态更新页面内容\",{\"1\":{\"187\":1,\"385\":1}}],[\"来取消对应的定时器\",{\"1\":{\"180\":1,\"378\":1}}],[\"来标识此定时器\",{\"1\":{\"178\":1,\"376\":1}}],[\"来源\",{\"1\":{\"132\":1,\"330\":1}}],[\"来调用父类的构造函数\",{\"1\":{\"96\":1,\"294\":1}}],[\"来获取\",{\"1\":{\"92\":1,\"290\":1}}],[\"来实现响应式系统\",{\"1\":{\"219\":1,\"417\":1}}],[\"来实现定时调用\",{\"1\":{\"179\":1,\"377\":1}}],[\"来实现\",{\"1\":{\"178\":1,\"376\":1}}],[\"来实现垂直居中\",{\"1\":{\"61\":2,\"62\":1,\"259\":2,\"260\":1}}],[\"来实现水平居中\",{\"1\":{\"61\":2,\"62\":1,\"259\":2,\"260\":1}}],[\"回答问题分文两步\",{\"1\":{\"92\":1,\"290\":1}}],[\"函数可以模拟\",{\"1\":{\"203\":1,\"401\":1}}],[\"函数就可以像\",{\"1\":{\"203\":1,\"401\":1}}],[\"函数开始执行定时任务\",{\"1\":{\"179\":1,\"377\":1}}],[\"函数会再次调用自己\",{\"1\":{\"179\":1,\"377\":1}}],[\"函数内部\",{\"1\":{\"179\":1,\"377\":1}}],[\"函数\",{\"0\":{\"179\":1,\"180\":1,\"377\":1,\"378\":1},\"1\":{\"179\":2,\"377\":2}}],[\"函数声明\",{\"1\":{\"126\":1,\"324\":1}}],[\"函数声明会被提升到当前作用域的顶部\",{\"1\":{\"124\":1,\"322\":1}}],[\"函数表达式\",{\"1\":{\"126\":1,\"324\":1}}],[\"函数表达式与函数声明的区别\",{\"0\":{\"126\":1,\"324\":1}}],[\"函数表达式不会提升\",{\"1\":{\"125\":1,\"323\":1}}],[\"函数提升与变量提升类似\",{\"1\":{\"124\":1,\"322\":1}}],[\"函数提升\",{\"0\":{\"124\":1,\"322\":1},\"1\":{\"125\":1,\"323\":1}}],[\"函数的\",{\"1\":{\"90\":1,\"288\":1}}],[\"函数的关系\",{\"1\":{\"75\":1,\"97\":1,\"273\":1,\"295\":1}}],[\"函数有一个公开可访问不可枚举属性\",{\"1\":{\"90\":1,\"288\":1}}],[\"获取鼠标点击时的屏幕坐标\",{\"1\":{\"190\":1,\"388\":1}}],[\"获取元素相对于视口的位置\",{\"0\":{\"171\":1,\"369\":1}}],[\"获取元素的位置可以通过几种不同的方法\",{\"1\":{\"165\":1,\"363\":1}}],[\"获取元素位置\",{\"0\":{\"165\":1,\"363\":1}}],[\"获取一个dom元素\",{\"1\":{\"164\":1,\"362\":1}}],[\"获取\",{\"1\":{\"90\":1,\"288\":1}}],[\"总之关于原型这块记住三句话\",{\"1\":{\"90\":1,\"288\":1}}],[\"总结来说\",{\"1\":{\"126\":1,\"324\":1}}],[\"总结\",{\"0\":{\"78\":1,\"83\":1,\"90\":1,\"103\":1,\"148\":1,\"155\":1,\"218\":1,\"222\":1,\"226\":1,\"276\":1,\"281\":1,\"288\":1,\"301\":1,\"346\":1,\"353\":1,\"416\":1,\"420\":1,\"424\":1},\"1\":{\"79\":1,\"277\":1}}],[\"用一个全局变量处理被注册的函数\",{\"1\":{\"220\":1,\"418\":1}}],[\"用法\",{\"1\":{\"173\":1,\"174\":1,\"371\":1,\"372\":1}}],[\"用户代理字符串\",{\"1\":{\"209\":1,\"407\":1}}],[\"用户滚动到图片位置时\",{\"1\":{\"196\":1,\"394\":1}}],[\"用户可能只浏览页面的一部分\",{\"1\":{\"195\":1,\"393\":1}}],[\"用户点击文字\",{\"1\":{\"158\":1,\"356\":1}}],[\"用户操作的元素\",{\"1\":{\"158\":1,\"356\":1}}],[\"用途\",{\"1\":{\"110\":1,\"111\":1,\"112\":1,\"186\":1,\"207\":1,\"308\":1,\"309\":1,\"310\":1,\"384\":1,\"405\":1}}],[\"用自己的话总结一些这篇文章的内容即可\",{\"1\":{\"96\":1,\"294\":1}}],[\"用extends进行继承\",{\"1\":{\"89\":1,\"287\":1}}],[\"用于将一个响应式对象转换为一个包含多个响应式引用的对象\",{\"1\":{\"225\":1,\"423\":1}}],[\"用于将响应式对象的每个属性转换为响应式引用\",{\"1\":{\"222\":1,\"226\":1,\"420\":1,\"424\":1}}],[\"用于将相关的输出分组\",{\"1\":{\"204\":1,\"402\":1}}],[\"用于创建一个响应式引用\",{\"1\":{\"224\":1,\"422\":1}}],[\"用于创建一个新的日期对象\",{\"1\":{\"114\":1,\"312\":1}}],[\"用于创建对象某个属性的响应式引用\",{\"1\":{\"222\":1,\"226\":1,\"420\":1,\"424\":1}}],[\"用于创建单一值的响应式引用\",{\"1\":{\"222\":1,\"226\":1,\"420\":1,\"424\":1}}],[\"用于清除依赖\",{\"1\":{\"220\":1,\"418\":1}}],[\"用于操作\",{\"1\":{\"220\":1,\"418\":1}}],[\"用于异步组件的加载状态处理\",{\"1\":{\"219\":1,\"417\":1}}],[\"用于异步检测目标元素与祖先元素或顶级文档视窗\",{\"1\":{\"195\":1,\"393\":1}}],[\"用于提示潜在的问题\",{\"1\":{\"204\":1,\"402\":1}}],[\"用于在文档加载完成后修改元素的内容\",{\"1\":{\"183\":1,\"186\":1,\"381\":1,\"384\":1}}],[\"用于控制事件的传播和默认行为\",{\"1\":{\"163\":1,\"361\":1}}],[\"用于响应特定的事件\",{\"1\":{\"162\":1,\"360\":1}}],[\"用于为html元素提供额外信息的键值对\",{\"1\":{\"130\":1,\"328\":1}}],[\"用于全局替换字符串中的所有斜杠\",{\"1\":{\"114\":1,\"312\":1}}],[\"用于表示基本数据结构\",{\"1\":{\"101\":1,\"299\":1}}],[\"用于初始化实例的属性\",{\"1\":{\"88\":1,\"286\":1}}],[\"用于初始化实例\",{\"1\":{\"88\":1,\"286\":1}}],[\"用于告知辅助技术\",{\"1\":{\"73\":1,\"271\":1}}],[\"我个人不推荐使用它\",{\"1\":{\"158\":1,\"356\":1}}],[\"我们只在父元素<span\",{\"1\":{\"161\":1,\"359\":1}}],[\"我们需要对它进行转义\",{\"1\":{\"114\":1,\"312\":1}}],[\"我们给父元素生成bfc后\",{\"1\":{\"68\":1,\"266\":1}}],[\"我将帮您纠正这些错误\",{\"1\":{\"114\":1,\"312\":1}}],[\"我想他应该没有什么可问的了吧\",{\"1\":{\"94\":1,\"292\":1}}],[\"我不喜欢这个名字\",{\"1\":{\"93\":1,\"291\":1}}],[\"我可以提供相应的示例\",{\"1\":{\"88\":1,\"286\":1}}],[\"请求\",{\"1\":{\"206\":1,\"404\":1}}],[\"请求方法\",{\"1\":{\"204\":1,\"402\":1}}],[\"请看这篇文章\",{\"1\":{\"93\":1,\"291\":1}}],[\"请告诉我具体的语言\",{\"1\":{\"88\":1,\"286\":1}}],[\"请注意\",{\"1\":{\"83\":1,\"114\":1,\"121\":1,\"128\":1,\"203\":1,\"281\":1,\"312\":1,\"319\":1,\"326\":1,\"401\":1}}],[\"`element\",{\"1\":{\"171\":1,\"369\":1}}],[\"`\",{\"1\":{\"88\":1,\"171\":1,\"203\":1,\"228\":2,\"286\":1,\"369\":1,\"401\":1,\"426\":2}}],[\"`hello\",{\"1\":{\"88\":1,\"203\":1,\"286\":1,\"401\":1}}],[\"实例方法\",{\"1\":{\"88\":1,\"286\":1}}],[\"实例的age属性\",{\"1\":{\"88\":1,\"286\":1}}],[\"实例的name属性\",{\"1\":{\"88\":1,\"286\":1}}],[\"实现方式\",{\"1\":{\"195\":1,\"196\":1,\"393\":1,\"394\":1}}],[\"实现数组的随机排序通常使用fisher\",{\"1\":{\"128\":1,\"326\":1}}],[\"实现继承\",{\"1\":{\"96\":1,\"294\":1}}],[\"实现对对象的扩展\",{\"1\":{\"92\":1,\"290\":1}}],[\"实现一个类以关键字new功能的函数\",{\"1\":{\"75\":1,\"88\":1,\"273\":1,\"286\":1}}],[\"实现左右固定宽度\",{\"1\":{\"70\":1,\"268\":1}}],[\"实现三栏布局\",{\"0\":{\"70\":1,\"268\":1}}],[\"实现了两栏布局且右边是自适应\",{\"1\":{\"69\":1,\"267\":1}}],[\"实现两栏布局\",{\"0\":{\"69\":1,\"267\":1}}],[\"构造函数创建一个新的\",{\"1\":{\"207\":1,\"405\":1}}],[\"构造函数\",{\"1\":{\"88\":1,\"96\":1,\"207\":1,\"286\":1,\"294\":1,\"405\":1}}],[\"展示如何在javascript中实现一个类\",{\"1\":{\"88\":1,\"286\":1}}],[\"通信\",{\"1\":{\"207\":1,\"405\":1}}],[\"通信联系\",{\"1\":{\"206\":1,\"404\":1}}],[\"通常为\",{\"1\":{\"209\":1,\"407\":1}}],[\"通常需要结合多种方法来定位和解决问题\",{\"1\":{\"204\":1,\"402\":1}}],[\"通常只在调试模式下显示\",{\"1\":{\"204\":1,\"402\":1}}],[\"通常会显示在控制台的错误区域\",{\"1\":{\"204\":1,\"402\":1}}],[\"通常会返回\",{\"1\":{\"109\":1,\"112\":1,\"307\":1,\"310\":1}}],[\"通常使用css的<span\",{\"1\":{\"193\":1,\"391\":1}}],[\"通常在服务器生成html或在文档加载时由javascript动态生成内容时使用\",{\"1\":{\"184\":1,\"382\":1}}],[\"通常提到事件的三个基本要素\",{\"1\":{\"162\":1,\"360\":1}}],[\"通常表示为<span\",{\"1\":{\"160\":1,\"358\":1}}],[\"通常是一个匿名函数\",{\"1\":{\"126\":1,\"324\":1}}],[\"通常\",{\"1\":{\"113\":1,\"311\":1}}],[\"通常用于表示未初始化或不存在的变量\",{\"1\":{\"112\":1,\"310\":1}}],[\"通常用于表示空或无效的对象引用\",{\"1\":{\"112\":1,\"310\":1}}],[\"通常推荐使用\",{\"1\":{\"107\":1,\"305\":1}}],[\"通常指的是使用<span\",{\"1\":{\"88\":1,\"286\":1}}],[\"通过不同的渲染规则\",{\"1\":{\"214\":1,\"412\":1}}],[\"通过对应的渲染器\",{\"1\":{\"214\":1,\"412\":1}}],[\"通过消息完成\",{\"1\":{\"206\":1,\"404\":1}}],[\"通过代码审查来发现潜在的问题\",{\"1\":{\"204\":1,\"402\":1}}],[\"通过提前加载图片\",{\"1\":{\"196\":1,\"394\":1}}],[\"通过监听滚动事件和计算元素的位置来实现\",{\"1\":{\"195\":1,\"393\":1}}],[\"通过监听鼠标事件来控制元素的移动\",{\"1\":{\"193\":1,\"391\":1}}],[\"通过计算鼠标移动的距离来更新元素的位置\",{\"1\":{\"189\":1,\"387\":1}}],[\"通过在<span\",{\"1\":{\"155\":1,\"353\":1}}],[\"通过理解事件冒泡的工作原理\",{\"1\":{\"148\":1,\"346\":1}}],[\"通过直接访问dom元素对象的属性来操作property\",{\"1\":{\"129\":1,\"327\":1}}],[\"通过getattribute\",{\"1\":{\"129\":1,\"327\":1}}],[\"通过闭包可以延长作用域链\",{\"1\":{\"127\":1,\"325\":1}}],[\"通过这些方法\",{\"1\":{\"121\":1,\"319\":1}}],[\"通过修改原型对象\",{\"1\":{\"92\":1,\"290\":1}}],[\"通过\",{\"1\":{\"78\":1,\"214\":1,\"276\":1,\"412\":1}}],[\"通过将\",{\"1\":{\"73\":1,\"271\":1}}],[\"通过设置父元素为\",{\"1\":{\"62\":1,\"260\":1}}],[\"根据规则为对应的元素添加属性和事件\",{\"1\":{\"214\":1,\"412\":1}}],[\"根据返回值判断\",{\"1\":{\"203\":2,\"401\":2}}],[\"根据构造函数的执行逻辑\",{\"1\":{\"88\":1,\"286\":1}}],[\"根元素\",{\"1\":{\"65\":1,\"263\":1}}],[\"指令的\",{\"1\":{\"223\":1,\"421\":1}}],[\"指示事件是否可以被取消\",{\"1\":{\"160\":1,\"358\":1}}],[\"指示事件是否冒泡\",{\"1\":{\"160\":1,\"358\":1}}],[\"指向新对象\",{\"1\":{\"203\":1,\"401\":1}}],[\"指向一个对象\",{\"1\":{\"92\":1,\"290\":1}}],[\"指向函数本身\",{\"1\":{\"90\":1,\"288\":1}}],[\"指向\",{\"1\":{\"89\":1,\"92\":1,\"287\":1,\"290\":1}}],[\"指向构造函数的prototype属性\",{\"1\":{\"88\":1,\"286\":1}}],[\"指定元素在主轴的大小\",{\"1\":{\"72\":1,\"270\":1}}],[\"相当于移动了节点\",{\"1\":{\"137\":1,\"335\":1}}],[\"相当于创建一个\",{\"1\":{\"88\":1,\"286\":1}}],[\"相等运算符\",{\"0\":{\"106\":1,\"304\":1}}],[\"相关的属性\",{\"1\":{\"73\":1,\"271\":1}}],[\"相关配置文档请见\",{\"1\":{\"0\":1}}],[\"定时器可能会延迟执行\",{\"1\":{\"177\":1,\"375\":1}}],[\"定义了一个\",{\"1\":{\"179\":2,\"377\":2}}],[\"定义一个递归函数\",{\"1\":{\"178\":1,\"376\":1}}],[\"定义一个key\",{\"1\":{\"178\":1,\"376\":1}}],[\"定义一个事件处理器函数\",{\"1\":{\"164\":1,\"362\":1}}],[\"定义一个类\",{\"1\":{\"88\":1,\"286\":1}}],[\"定义\",{\"1\":{\"100\":1,\"101\":1,\"102\":1,\"110\":1,\"111\":1,\"130\":1,\"131\":1,\"298\":1,\"299\":1,\"300\":1,\"308\":1,\"309\":1,\"328\":1,\"329\":1}}],[\"定义静态方法\",{\"1\":{\"96\":1,\"294\":1}}],[\"定义静态属性\",{\"1\":{\"96\":1,\"294\":1}}],[\"定义静态属性和方法\",{\"1\":{\"96\":1,\"294\":1}}],[\"定义方法\",{\"1\":{\"96\":1,\"294\":1}}],[\"定义属性\",{\"1\":{\"96\":1,\"294\":1}}],[\"定义在一个函数内部的函数\",{\"1\":{\"88\":1,\"286\":1}}],[\"定位等\",{\"1\":{\"60\":1,\"258\":1}}],[\"检测数组的所有元素是否都通过了测试\",{\"1\":{\"87\":1,\"285\":1}}],[\"检测数组中至少有一个元素通过测试\",{\"1\":{\"87\":1,\"285\":1}}],[\"提高用户体验\",{\"1\":{\"196\":1,\"394\":1}}],[\"提高性能\",{\"1\":{\"195\":1,\"217\":1,\"393\":1,\"415\":1}}],[\"提供明确的用户许可请求\",{\"1\":{\"210\":1,\"408\":1}}],[\"提供的\",{\"1\":{\"100\":1,\"298\":1}}],[\"提供了更好的类型推断和类型检查\",{\"1\":{\"219\":1,\"417\":1}}],[\"提供了更灵活的自定义渲染器\",{\"1\":{\"219\":1,\"417\":1}}],[\"提供了更全面的结果\",{\"1\":{\"83\":1,\"281\":1}}],[\"提供了\",{\"1\":{\"209\":1,\"219\":1,\"407\":1,\"417\":1}}],[\"提供了元素检查\",{\"1\":{\"204\":1,\"402\":1}}],[\"提供了特定的功能\",{\"1\":{\"101\":1,\"299\":1}}],[\"提供了多种方法\",{\"1\":{\"87\":1,\"285\":1}}],[\"提供了多种解决方案\",{\"1\":{\"60\":1,\"258\":1}}],[\"提取原数组的一部分\",{\"1\":{\"87\":1,\"285\":1}}],[\"其值为字符串\",{\"1\":{\"133\":2,\"331\":2}}],[\"其值为\",{\"1\":{\"123\":1,\"321\":1}}],[\"其他常用方法\",{\"1\":{\"87\":1,\"285\":1}}],[\"其他省略\",{\"1\":{\"55\":1,\"57\":2,\"253\":1,\"255\":2}}],[\"其元素是原数组元素经过回调函数处理后的结果\",{\"1\":{\"87\":1,\"285\":1}}],[\"增加元素\",{\"1\":{\"87\":1,\"285\":1}}],[\"增删改方法\",{\"0\":{\"87\":1,\"285\":1}}],[\"9\",{\"1\":{\"86\":1,\"284\":1}}],[\"9999px\",{\"1\":{\"73\":2,\"271\":2}}],[\"累加求和等\",{\"1\":{\"85\":1,\"283\":1}}],[\"空对象\",{\"1\":{\"88\":1,\"286\":1}}],[\"空对象转换后的结果是一个空的大括号<span\",{\"1\":{\"83\":1,\"281\":1}}],[\"空对象指的是一个对象没有任何可枚举的属性\",{\"1\":{\"83\":1,\"281\":1}}],[\"返回到对应name的页面\",{\"1\":{\"228\":1,\"426\":1}}],[\"返回false用于取消导航\",{\"1\":{\"228\":1,\"426\":1}}],[\"返回浏览器\",{\"1\":{\"209\":1,\"407\":1}}],[\"返回浏览器的\",{\"1\":{\"209\":3,\"407\":3}}],[\"返回用户的\",{\"1\":{\"209\":1,\"407\":1}}],[\"返回运行浏览器的\",{\"1\":{\"209\":1,\"407\":1}}],[\"返回新创建的对象\",{\"1\":{\"203\":1,\"401\":1}}],[\"返回的\",{\"1\":{\"180\":1,\"378\":1}}],[\"返回key\",{\"1\":{\"178\":1,\"376\":1}}],[\"返回\",{\"1\":{\"110\":1,\"112\":2,\"179\":1,\"209\":1,\"308\":1,\"310\":2,\"377\":1,\"407\":1}}],[\"返回初始创建的对象或构造函数的显式返回值\",{\"1\":{\"88\":1,\"286\":1}}],[\"返回数组中满足提供的测试函数的第一个元素的值\",{\"1\":{\"87\":1,\"285\":1}}],[\"返回一个遍历器对象\",{\"1\":{\"97\":1,\"295\":1}}],[\"返回一个新数组\",{\"1\":{\"87\":1,\"285\":1}}],[\"返回一个数组\",{\"1\":{\"79\":1,\"277\":1}}],[\"返回每个元素的平方\",{\"1\":{\"86\":1,\"284\":1}}],[\"返回对象自身的所有属性键\",{\"1\":{\"83\":1,\"281\":1}}],[\"返回对象自身的所有属性名\",{\"1\":{\"83\":1,\"281\":1}}],[\"那么这个按钮元素就是事件的目标\",{\"1\":{\"162\":1,\"360\":1}}],[\"那么这两个方法都会返回一个空数组\",{\"1\":{\"82\":1,\"280\":1}}],[\"那么该对象就可以调用\",{\"1\":{\"97\":1,\"295\":1}}],[\"那么还有最后一个问题就是\",{\"1\":{\"94\":1,\"292\":1}}],[\"那么对象为空\",{\"1\":{\"83\":1,\"281\":1}}],[\"那么\",{\"1\":{\"83\":1,\"281\":1}}],[\"那么两个div就不属于同一个bfc\",{\"1\":{\"67\":1,\"265\":1}}],[\"你必须在主线程中执行这些操作\",{\"1\":{\"207\":1,\"405\":1}}],[\"你会更熟练地使用这些工具和技巧\",{\"1\":{\"204\":1,\"402\":1}}],[\"你可能不希望事件继续向上传播\",{\"1\":{\"146\":1,\"344\":1}}],[\"你可能需要根据具体情况选择合适的方法来操作dom\",{\"1\":{\"141\":1,\"339\":1}}],[\"你可以通过在<span\",{\"1\":{\"152\":1,\"350\":1}}],[\"你可以更有效地控制事件处理逻辑\",{\"1\":{\"148\":1,\"346\":1}}],[\"你可以在捕获阶段注册事件处理器\",{\"1\":{\"155\":1,\"353\":1}}],[\"你可以在按钮的点击事件处理函数中调用<span\",{\"1\":{\"147\":1,\"345\":1}}],[\"你可以在类数组\",{\"1\":{\"121\":1,\"319\":1}}],[\"你可以使用\",{\"1\":{\"207\":2,\"405\":2}}],[\"你可以使用<span\",{\"1\":{\"146\":1,\"344\":1}}],[\"你可以使用这个新创建的对象来调用它的方法\",{\"1\":{\"88\":1,\"286\":1}}],[\"你可以使用这两个方法中的任何一个来获取对象的所有自身属性键\",{\"1\":{\"82\":1,\"280\":1}}],[\"你直接上来就终极版代码安排\",{\"1\":{\"94\":1,\"292\":1}}],[\"你实际上是在创建一个新的\",{\"1\":{\"88\":1,\"286\":1}}],[\"你应该在页面前端设置\",{\"1\":{\"0\":1}}],[\"要注意防范xss攻击\",{\"1\":{\"187\":1,\"385\":1}}],[\"要重复执行的函数\",{\"1\":{\"179\":1,\"377\":1}}],[\"要执行的函数\",{\"1\":{\"173\":1,\"174\":1,\"371\":1,\"372\":1}}],[\"要执行的函数或代码\",{\"1\":{\"162\":1,\"360\":1}}],[\"要判断一个对象是否为空\",{\"1\":{\"82\":1,\"280\":1}}],[\"要使用此布局\",{\"1\":{\"0\":1}}],[\"仍然能够获取到它\",{\"1\":{\"81\":1,\"279\":1}}],[\"中扮演着关键角色\",{\"1\":{\"222\":1,\"420\":1}}],[\"中与响应式系统相关的几个重要函数\",{\"1\":{\"222\":1,\"420\":1}}],[\"中\",{\"1\":{\"98\":1,\"203\":1,\"211\":1,\"222\":1,\"296\":1,\"401\":1,\"409\":1,\"420\":1}}],[\"中有抽象类和方法的概念\",{\"1\":{\"96\":1,\"294\":1}}],[\"中有类型检查\",{\"1\":{\"96\":1,\"294\":1}}],[\"中只有\",{\"1\":{\"96\":1,\"294\":1}}],[\"中只能有一个构造函数\",{\"1\":{\"96\":1,\"294\":1}}],[\"中类\",{\"1\":{\"96\":1,\"294\":1}}],[\"中的继承有什么区别\",{\"1\":{\"96\":1,\"294\":1}}],[\"中的继承了\",{\"1\":{\"94\":1,\"292\":1}}],[\"中的类有什么区别\",{\"1\":{\"96\":1,\"294\":1}}],[\"中的类的区别了\",{\"1\":{\"96\":1,\"294\":1}}],[\"中的类和\",{\"1\":{\"96\":2,\"294\":2}}],[\"中使用\",{\"1\":{\"96\":1,\"294\":1}}],[\"中每个对象都有一个内置属性\",{\"1\":{\"92\":1,\"290\":1}}],[\"中用于获取对象自身属性的方法\",{\"1\":{\"80\":1,\"278\":1}}],[\"中间自适应\",{\"1\":{\"70\":1,\"268\":1}}],[\"中间自适应的效果\",{\"1\":{\"70\":1,\"268\":1}}],[\"判断构造函数的返回值\",{\"1\":{\"203\":1,\"401\":1}}],[\"判断空对象\",{\"0\":{\"80\":1,\"278\":1},\"1\":{\"83\":1,\"281\":1}}],[\"判断两个对象是否相等或者判断一个对象是否为空\",{\"1\":{\"78\":1,\"276\":1}}],[\"判断两个对象是否相等可以通过以下几种主要方式\",{\"1\":{\"78\":1,\"276\":1}}],[\"判断两个对象相等\",{\"1\":{\"78\":1,\"276\":1}}],[\"可维护性和开发体验上都有了显著的提升\",{\"1\":{\"219\":1,\"417\":1}}],[\"可能会导致性能问题\",{\"1\":{\"186\":1,\"384\":1}}],[\"可能会导致执行重叠\",{\"1\":{\"177\":1,\"375\":1}}],[\"可能带来的一些问题\",{\"1\":{\"178\":1,\"376\":1}}],[\"可选参数\",{\"1\":{\"173\":1,\"174\":1,\"371\":1,\"372\":1}}],[\"可打断冒泡\",{\"1\":{\"158\":1,\"356\":1}}],[\"可别再翻车了\",{\"1\":{\"94\":1,\"292\":1}}],[\"可枚举\",{\"1\":{\"79\":1,\"277\":1}}],[\"可以直接访问\",{\"1\":{\"223\":1,\"421\":1}}],[\"可以为元素添加多个事件处理器\",{\"1\":{\"211\":1,\"409\":1}}],[\"可以提高性能\",{\"1\":{\"207\":1,\"405\":1}}],[\"可以帮助你理解代码的执行流程\",{\"1\":{\"204\":1,\"402\":1}}],[\"可以根据页面的具体需求和用户行为来决定使用懒加载\",{\"1\":{\"197\":1,\"395\":1}}],[\"可以根据具体需求选择使用原生javascript或html5拖放api来实现元素拖动\",{\"1\":{\"193\":1,\"391\":1}}],[\"可以减少用户实际看到图片时的加载时间\",{\"1\":{\"196\":1,\"394\":1}}],[\"可以减少很多由于类型转换导致的bug\",{\"1\":{\"108\":1,\"306\":1}}],[\"可以自动实现图片懒加载\",{\"1\":{\"195\":1,\"393\":1}}],[\"可以自定义更多的行为和样式\",{\"1\":{\"193\":1,\"391\":1}}],[\"可以更方便地实现拖动功能\",{\"1\":{\"191\":1,\"389\":1}}],[\"可以导致跨站脚本\",{\"1\":{\"186\":1,\"384\":1}}],[\"可以用来读取或设置元素内的html内容\",{\"1\":{\"185\":1,\"383\":1}}],[\"可以用来确定元素的内部尺寸\",{\"1\":{\"169\":1,\"367\":1}}],[\"可以用于以后取消定时任务\",{\"1\":{\"179\":1,\"377\":1}}],[\"可以调用事件对象的方法来控制事件行为\",{\"1\":{\"164\":1,\"362\":1}}],[\"可以在任何时候使用\",{\"1\":{\"185\":1,\"383\":1}}],[\"可以在父元素上设置一个事件处理程序来管理所有子元素的同一类事件\",{\"1\":{\"159\":1,\"357\":1}}],[\"可以在不知道元素宽高的情况下实现垂直居中\",{\"1\":{\"62\":1,\"260\":1}}],[\"可以动态添加和移除\",{\"1\":{\"159\":1,\"357\":1}}],[\"可以简化事件处理代码\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"可以将组件的子节点传输到\",{\"1\":{\"219\":1,\"417\":1}}],[\"可以将第三个参数设置为\",{\"1\":{\"152\":1,\"350\":1}}],[\"可以将元素的\",{\"1\":{\"62\":1,\"260\":1}}],[\"可以轻松地复制数组\",{\"1\":{\"128\":1,\"326\":1}}],[\"可以先复制一份数组再进行排序\",{\"1\":{\"128\":1,\"326\":1}}],[\"可以给所有的实例进行属性的增加或修改\",{\"1\":{\"92\":1,\"290\":1}}],[\"可以通过原生javascript或html5的拖放api来实现\",{\"1\":{\"188\":1,\"386\":1}}],[\"可以通过点符号\",{\"1\":{\"131\":1,\"329\":1}}],[\"可以通过<span\",{\"1\":{\"130\":1,\"328\":1}}],[\"可以通过创建的实例调用\",{\"1\":{\"88\":1,\"286\":1}}],[\"可以通过设置<span\",{\"1\":{\"159\":1,\"357\":1}}],[\"可以通过设置\",{\"1\":{\"62\":1,\"260\":1}}],[\"可以通过设置父元素的高度等于行高\",{\"1\":{\"61\":1,\"259\":1}}],[\"可以被所有实例调用\",{\"1\":{\"88\":1,\"286\":1}}],[\"可以比较两个对象的内容是否相等\",{\"1\":{\"78\":1,\"276\":1}}],[\"可以隐藏元素内溢出的内容\",{\"1\":{\"73\":1,\"271\":1}}],[\"可以使用这两个属性\",{\"1\":{\"170\":1,\"368\":1}}],[\"可以使用\",{\"1\":{\"92\":1,\"96\":1,\"118\":1,\"177\":1,\"211\":1,\"223\":1,\"224\":1,\"290\":1,\"294\":1,\"316\":1,\"375\":1,\"409\":1,\"421\":1,\"422\":1}}],[\"可以使用<span\",{\"1\":{\"83\":1,\"148\":1,\"154\":1,\"159\":1,\"281\":1,\"346\":1,\"352\":1,\"357\":1}}],[\"可以使用表格单元格布局\",{\"1\":{\"61\":1,\"259\":1}}],[\"可以使元素被其他元素覆盖\",{\"1\":{\"73\":1,\"271\":1}}],[\"可以等同\",{\"1\":{\"72\":1,\"270\":1}}],[\"可以实现垂直居中\",{\"1\":{\"62\":1,\"260\":1}}],[\"可以设置元素的\",{\"1\":{\"62\":1,\"260\":1}}],[\"可以设置父元素为\",{\"1\":{\"61\":1,\"259\":1}}],[\"所以每个定时器都是唯一的\",{\"1\":{\"182\":1,\"380\":1}}],[\"所以\",{\"1\":{\"126\":1,\"324\":1}}],[\"所以在\",{\"1\":{\"123\":1,\"124\":1,\"321\":1,\"322\":1}}],[\"所以你别看概念上那么继承方式那么多\",{\"1\":{\"94\":1,\"292\":1}}],[\"所以flex\",{\"1\":{\"72\":1,\"270\":1}}],[\"所有基于该原型的实例都会自动继承这些属性和方法\",{\"1\":{\"92\":1,\"290\":1}}],[\"所有属性名\",{\"1\":{\"79\":1,\"277\":1}}],[\"kimi\",{\"1\":{\"203\":2,\"401\":2}}],[\"key\",{\"1\":{\"83\":2,\"178\":7,\"220\":15,\"281\":2,\"376\":7,\"418\":15}}],[\"keys\",{\"1\":{\"79\":2,\"83\":2,\"121\":3,\"277\":2,\"281\":2,\"319\":3}}],[\"know\",{\"1\":{\"23\":1,\"24\":1}}],[\"包括虚拟\",{\"1\":{\"219\":1,\"417\":1}}],[\"包括二进制数据\",{\"1\":{\"207\":1,\"405\":1}}],[\"包括请求的资源\",{\"1\":{\"204\":1,\"402\":1}}],[\"包括但不限于元素检查器\",{\"1\":{\"204\":1,\"402\":1}}],[\"包括子元素\",{\"1\":{\"185\":1,\"383\":1}}],[\"包括它距离页面左上角的距离\",{\"1\":{\"165\":1,\"363\":1}}],[\"包括添加\",{\"1\":{\"134\":1,\"332\":1}}],[\"包括\",{\"1\":{\"128\":1,\"326\":1}}],[\"包括ecmascript规范定义的对象和宿主环境提供的对象\",{\"1\":{\"102\":1,\"300\":1}}],[\"包括内置对象和宿主对象\",{\"1\":{\"102\":1,\"103\":1,\"300\":1,\"301\":1}}],[\"包括不可枚举的属性和原型链上的属性\",{\"1\":{\"83\":1,\"281\":1}}],[\"包括不可枚举的属性和符号属性\",{\"1\":{\"79\":1,\"80\":1,\"82\":1,\"83\":1,\"277\":1,\"278\":1,\"280\":1,\"281\":1}}],[\"包括不可枚举的属性\",{\"1\":{\"83\":1,\"281\":1}}],[\"包含\",{\"1\":{\"209\":1,\"407\":1}}],[\"包含<span\",{\"1\":{\"167\":1,\"365\":1}}],[\"包含原数组的元素和\",{\"1\":{\"87\":1,\"285\":1}}],[\"包含通过测试的所有元素\",{\"1\":{\"87\":1,\"285\":1}}],[\"包含对象自身的所有属性名\",{\"1\":{\"81\":1,\"279\":1}}],[\"包含对象自身的所有属性键\",{\"1\":{\"79\":1,\"82\":1,\"277\":1,\"280\":1}}],[\"包含对象自身的\",{\"1\":{\"79\":1,\"277\":1}}],[\"包含symbol\",{\"1\":{\"79\":1,\"277\":1}}],[\"包含可枚举\",{\"1\":{\"79\":1,\"277\":1}}],[\"强烈推荐\",{\"1\":{\"79\":1,\"277\":1}}],[\"则每次鼠标指针移动到子元素的不同位置时\",{\"1\":{\"202\":1,\"400\":1}}],[\"则使用\",{\"1\":{\"180\":1,\"378\":1}}],[\"则返回该对象\",{\"1\":{\"203\":1,\"401\":1}}],[\"则返回\",{\"1\":{\"168\":1,\"366\":1}}],[\"则返回最近的<span\",{\"1\":{\"168\":1,\"366\":1}}],[\"则返回<span\",{\"1\":{\"78\":1,\"276\":1}}],[\"则在捕获阶段触发\",{\"1\":{\"159\":1,\"357\":1}}],[\"则对象为空\",{\"1\":{\"83\":2,\"281\":2}}],[\"则不会出现外边距重叠问题\",{\"1\":{\"67\":1,\"265\":1}}],[\"这在处理由\",{\"1\":{\"225\":1,\"423\":1}}],[\"这在事件委托中特别有用\",{\"1\":{\"160\":1,\"358\":1}}],[\"这使得\",{\"1\":{\"219\":1,\"222\":1,\"417\":1,\"420\":1}}],[\"这种算法的改进是vue\",{\"1\":{\"218\":1,\"416\":1}}],[\"这种方式的缺点是同一个元素的同一个事件只能绑定一个处理函数\",{\"1\":{\"211\":1,\"409\":1}}],[\"这种方法相比双端diff算法\",{\"1\":{\"217\":1,\"415\":1}}],[\"这种方法可以进一步减少不必要的dom操作\",{\"1\":{\"217\":1,\"415\":1}}],[\"这种方法可以减少不必要的dom操作\",{\"1\":{\"216\":1,\"414\":1}}],[\"这种方法可以避免\",{\"1\":{\"178\":1,\"376\":1}}],[\"这种方法比直接使用\",{\"1\":{\"182\":1,\"380\":1}}],[\"这种方法确保每个元素都有相同的概率出现在数组的任何位置\",{\"1\":{\"128\":1,\"326\":1}}],[\"这种方法适用于简单对象\",{\"1\":{\"78\":1,\"276\":1}}],[\"这种机制是双向的\",{\"1\":{\"207\":1,\"405\":1}}],[\"这种隔离确保了\",{\"1\":{\"207\":1,\"405\":1}}],[\"这可以是自我审查或者团队成员之间的相互审查\",{\"1\":{\"204\":1,\"402\":1}}],[\"这里是内容\",{\"1\":{\"232\":1,\"233\":1,\"236\":1,\"237\":1,\"240\":1,\"241\":1,\"244\":1,\"245\":1,\"248\":1,\"249\":1,\"430\":1,\"431\":1,\"434\":1,\"435\":1,\"438\":1,\"439\":1,\"442\":1,\"443\":1,\"446\":1,\"447\":1}}],[\"这里的worker\",{\"1\":{\"207\":1,\"405\":1}}],[\"这里有一个语法错误\",{\"1\":{\"203\":1,\"401\":1}}],[\"这里面其实应用到了\",{\"1\":{\"93\":1,\"291\":1}}],[\"这段代码是一个自定义的构造函数\",{\"1\":{\"203\":1,\"401\":1}}],[\"这条消息会每2秒打印一次\",{\"1\":{\"181\":1,\"379\":1}}],[\"这对于执行动态布局\",{\"1\":{\"171\":1,\"369\":1}}],[\"这两个属性返回元素的边框宽度\",{\"1\":{\"169\":1,\"367\":1}}],[\"这两个属性返回元素相对于其定位父元素\",{\"1\":{\"166\":1,\"364\":1}}],[\"这两个方法都可以帮助你判断一个对象是否为空\",{\"1\":{\"80\":1,\"278\":1}}],[\"这有助于减少内存消耗并简化代码\",{\"1\":{\"159\":1,\"357\":1}}],[\"这称为事件委托\",{\"1\":{\"159\":1,\"357\":1}}],[\"这是\",{\"1\":{\"211\":1,\"409\":1}}],[\"这是最古老的事件模型\",{\"1\":{\"211\":1,\"409\":1}}],[\"这是当事件发生时\",{\"1\":{\"162\":1,\"360\":1}}],[\"这是触发事件的dom元素\",{\"1\":{\"162\":1,\"360\":1}}],[\"这是触发事件的具体动作\",{\"1\":{\"162\":1,\"360\":1}}],[\"这是现代浏览器使用的事件模型\",{\"1\":{\"159\":1,\"357\":1}}],[\"这是一种新的编写组件逻辑的方式\",{\"1\":{\"219\":1,\"417\":1}}],[\"这是一种更高效的算法\",{\"1\":{\"217\":1,\"415\":1}}],[\"这是一些文本\",{\"1\":{\"140\":1,\"338\":1}}],[\"这是一个更现代和更高效的方法\",{\"1\":{\"195\":1,\"393\":1}}],[\"这是一个历史遗留问题\",{\"1\":{\"112\":1,\"310\":1}}],[\"这是一个无障碍性\",{\"1\":{\"73\":1,\"271\":1}}],[\"这是一个博客主页的案例\",{\"1\":{\"0\":1}}],[\"这允许你在事件到达目标元素之前进行干预\",{\"1\":{\"155\":1,\"353\":1}}],[\"这将阻止事件进一步向下传播到目标元素或任何子元素\",{\"1\":{\"154\":1,\"352\":1}}],[\"这发生在事件到达目标元素之前\",{\"1\":{\"150\":1,\"348\":1}}],[\"这意味着在最终的构建中可以移除未使用的代码\",{\"1\":{\"219\":1,\"417\":1}}],[\"这意味着在事件到达目标元素之前\",{\"1\":{\"149\":1,\"347\":1}}],[\"这意味着它们有自己的变量和全局对象\",{\"1\":{\"207\":1,\"405\":1}}],[\"这意味着你可以在不阻塞用户界面的情况下执行计算密集型任务\",{\"1\":{\"207\":1,\"405\":1}}],[\"这意味着变量可以在声明之前就被访问\",{\"1\":{\"123\":1,\"321\":1}}],[\"这意味着当你比较两个对象时\",{\"1\":{\"78\":1,\"276\":1}}],[\"这些函数是\",{\"1\":{\"226\":1,\"424\":1}}],[\"这些改进使得\",{\"1\":{\"219\":1,\"417\":1}}],[\"这些方法可以帮助你确定元素在页面上的位置\",{\"1\":{\"171\":1,\"369\":1}}],[\"这些方法可以帮助你确定元素在页面上的确切位置\",{\"1\":{\"165\":1,\"363\":1}}],[\"这些方法只能检测对象是否有可枚举的属性\",{\"1\":{\"83\":1,\"281\":1}}],[\"这些是操作dom结构的基本方法\",{\"1\":{\"141\":1,\"339\":1}}],[\"这些对象提供了核心功能\",{\"1\":{\"101\":1,\"299\":1}}],[\"这也是一个面试题目\",{\"1\":{\"93\":1,\"291\":1}}],[\"这样新对象就可以继承构造函数的原型上的属性和方法\",{\"1\":{\"203\":1,\"401\":1}}],[\"这样\",{\"1\":{\"161\":1,\"203\":1,\"224\":1,\"359\":1,\"401\":1,\"422\":1}}],[\"这样可以减少http请求\",{\"1\":{\"196\":1,\"394\":1}}],[\"这样可以处理从元素外部移动到元素内部的情况\",{\"1\":{\"193\":1,\"391\":1}}],[\"这样可以在\",{\"1\":{\"179\":1,\"377\":1}}],[\"这样可以在不修改每个实例的情况下\",{\"1\":{\"92\":1,\"290\":1}}],[\"这样可以避免很多由于类型转换导致的意外结果\",{\"1\":{\"107\":1,\"305\":1}}],[\"这样就构成了原型链\",{\"1\":{\"92\":1,\"290\":1}}],[\"这个函数用于取消由\",{\"1\":{\"180\":1,\"378\":1}}],[\"这个函数接收两个参数\",{\"1\":{\"179\":1,\"377\":1}}],[\"这个函数会直接修改传入的数组\",{\"1\":{\"128\":1,\"326\":1}}],[\"这个属性返回最近的含有定位\",{\"1\":{\"168\":1,\"366\":1}}],[\"这个方法返回元素的大小以及其相对于视口的位置\",{\"1\":{\"167\":1,\"365\":1}}],[\"这个方法返回一个给定对象自身可枚举属性的键值对数组\",{\"1\":{\"83\":1,\"281\":1}}],[\"这个方法返回一个包含对象所有自身可枚举属性的数组\",{\"1\":{\"83\":1,\"281\":1}}],[\"这个处理器接收一个事件对象作为参数\",{\"1\":{\"164\":1,\"362\":1}}],[\"这个事件会冒泡到父元素\",{\"1\":{\"161\":1,\"359\":1}}],[\"这个事件会从这个元素开始\",{\"1\":{\"143\":1,\"341\":1}}],[\"这个对象的\",{\"1\":{\"223\":1,\"421\":1}}],[\"这个对象将作为构造函数的实例\",{\"1\":{\"203\":1,\"401\":1}}],[\"这个对象作为参数自动传递给事件处理器函数\",{\"1\":{\"163\":1,\"361\":1}}],[\"这个对象作为参数传递给事件处理函数\",{\"1\":{\"159\":1,\"357\":1}}],[\"这个对象包含了关于事件的详细信息\",{\"1\":{\"160\":1,\"358\":1}}],[\"这个对象会作为执行new构造函数之后返回的对象实例\",{\"1\":{\"88\":1,\"286\":1}}],[\"这个算法可以确保每个元素都有相同的概率出现在数组的任何位置\",{\"1\":{\"128\":1,\"326\":1}}],[\"这个查找过程中又上下文对象组成的链表结构就是作用域链\",{\"1\":{\"127\":1,\"325\":1}}],[\"这个术语可能与\",{\"1\":{\"102\":1,\"300\":1}}],[\"这个倒是不常用\",{\"1\":{\"96\":1,\"294\":1}}],[\"这个时候肯定会问\",{\"1\":{\"96\":1,\"294\":1}}],[\"这个\",{\"1\":{\"92\":1,\"179\":1,\"180\":1,\"290\":1,\"377\":1,\"378\":1}}],[\"这个指向的对象也有内置属性\",{\"1\":{\"92\":1,\"290\":1}}],[\"这会检查两个对象是否是同一个引用\",{\"1\":{\"78\":1,\"276\":1}}],[\"涉及到几个不同的概念和方法\",{\"1\":{\"78\":1,\"276\":1}}],[\"适用于执行那些需要大量计算的任务\",{\"1\":{\"207\":1,\"405\":1}}],[\"适用于关键路径上的资源\",{\"1\":{\"197\":1,\"395\":1}}],[\"适用于图片数量众多且不是所有图片都会立即需要的场景\",{\"1\":{\"197\":1,\"395\":1}}],[\"适用于所有类型的变量声明\",{\"1\":{\"125\":1,\"323\":1}}],[\"适用于复杂对象\",{\"1\":{\"78\":1,\"276\":1}}],[\"适用于简单对象\",{\"1\":{\"78\":1,\"276\":1}}],[\"递归地比较对象的属性\",{\"1\":{\"78\":1,\"276\":1}}],[\"深度比较\",{\"1\":{\"78\":1,\"276\":1}}],[\"方便调试\",{\"1\":{\"204\":1,\"402\":1}}],[\"方法来移除事件处理器\",{\"1\":{\"211\":1,\"409\":1}}],[\"方法来绑定事件处理器\",{\"1\":{\"211\":1,\"409\":1}}],[\"方法来终止它\",{\"1\":{\"207\":1,\"405\":1}}],[\"方法移除事件处理器\",{\"1\":{\"211\":1,\"409\":1}}],[\"方法发送消息\",{\"1\":{\"207\":1,\"405\":1}}],[\"方法和confirm\",{\"1\":{\"206\":1,\"404\":1}}],[\"方法可以用来向文档中写入字符串参数\",{\"1\":{\"184\":1,\"382\":1}}],[\"方法可以操作attribute\",{\"1\":{\"129\":1,\"327\":1}}],[\"方法分别格式化日期和时间\",{\"1\":{\"114\":1,\"312\":1}}],[\"方法结合正则表达式\",{\"1\":{\"114\":1,\"312\":1}}],[\"方法用于将日期对象转换为易读的字符串格式\",{\"1\":{\"114\":1,\"312\":1}}],[\"方法也遍历数组的每个元素\",{\"1\":{\"86\":1,\"284\":1}}],[\"方法会对数组的每个元素执行一次提供的函数\",{\"1\":{\"85\":1,\"283\":1}}],[\"方法\",{\"0\":{\"85\":1,\"86\":1,\"283\":1,\"284\":1},\"1\":{\"97\":1,\"206\":1,\"207\":1,\"211\":1,\"295\":1,\"404\":1,\"405\":1,\"409\":1}}],[\"方法返回一个数组\",{\"1\":{\"79\":1,\"81\":1,\"82\":1,\"277\":1,\"279\":1,\"280\":1}}],[\"方法比较对象的字符串表示\",{\"1\":{\"78\":1,\"276\":1}}],[\"方案总结\",{\"1\":{\"54\":2,\"252\":2}}],[\"字符串化\",{\"1\":{\"78\":1,\"276\":1}}],[\"仅适用于比较对象引用\",{\"1\":{\"78\":1,\"276\":1}}],[\"四\",{\"1\":{\"76\":1,\"274\":1}}],[\"$\",{\"1\":{\"88\":2,\"171\":2,\"203\":1,\"286\":2,\"369\":2,\"401\":1}}],[\"$1\",{\"1\":{\"76\":1,\"274\":1}}],[\"$$\",{\"1\":{\"32\":2}}],[\"只在最初进入的元素上触发一次\",{\"1\":{\"201\":1,\"399\":1}}],[\"只有依赖数据发生变化\",{\"1\":{\"227\":1,\"425\":1}}],[\"只有鼠标指引事件所绑定的元素时\",{\"1\":{\"198\":1,\"396\":1}}],[\"只有在你明确需要进行类型转换时\",{\"1\":{\"107\":1,\"305\":1}}],[\"只要鼠标指计移入事件所绑定的元素或其子元素\",{\"1\":{\"198\":1,\"396\":1}}],[\"只能用于在加载文档的过程中写入内容\",{\"1\":{\"184\":1,\"382\":1}}],[\"只会打印\",{\"1\":{\"202\":1,\"400\":1}}],[\"只会触发按钮上的点击事件\",{\"1\":{\"147\":1,\"345\":1}}],[\"只会从上一级继承this\",{\"1\":{\"97\":1,\"295\":1}}],[\"只复制节点\",{\"1\":{\"139\":1,\"337\":1}}],[\"只适用于函数声明\",{\"1\":{\"125\":1,\"323\":1}}],[\"只比较值\",{\"1\":{\"106\":1,\"304\":1}}],[\"只保留具体类型\",{\"1\":{\"76\":1,\"274\":1}}],[\"只给其中一个兄弟元素设置外边距\",{\"1\":{\"71\":1,\"269\":1}}],[\"去掉object\",{\"1\":{\"76\":1,\"274\":1}}],[\"迭代器\",{\"1\":{\"75\":1,\"97\":1,\"273\":1,\"295\":1}}],[\"闭包和作用域\",{\"0\":{\"88\":1,\"286\":1},\"1\":{\"75\":1,\"273\":1}}],[\"改进了模板编译器\",{\"1\":{\"219\":1,\"417\":1}}],[\"改为\",{\"1\":{\"202\":1,\"400\":1}}],[\"改操作\",{\"1\":{\"87\":1,\"285\":1}}],[\"改\",{\"0\":{\"84\":1,\"282\":1},\"1\":{\"75\":1,\"273\":1}}],[\"删除指定位置的元素\",{\"1\":{\"87\":2,\"285\":2}}],[\"删除数组的第一个元素\",{\"1\":{\"87\":1,\"285\":1}}],[\"删除数组的最后一个元素\",{\"1\":{\"87\":1,\"285\":1}}],[\"删除元素\",{\"1\":{\"87\":1,\"285\":1}}],[\"删\",{\"0\":{\"84\":1,\"282\":1},\"1\":{\"75\":1,\"87\":1,\"273\":1,\"285\":1}}],[\"常用于动态更新页面的部分内容\",{\"1\":{\"185\":1,\"383\":1}}],[\"常用哪些方法去对数组进行增\",{\"0\":{\"84\":1,\"282\":1},\"1\":{\"75\":1,\"273\":1}}],[\"常见的类数组对象包括函数的\",{\"1\":{\"116\":1,\"314\":1}}],[\"常见的水平垂直居中实现方案\",{\"0\":{\"54\":1,\"252\":1}}],[\"是一种在两端同时进行对比的算法\",{\"1\":{\"216\":1,\"414\":1}}],[\"是一种在\",{\"1\":{\"207\":1,\"405\":1}}],[\"是一个用于创建响应式引用的函数\",{\"1\":{\"223\":1,\"421\":1}}],[\"是一个属性\",{\"1\":{\"185\":1,\"383\":1}}],[\"是一个只读属性\",{\"1\":{\"184\":1,\"382\":1}}],[\"是一个表示变量已声明但尚未赋值的特殊值\",{\"1\":{\"111\":1,\"309\":1}}],[\"是一个表示故意赋予的空值的对象\",{\"1\":{\"110\":1,\"308\":1}}],[\"是最常用的调试方法\",{\"1\":{\"204\":1,\"402\":1}}],[\"是否在线\",{\"1\":{\"209\":1,\"407\":1}}],[\"是否支持并启用了cookie\",{\"1\":{\"209\":1,\"407\":1}}],[\"是否发生错误\",{\"1\":{\"207\":1,\"405\":1}}],[\"是否可取消等\",{\"1\":{\"163\":1,\"361\":1}}],[\"是否需要执行复杂的条件检查等\",{\"1\":{\"87\":1,\"285\":1}}],[\"是否需要返回新数组\",{\"1\":{\"87\":1,\"285\":1}}],[\"是否需要保持可访问性\",{\"1\":{\"73\":1,\"271\":1}}],[\"是dom事件传播的另一个阶段\",{\"1\":{\"149\":1,\"347\":1}}],[\"是两个相关但不同的概念\",{\"1\":{\"129\":1,\"327\":1}}],[\"是两种优化网页性能的技术\",{\"1\":{\"194\":1,\"392\":1}}],[\"是两种不同的行为\",{\"1\":{\"122\":1,\"320\":1}}],[\"是两种表示\",{\"1\":{\"109\":1,\"307\":1}}],[\"是从0到\",{\"1\":{\"128\":1,\"326\":1}}],[\"是必要的\",{\"1\":{\"114\":1,\"312\":1}}],[\"是变量声明后未初始化的结果\",{\"1\":{\"112\":1,\"310\":1}}],[\"是显式赋值的结果\",{\"1\":{\"112\":1,\"310\":1}}],[\"是不同的类型\",{\"1\":{\"108\":1,\"306\":1}}],[\"是用于比较两个值的运算符\",{\"1\":{\"104\":1,\"302\":1}}],[\"是javascript语言的核心组成部分\",{\"1\":{\"103\":1,\"301\":1}}],[\"是javascript中用于数组遍历和元素处理的两个常用方法\",{\"1\":{\"84\":1,\"282\":1}}],[\"是与执行环境相关的概念\",{\"1\":{\"99\":1,\"297\":1}}],[\"是\",{\"1\":{\"80\":1,\"110\":1,\"111\":1,\"180\":1,\"222\":1,\"278\":1,\"308\":1,\"309\":1,\"378\":1,\"420\":1}}],[\"是哪些属性的缩写\",{\"0\":{\"72\":1,\"270\":1}}],[\"悬停等\",{\"1\":{\"73\":1,\"271\":1}}],[\"禁止元素响应指针事件\",{\"1\":{\"73\":1,\"271\":1}}],[\"忽略该元素\",{\"1\":{\"73\":1,\"271\":1}}],[\"或其他兼容性解决方案\",{\"1\":{\"211\":1,\"409\":1}}],[\"或其他深度比较库\",{\"1\":{\"78\":1,\"276\":1}}],[\"或方括号\",{\"1\":{\"131\":1,\"329\":1}}],[\"或额外的参数\",{\"1\":{\"87\":1,\"285\":1}}],[\"或者在\",{\"1\":{\"223\":1,\"421\":1}}],[\"或者在某些情况下\",{\"1\":{\"73\":1,\"271\":1}}],[\"或者\",{\"1\":{\"207\":1,\"405\":1}}],[\"或者相对于其父元素的位置\",{\"1\":{\"165\":1,\"363\":1}}],[\"或者使用\",{\"1\":{\"114\":1,\"312\":1}}],[\"或者遍历完完整的原型链\",{\"1\":{\"92\":1,\"290\":1}}],[\"或者reflect\",{\"1\":{\"80\":1,\"278\":1}}],[\"或者是否需要元素在某些情况下重新可见\",{\"1\":{\"73\":1,\"271\":1}}],[\"或\",{\"1\":{\"73\":4,\"87\":1,\"89\":1,\"207\":1,\"271\":4,\"285\":1,\"287\":1,\"405\":1}}],[\"它接受一个值作为参数\",{\"1\":{\"223\":1,\"421\":1}}],[\"它接收一个\",{\"1\":{\"180\":1,\"378\":1}}],[\"它通过预处理和最长递增子序列的构建\",{\"1\":{\"218\":1,\"416\":1}}],[\"它借鉴了纯文本diff算法的思想\",{\"1\":{\"217\":1,\"415\":1}}],[\"它从新旧两个虚拟dom列表的头部和尾部开始\",{\"1\":{\"216\":1,\"414\":1}}],[\"它允许你在后台线程中运行\",{\"1\":{\"207\":1,\"405\":1}}],[\"它允许事件在dom树中向上传播\",{\"1\":{\"148\":1,\"346\":1}}],[\"它所加载的脚本\",{\"1\":{\"206\":1,\"404\":1}}],[\"它模拟了\",{\"1\":{\"203\":1,\"401\":1}}],[\"它会自动清理资源\",{\"1\":{\"207\":1,\"405\":1}}],[\"它会替换该元素内部的所有内容\",{\"1\":{\"185\":1,\"383\":1}}],[\"它会将字符串参数写入文档的输出流中\",{\"1\":{\"184\":1,\"382\":1}}],[\"它会默认返回\",{\"1\":{\"112\":1,\"310\":1}}],[\"它会默认返回<span\",{\"1\":{\"109\":1,\"307\":1}}],[\"它返回指定元素内的html内容\",{\"1\":{\"185\":1,\"383\":1}}],[\"它返回当前文档的内容\",{\"1\":{\"184\":1,\"382\":1}}],[\"它返回的是一个矩形对象\",{\"1\":{\"167\":1,\"365\":1}}],[\"它使用\",{\"1\":{\"179\":1,\"377\":1}}],[\"它提供了更好的代码组织和复用性\",{\"1\":{\"219\":1,\"417\":1}}],[\"它提供了更灵活和强大的事件处理机制\",{\"1\":{\"159\":1,\"357\":1}}],[\"它提供了有关浏览器的信息\",{\"1\":{\"208\":1,\"406\":1}}],[\"它提供了关于事件的详细信息\",{\"1\":{\"163\":1,\"361\":1}}],[\"它利用了事件冒泡的原理\",{\"1\":{\"161\":1,\"359\":1}}],[\"它包含了事件的所有信息\",{\"1\":{\"159\":1,\"357\":1}}],[\"它首先会经过一系列的父元素和祖先元素\",{\"1\":{\"149\":1,\"347\":1}}],[\"它是如何工作的\",{\"0\":{\"142\":1,\"149\":1,\"340\":1,\"347\":1}}],[\"它是页面中的一块渲染区域\",{\"1\":{\"64\":1,\"262\":1}}],[\"它将复制节点及其所有子节点\",{\"1\":{\"139\":1,\"337\":1}}],[\"它将包含当前的日期和时间\",{\"1\":{\"114\":1,\"312\":1}}],[\"它表示一个变量指向一个空对象\",{\"1\":{\"110\":1,\"308\":1}}],[\"它只比较两个值的值\",{\"1\":{\"106\":1,\"304\":1}}],[\"它有一个构造函数\",{\"1\":{\"88\":1,\"286\":1}}],[\"它常用于对数组中的每个元素进行转换或计算\",{\"1\":{\"86\":1,\"284\":1}}],[\"它常用于执行副作用操作\",{\"1\":{\"85\":1,\"283\":1}}],[\"它可以是各种数据类型\",{\"1\":{\"207\":1,\"405\":1}}],[\"它可以通过返回值进行链式调用\",{\"1\":{\"86\":1,\"284\":1}}],[\"它可能会重新可见\",{\"1\":{\"73\":1,\"271\":1}}],[\"它不会像函数声明那样被提升\",{\"1\":{\"126\":1,\"324\":1}}],[\"它不会更改原数组\",{\"1\":{\"86\":1,\"284\":1}}],[\"它不仅比较两个值的类型\",{\"1\":{\"105\":1,\"303\":1}}],[\"它不能被中断\",{\"1\":{\"85\":1,\"283\":1}}],[\"它不返回任何值\",{\"1\":{\"85\":1,\"283\":1}}],[\"它们提供了一种灵活的方式来处理响应式数据\",{\"1\":{\"226\":1,\"424\":1}}],[\"它们提供了与宿主环境交互的能力\",{\"1\":{\"100\":1,\"103\":1,\"298\":1,\"301\":1}}],[\"它们的更新将触发依赖它们的组件重新渲染\",{\"1\":{\"225\":1,\"423\":1}}],[\"它们没有权限直接访问\",{\"1\":{\"207\":1,\"405\":1}}],[\"它们不能直接通信\",{\"1\":{\"206\":1,\"404\":1}}],[\"它们不会检查对象的原型链上的属性\",{\"1\":{\"83\":1,\"281\":1}}],[\"它们分别用于减少初始页面加载时间并提高用户体验\",{\"1\":{\"194\":1,\"392\":1}}],[\"它们模拟了\",{\"1\":{\"178\":1,\"376\":1}}],[\"它们都属于window对象\",{\"1\":{\"172\":1,\"370\":1}}],[\"它们都与javascript的执行上下文和作用域链有关\",{\"1\":{\"122\":1,\"320\":1}}],[\"它们可能不同步\",{\"1\":{\"132\":1,\"330\":1}}],[\"它们可能与attribute相对应\",{\"1\":{\"131\":1,\"329\":1}}],[\"它们通常是同步的\",{\"1\":{\"132\":1,\"330\":1}}],[\"它们是\",{\"1\":{\"162\":1,\"360\":1}}],[\"它们是可以通过javascript访问和修改的\",{\"1\":{\"131\":1,\"329\":1}}],[\"它们是语言的一部分\",{\"1\":{\"101\":1,\"299\":1}}],[\"它们在\",{\"1\":{\"222\":1,\"420\":1}}],[\"它们在功能\",{\"1\":{\"219\":1,\"417\":1}}],[\"它们在javascript中的表现和用途有所区别\",{\"1\":{\"129\":1,\"327\":1}}],[\"它们在任何javascript环境中都是可用的\",{\"1\":{\"101\":1,\"299\":1}}],[\"它们对于理解javascript的作用域和执行上下文非常重要\",{\"1\":{\"126\":1,\"324\":1}}],[\"它们之间有着不同的特点和用途\",{\"1\":{\"115\":1,\"313\":1}}],[\"它们用于不同的场景和目的\",{\"1\":{\"109\":1,\"307\":1}}],[\"它们有一些关键的区别\",{\"1\":{\"84\":1,\"282\":1}}],[\"它们也是不相等的\",{\"1\":{\"78\":1,\"276\":1}}],[\"从中可以访问事件的类型和目标\",{\"1\":{\"164\":1,\"362\":1}}],[\"从数组的最后一个元素开始\",{\"1\":{\"128\":1,\"326\":1}}],[\"从而减少应用的大小\",{\"1\":{\"219\":1,\"417\":1}}],[\"从而减少了http请求和数据传输量\",{\"1\":{\"195\":1,\"393\":1}}],[\"从而实现浏览器兼容性处理或者功能检测\",{\"1\":{\"208\":1,\"406\":1}}],[\"从而实现了真正的随机排序\",{\"1\":{\"128\":1,\"326\":1}}],[\"从而可以自由移动\",{\"1\":{\"193\":1,\"391\":1}}],[\"从而有机会对它进行处理\",{\"1\":{\"143\":1,\"341\":1}}],[\"从而使该对象具有迭代器接口\",{\"1\":{\"97\":1,\"295\":1}}],[\"从而在视觉上隐藏元素\",{\"1\":{\"73\":1,\"271\":1}}],[\"从而在视觉上\",{\"1\":{\"73\":1,\"271\":1}}],[\"从而看不见\",{\"1\":{\"73\":1,\"271\":1}}],[\"从左到右\",{\"1\":{\"64\":1,\"262\":1}}],[\"使得跨组件的状态共享更加方便\",{\"1\":{\"219\":1,\"417\":1}}],[\"使得渲染更新更加高效\",{\"1\":{\"218\":1,\"416\":1}}],[\"使得比较操作更加安全和可预测\",{\"1\":{\"108\":1,\"306\":1}}],[\"使代码更加清晰和可靠\",{\"1\":{\"107\":1,\"305\":1}}],[\"使它们具有相同的类型\",{\"1\":{\"106\":1,\"304\":1}}],[\"使其可拖动\",{\"1\":{\"188\":1,\"191\":1,\"386\":1,\"389\":1}}],[\"使其不可见\",{\"1\":{\"73\":1,\"271\":1}}],[\"使其完全透明\",{\"1\":{\"73\":1,\"271\":1}}],[\"使用场景\",{\"1\":{\"227\":1,\"425\":1}}],[\"使用的是\",{\"1\":{\"219\":1,\"417\":1}}],[\"使用第三方调试工具\",{\"1\":{\"204\":1,\"402\":1}}],[\"使用第三方库\",{\"1\":{\"78\":1,\"276\":1}}],[\"使用单元测试框架\",{\"1\":{\"204\":1,\"402\":1}}],[\"使用调试器\",{\"1\":{\"204\":1,\"402\":1}}],[\"使用浏览器的\",{\"1\":{\"204\":1,\"402\":1}}],[\"使用步进\",{\"1\":{\"204\":1,\"402\":1}}],[\"使用javascript动态创建图片元素并设置其<span\",{\"1\":{\"196\":1,\"394\":1}}],[\"使用原生javascript\",{\"0\":{\"189\":1,\"387\":1}}],[\"使用html5拖放api\",{\"0\":{\"191\":1,\"389\":1},\"1\":{\"188\":1,\"386\":1}}],[\"使用示例\",{\"0\":{\"181\":1,\"379\":1}}],[\"使用对象字面量和数组索引\",{\"1\":{\"120\":1,\"318\":1}}],[\"使用扩展运算符\",{\"1\":{\"117\":1,\"128\":1,\"315\":1,\"326\":1}}],[\"使用类\",{\"1\":{\"96\":1,\"294\":1}}],[\"使用class语法\",{\"1\":{\"89\":1,\"287\":1}}],[\"使用new关键字创建person类的实例\",{\"1\":{\"88\":1,\"286\":1}}],[\"使用<span\",{\"1\":{\"83\":1,\"117\":2,\"120\":1,\"121\":3,\"126\":1,\"135\":1,\"136\":1,\"138\":1,\"139\":1,\"140\":2,\"141\":5,\"210\":1,\"281\":1,\"315\":2,\"318\":1,\"319\":3,\"324\":1,\"333\":1,\"334\":1,\"336\":1,\"337\":1,\"338\":2,\"339\":5,\"408\":1}}],[\"使用库\",{\"1\":{\"78\":1,\"276\":1}}],[\"使用方法\",{\"1\":{\"76\":1,\"274\":1}}],[\"使用typeof判断引用类型\",{\"1\":{\"76\":1,\"274\":1}}],[\"使用typeof判断基本类型\",{\"1\":{\"76\":1,\"274\":1}}],[\"使用flexbox\",{\"1\":{\"62\":1,\"260\":1}}],[\"使用flexbox布局\",{\"1\":{\"61\":1,\"259\":1}}],[\"使用\",{\"1\":{\"62\":1,\"73\":3,\"78\":1,\"82\":2,\"90\":1,\"105\":1,\"108\":3,\"113\":2,\"159\":1,\"175\":1,\"179\":1,\"187\":2,\"202\":1,\"203\":1,\"204\":3,\"211\":1,\"227\":1,\"260\":1,\"271\":3,\"276\":1,\"280\":2,\"288\":1,\"303\":1,\"306\":3,\"311\":2,\"357\":1,\"373\":1,\"377\":1,\"385\":2,\"400\":1,\"401\":1,\"402\":3,\"409\":1,\"425\":1}}],[\"使用绝对定位\",{\"1\":{\"62\":2,\"260\":2}}],[\"与其他浏览器的\",{\"1\":{\"211\":1,\"409\":1}}],[\"与主线程不一样\",{\"1\":{\"206\":1,\"404\":1}}],[\"与事件冒泡相对\",{\"1\":{\"149\":1,\"347\":1}}],[\"与当前元素交换\",{\"1\":{\"128\":1,\"326\":1}}],[\"与函数提升的区别\",{\"0\":{\"122\":1,\"320\":1}}],[\"与数组\",{\"0\":{\"116\":1,\"314\":1}}],[\"与\",{\"1\":{\"73\":2,\"200\":1,\"271\":2,\"398\":1}}],[\"与方向无关\",{\"1\":{\"64\":1,\"262\":1}}],[\"但仍然存在一些性能瓶颈\",{\"1\":{\"216\":1,\"414\":1}}],[\"但仍然占据空间\",{\"1\":{\"73\":1,\"271\":1}}],[\"但这种方法不鼓励用于功能检测\",{\"1\":{\"210\":1,\"408\":1}}],[\"但这种方法会将键值对转换为连续的元素\",{\"1\":{\"121\":1,\"319\":1}}],[\"但使用需谨慎考虑隐私问题\",{\"1\":{\"209\":1,\"407\":1}}],[\"但可以使用\",{\"1\":{\"206\":1,\"404\":1}}],[\"但可以通过一些方法相互转换\",{\"1\":{\"115\":1,\"313\":1}}],[\"但可能需要处理更多的事件和细节\",{\"1\":{\"193\":1,\"391\":1}}],[\"但用法和行为有所不同\",{\"1\":{\"172\":1,\"370\":1}}],[\"但用户无法与之交互\",{\"1\":{\"73\":1,\"271\":1}}],[\"但在实际开发中\",{\"1\":{\"203\":1,\"401\":1}}],[\"但在某些情况下\",{\"1\":{\"146\":1,\"344\":1}}],[\"但在严格意义上\",{\"1\":{\"102\":1,\"300\":1}}],[\"但html标签中的\",{\"1\":{\"133\":1,\"331\":1}}],[\"但对于其他类型\",{\"1\":{\"132\":1,\"330\":1}}],[\"但对于包含函数\",{\"1\":{\"78\":1,\"276\":1}}],[\"但不一定影响html标签内的attribute\",{\"1\":{\"131\":1,\"329\":1}}],[\"但不会传达给使用辅助技术的用户\",{\"1\":{\"73\":1,\"271\":1}}],[\"但如果你想要创建一个真正的类数组对象\",{\"1\":{\"118\":1,\"316\":1}}],[\"但具有类似数组的特征\",{\"1\":{\"116\":1,\"314\":1}}],[\"但技术上它是一个对象\",{\"1\":{\"110\":1,\"308\":1}}],[\"但没有找到合适的返回对象时\",{\"1\":{\"110\":1,\"308\":1}}],[\"但是组件被复用的时候调用\",{\"1\":{\"228\":1,\"426\":1}}],[\"但是使用了\",{\"1\":{\"178\":1,\"376\":1}}],[\"但是变量名会被提升\",{\"1\":{\"125\":1,\"323\":1}}],[\"但是\",{\"1\":{\"125\":1,\"206\":1,\"207\":1,\"323\":1,\"404\":1,\"405\":1}}],[\"但是尝试打印一个函数会抛出错误\",{\"1\":{\"124\":1,\"322\":1}}],[\"但是由于函数提升\",{\"1\":{\"124\":1,\"322\":1}}],[\"但是由于变量提升\",{\"1\":{\"123\":1,\"321\":1}}],[\"但是只适用于函数声明\",{\"1\":{\"124\":1,\"322\":1}}],[\"但是它们不会立即被初始化\",{\"1\":{\"123\":1,\"321\":1}}],[\"但是实际应用就是一个\",{\"1\":{\"94\":1,\"292\":1}}],[\"但是像\",{\"1\":{\"76\":1,\"274\":1}}],[\"但会返回一个新数组\",{\"1\":{\"86\":1,\"284\":1}}],[\"但\",{\"1\":{\"81\":1,\"279\":1}}],[\"但它是针对对象的某个属性\",{\"1\":{\"224\":1,\"422\":1}}],[\"但它们也有自己的开销\",{\"1\":{\"207\":1,\"405\":1}}],[\"但它们在触发行为和事件传播上有所不同\",{\"1\":{\"198\":1,\"396\":1}}],[\"但它们在用法和用途上有一些区别\",{\"1\":{\"183\":1,\"381\":1}}],[\"但它们在比较时的行为和规则有所不同\",{\"1\":{\"104\":1,\"302\":1}}],[\"但它们有一些区别\",{\"1\":{\"80\":1,\"278\":1}}],[\"但它仍占据着原来的空间\",{\"1\":{\"73\":1,\"271\":1}}],[\"但超出部分的内容不可见\",{\"1\":{\"73\":1,\"271\":1}}],[\"但grid的兼容性相对较差\",{\"1\":{\"62\":1,\"260\":1}}],[\"也称为\",{\"1\":{\"211\":1,\"409\":1}}],[\"也称为knuth\",{\"1\":{\"128\":1,\"326\":1}}],[\"也无法使用document\",{\"1\":{\"206\":1,\"404\":1}}],[\"也有类似的安全风险\",{\"1\":{\"186\":1,\"384\":1}}],[\"也不会再次触发父元素上的\",{\"1\":{\"202\":1,\"400\":1}}],[\"也不会影响到其他元素的布局\",{\"1\":{\"73\":1,\"271\":1}}],[\"也不需要为它们单独设置事件监听器\",{\"1\":{\"161\":1,\"359\":1}}],[\"也就是事件绑定的元素\",{\"1\":{\"160\":1,\"358\":1}}],[\"也就是说可以使用原型链实现继承功能\",{\"1\":{\"92\":1,\"290\":1}}],[\"也可传入多个函数\",{\"1\":{\"228\":1,\"426\":1}}],[\"也可取消导航\",{\"1\":{\"228\":1,\"426\":1}}],[\"也可用于worker\",{\"1\":{\"172\":1,\"370\":1}}],[\"也可能不对应\",{\"1\":{\"131\":1,\"329\":1}}],[\"也可以换成self\",{\"1\":{\"207\":1,\"405\":1}}],[\"也可以通过\",{\"1\":{\"130\":1,\"328\":1}}],[\"也可以使用原型链对对象进行扩展\",{\"1\":{\"92\":1,\"290\":1}}],[\"也可以实现垂直居中\",{\"1\":{\"62\":1,\"260\":1}}],[\"也会触发父元素上的\",{\"1\":{\"199\":1,\"397\":1}}],[\"也会返回\",{\"1\":{\"105\":1,\"303\":1}}],[\"也会继续执行直到数组的末尾\",{\"1\":{\"85\":1,\"283\":1}}],[\"也没有arguments\",{\"1\":{\"97\":1,\"295\":1}}],[\"也是实例之间属性和方法的共享的方法\",{\"1\":{\"92\":1,\"290\":1}}],[\"元素的事件属性\",{\"1\":{\"211\":1,\"409\":1}}],[\"元素拖动是web开发中常见的交互功能\",{\"1\":{\"188\":1,\"386\":1}}],[\"元素拖动如何实现\",{\"0\":{\"188\":1,\"386\":1}}],[\"元素在视觉上仍然可见\",{\"1\":{\"73\":2,\"271\":2}}],[\"元素在页面上不可见\",{\"1\":{\"73\":1,\"271\":1}}],[\"元素本身仍然可见\",{\"1\":{\"73\":1,\"271\":1}}],[\"元素不可见\",{\"1\":{\"73\":3,\"271\":3}}],[\"元素不会被显示\",{\"1\":{\"73\":1,\"271\":1}}],[\"元素仍然可见\",{\"1\":{\"73\":1,\"271\":1}}],[\"元素仍然占据空间\",{\"1\":{\"73\":1,\"271\":1}}],[\"元素高度丢失\",{\"1\":{\"64\":1,\"262\":1}}],[\"不能获取this\",{\"1\":{\"228\":1,\"426\":1}}],[\"不能共享全局变量或者全局对象\",{\"1\":{\"207\":1,\"405\":1}}],[\"不支持异步\",{\"1\":{\"227\":1,\"425\":1}}],[\"不是通过参数传递给事件处理器的\",{\"1\":{\"211\":1,\"409\":1}}],[\"不访问\",{\"1\":{\"207\":1,\"405\":1}}],[\"不涉及重绘和重排的问题\",{\"1\":{\"186\":1,\"384\":1}}],[\"不包含用户输入的恶意代码\",{\"1\":{\"186\":1,\"384\":1}}],[\"不会\",{\"1\":{\"201\":1,\"399\":1}}],[\"不会再次触发父元素上的\",{\"1\":{\"200\":1,\"398\":1}}],[\"不会导致整个文档内容被清空\",{\"1\":{\"185\":1,\"383\":1}}],[\"不会尝试进行任何类型转换\",{\"1\":{\"105\":1,\"303\":1}}],[\"不需要单独为它们添加事件处理程序\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"不复制子节点\",{\"1\":{\"139\":1,\"337\":1}}],[\"不适用于函数表达式\",{\"1\":{\"124\":1,\"125\":1,\"322\":1,\"323\":1}}],[\"不进行类型转换\",{\"1\":{\"105\":1,\"303\":1}}],[\"不依赖于宿主环境\",{\"1\":{\"101\":1,\"299\":1}}],[\"不仅获取了不可枚举的属性\",{\"1\":{\"82\":1,\"280\":1}}],[\"不管它们是否可枚举\",{\"1\":{\"79\":1,\"81\":1,\"277\":1,\"279\":1}}],[\"不可枚举\",{\"1\":{\"79\":1,\"277\":1}}],[\"不同浏览器对<span\",{\"1\":{\"210\":1,\"408\":1}}],[\"不同之处在于\",{\"1\":{\"200\":1,\"398\":1}}],[\"不同\",{\"1\":{\"73\":1,\"271\":1}}],[\"不同的元素类型\",{\"1\":{\"60\":1,\"258\":1}}],[\"不占据任何空间\",{\"1\":{\"73\":1,\"271\":1}}],[\"每次\",{\"1\":{\"179\":1,\"377\":1}}],[\"每次执行的间隔时间\",{\"1\":{\"174\":1,\"372\":1}}],[\"每2秒执行一次repeathello函数\",{\"1\":{\"174\":1,\"372\":1}}],[\"每个\",{\"1\":{\"207\":1,\"405\":1}}],[\"每个父元素都有机会捕获并处理事件\",{\"1\":{\"150\":1,\"348\":1}}],[\"每个父节点都会接收到这个事件\",{\"1\":{\"143\":1,\"341\":1}}],[\"每个元素的左外边距与包含块的左边界相接触\",{\"1\":{\"64\":1,\"262\":1}}],[\"每种方式都有其特定的用途和效果\",{\"1\":{\"73\":1,\"271\":1}}],[\"7408226845466902568\",{\"1\":{\"77\":1,\"275\":1}}],[\"7\",{\"0\":{\"96\":1,\"294\":1},\"1\":{\"76\":4,\"96\":3,\"97\":1,\"274\":4,\"294\":3,\"295\":1}}],[\"798\",{\"1\":{\"72\":1,\"270\":1}}],[\"70705683\",{\"1\":{\"54\":1,\"252\":1}}],[\"达成最终的效果\",{\"1\":{\"72\":1,\"270\":1}}],[\"然后只对中间不确定的部分进行深入比较\",{\"1\":{\"217\":1,\"415\":1}}],[\"然后回复主线程\",{\"1\":{\"207\":1,\"405\":1}}],[\"然后通过调用它的\",{\"1\":{\"207\":1,\"405\":1}}],[\"然后通过消息传递与\",{\"1\":{\"207\":1,\"405\":1}}],[\"然后通过css背景位置来显示不同的图标\",{\"1\":{\"196\":1,\"394\":1}}],[\"然后从\",{\"1\":{\"180\":1,\"378\":1}}],[\"然后事件处理程序会检查事件的目标是否是按钮\",{\"1\":{\"161\":1,\"359\":1}}],[\"然后事件会冒泡到父容器<span\",{\"1\":{\"145\":1,\"343\":1}}],[\"然后才是按钮本身的点击事件\",{\"1\":{\"153\":1,\"351\":1}}],[\"然后\",{\"1\":{\"128\":1,\"144\":1,\"326\":1,\"342\":1}}],[\"然后在每次迭代中减少\",{\"1\":{\"128\":1,\"326\":1}}],[\"然后组合它们\",{\"1\":{\"114\":1,\"312\":1}}],[\"然后替换斜杠\",{\"1\":{\"114\":1,\"312\":1}}],[\"然后再解析为数组\",{\"1\":{\"121\":1,\"319\":1}}],[\"然后再进行比较\",{\"1\":{\"106\":2,\"304\":2}}],[\"然后再用flex\",{\"1\":{\"72\":1,\"270\":1}}],[\"然后执行微任务如果有嵌套看先执行宏任务在再按照优先级执行微任务\",{\"1\":{\"98\":1,\"296\":1}}],[\"然后返回对象\",{\"1\":{\"88\":1,\"286\":1}}],[\"然后添加或修改元素\",{\"1\":{\"87\":1,\"285\":1}}],[\"然后检查返回的数组是否为空\",{\"1\":{\"82\":1,\"280\":1}}],[\"然后比较字符串是否相同\",{\"1\":{\"78\":1,\"276\":1}}],[\"然后使用\",{\"1\":{\"62\":1,\"260\":1}}],[\"的基础\",{\"1\":{\"226\":1,\"424\":1}}],[\"的改进版本\",{\"1\":{\"219\":1,\"417\":1}}],[\"的代码库使用\",{\"1\":{\"219\":1,\"417\":1}}],[\"的更改\",{\"1\":{\"219\":1,\"417\":1}}],[\"的模块化系统更好地支持了\",{\"1\":{\"219\":1,\"417\":1}}],[\"的重写和响应式系统的改进\",{\"1\":{\"219\":1,\"417\":1}}],[\"的重写\",{\"1\":{\"219\":1,\"417\":1}}],[\"的其他部分\",{\"1\":{\"219\":1,\"417\":1}}],[\"的主要版本\",{\"1\":{\"219\":1,\"417\":1}}],[\"的响应式引用\",{\"1\":{\"224\":1,\"422\":1}}],[\"的响应式特性更加强大和灵活\",{\"1\":{\"222\":1,\"420\":1}}],[\"的响应式系统\",{\"1\":{\"219\":1,\"417\":1}}],[\"的响应\",{\"1\":{\"207\":1,\"405\":1}}],[\"的消息\",{\"1\":{\"207\":1,\"405\":1}}],[\"的能力\",{\"1\":{\"207\":1,\"405\":1}}],[\"的一些关键点\",{\"1\":{\"207\":1,\"405\":1}}],[\"的作用\",{\"1\":{\"205\":1,\"403\":1}}],[\"的调试功能\",{\"1\":{\"204\":1,\"402\":1}}],[\"的原型对象\",{\"1\":{\"203\":1,\"401\":1}}],[\"的原理\",{\"1\":{\"93\":1,\"291\":1}}],[\"的交叉状态\",{\"1\":{\"195\":1,\"393\":1}}],[\"的行为\",{\"1\":{\"178\":1,\"376\":1}}],[\"的父元素\",{\"1\":{\"168\":1,\"366\":1}}],[\"的左\",{\"1\":{\"166\":1,\"364\":1}}],[\"的事件模型描述了如何在用户与页面交互时处理事件\",{\"1\":{\"158\":1,\"356\":1}}],[\"的随机索引\",{\"1\":{\"128\":1,\"326\":1}}],[\"的状态\",{\"1\":{\"123\":1,\"321\":1}}],[\"的输出格式\",{\"1\":{\"114\":1,\"312\":1}}],[\"的特殊值\",{\"1\":{\"109\":1,\"307\":1}}],[\"的\",{\"1\":{\"109\":1,\"222\":1,\"307\":1,\"420\":1}}],[\"的对象\",{\"1\":{\"100\":1,\"298\":1}}],[\"的对象不适用\",{\"1\":{\"78\":1,\"276\":1}}],[\"的class\",{\"1\":{\"96\":1,\"294\":1}}],[\"的继承\",{\"1\":{\"94\":1,\"292\":1}}],[\"的内置属性\",{\"1\":{\"92\":1,\"290\":1}}],[\"的属性有哪些\",{\"0\":{\"73\":1,\"271\":1}}],[\"的逻辑就是用flex\",{\"1\":{\"72\":1,\"270\":1}}],[\"的定义\",{\"0\":{\"64\":1,\"262\":1}}],[\"超出部分进行缩小的取值比例\",{\"1\":{\"72\":1,\"270\":1}}],[\"比如与硬件相关的属性\",{\"1\":{\"209\":1,\"407\":1}}],[\"比如数据分析\",{\"1\":{\"207\":1,\"405\":1}}],[\"比如首屏显示的图片或对用户体验至关重要的资源\",{\"1\":{\"197\":1,\"395\":1}}],[\"比如通过javascript操作dom来更改或添加新的元素和文本\",{\"1\":{\"185\":1,\"383\":1}}],[\"比如函数执行时间的不确定性和最小时间间隔的限制\",{\"1\":{\"178\":1,\"376\":1}}],[\"比如<span\",{\"1\":{\"162\":1,\"209\":1,\"360\":1,\"407\":1}}],[\"比如是否需要修改原数组\",{\"1\":{\"87\":1,\"285\":1}}],[\"比如是否需要元素继续参与文档流的布局\",{\"1\":{\"73\":1,\"271\":1}}],[\"比如\",{\"1\":{\"72\":1,\"88\":1,\"270\":1,\"286\":1}}],[\"属性的变化\",{\"1\":{\"224\":1,\"422\":1}}],[\"属性的响应式对象\",{\"1\":{\"223\":1,\"421\":1}}],[\"属性指向原始值\",{\"1\":{\"223\":1,\"421\":1}}],[\"属性指向函数本身\",{\"1\":{\"92\":1,\"290\":1}}],[\"属性和方法概览\",{\"0\":{\"209\":1,\"407\":1}}],[\"属性和方法的共享\",{\"1\":{\"92\":1,\"290\":1}}],[\"属性查找\",{\"1\":{\"92\":1,\"290\":1}}],[\"属性又有一个\",{\"1\":{\"92\":1,\"290\":1}}],[\"属性有一个公开可访问的不可枚举属性\",{\"1\":{\"90\":1,\"288\":1}}],[\"属性是不可枚举的\",{\"1\":{\"81\":1,\"279\":1}}],[\"属性\",{\"1\":{\"73\":1,\"97\":1,\"195\":1,\"223\":1,\"271\":1,\"295\":1,\"393\":1,\"421\":1}}],[\"属性将元素的可视区域设置为0\",{\"1\":{\"73\":1,\"271\":1}}],[\"属性结合使用时\",{\"1\":{\"73\":1,\"271\":1}}],[\"属性结合\",{\"1\":{\"73\":1,\"271\":1}}],[\"属性时\",{\"1\":{\"72\":1,\"185\":1,\"270\":1,\"383\":1}}],[\"属性设置为负值\",{\"1\":{\"73\":1,\"271\":1}}],[\"属性设置为\",{\"1\":{\"62\":1,\"260\":1}}],[\"对全局\",{\"1\":{\"219\":1,\"417\":1}}],[\"对象发出\",{\"1\":{\"206\":1,\"404\":1}}],[\"对象中\",{\"1\":{\"224\":1,\"422\":1}}],[\"对象中删除这个\",{\"1\":{\"180\":1,\"378\":1}}],[\"对象中存在这个\",{\"1\":{\"180\":1,\"378\":1}}],[\"对象中唯一标识每个定时器\",{\"1\":{\"179\":1,\"377\":1}}],[\"对象转数组\",{\"0\":{\"121\":1,\"319\":1}}],[\"对象是键值对的集合\",{\"1\":{\"119\":1,\"317\":1}}],[\"对象\",{\"0\":{\"115\":1,\"313\":1},\"1\":{\"109\":1,\"206\":1,\"211\":1,\"307\":1,\"404\":1,\"409\":1}}],[\"对象可以通过原型链继承父对象的属性或者方法\",{\"1\":{\"92\":1,\"290\":1}}],[\"对象有一个内置属性\",{\"1\":{\"90\":1,\"288\":1}}],[\"对应的属性代表什么含义\",{\"0\":{\"72\":1,\"270\":1}}],[\"对于首屏内容可以采用预加载\",{\"1\":{\"197\":1,\"395\":1}}],[\"对于图片较多的页面\",{\"1\":{\"195\":1,\"393\":1}}],[\"对于图片而言\",{\"1\":{\"195\":1,\"196\":1,\"393\":1,\"394\":1}}],[\"对于动态添加到dom中的元素\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"对于布尔类型的attribute和property\",{\"1\":{\"132\":1,\"330\":1}}],[\"对于<span\",{\"1\":{\"123\":1,\"321\":1}}],[\"对于简单对象\",{\"1\":{\"121\":1,\"319\":1}}],[\"对于数组的增\",{\"1\":{\"87\":1,\"285\":1}}],[\"对于同一个bfc的俩个相邻的盒子的margin会发生重叠\",{\"1\":{\"64\":1,\"262\":1}}],[\"对于已定义宽度的元素\",{\"1\":{\"62\":1,\"260\":1}}],[\"对于多行文本\",{\"1\":{\"61\":1,\"259\":1}}],[\"对于单行文本\",{\"1\":{\"61\":1,\"259\":1}}],[\"合并解决方案\",{\"1\":{\"71\":2,\"269\":2}}],[\"合并出现原因\",{\"1\":{\"71\":2,\"269\":2}}],[\"兄弟级外边距合并\",{\"1\":{\"71\":1,\"269\":1}}],[\"外边距合并问题\",{\"0\":{\"71\":1,\"269\":1}}],[\"三种事件模型是什么\",{\"0\":{\"211\":1,\"409\":1}}],[\"三\",{\"0\":{\"71\":1,\"210\":1,\"269\":1,\"408\":1},\"1\":{\"76\":1,\"274\":1}}],[\"三列布局\",{\"1\":{\"70\":1,\"268\":1}}],[\"给元素添加<span\",{\"1\":{\"188\":1,\"191\":1,\"386\":1,\"389\":1}}],[\"给父元素设置border边框\",{\"1\":{\"71\":1,\"269\":1}}],[\"给父元素设置padding属性\",{\"1\":{\"71\":1,\"269\":1}}],[\"给父元素开启bfc\",{\"1\":{\"71\":1,\"269\":1}}],[\"给上边兄弟元素设置一个父元素\",{\"1\":{\"71\":1,\"269\":1}}],[\"给下边外边距开启bfc\",{\"1\":{\"71\":1,\"269\":1}}],[\"给中间盒子开启bfc\",{\"1\":{\"70\":1,\"268\":1}}],[\"给右盒子float\",{\"1\":{\"70\":1,\"268\":1}}],[\"给左盒子float\",{\"1\":{\"70\":1,\"268\":1}}],[\"给第一个盒子一个父盒子\",{\"1\":{\"67\":1,\"265\":1}}],[\"左侧右侧定宽\",{\"1\":{\"70\":1,\"268\":1}}],[\"左侧设置宽度\",{\"1\":{\"69\":1,\"267\":1}}],[\"左右两边固定宽度\",{\"1\":{\"70\":1,\"268\":1}}],[\"思路\",{\"1\":{\"70\":1,\"268\":1}}],[\"思维导图\",{\"1\":{\"63\":1,\"72\":1,\"73\":1,\"261\":1,\"270\":1,\"271\":1}}],[\"右侧自适应右侧自适应右侧自适应右侧自适应右侧自适应右侧自适应\",{\"1\":{\"69\":3,\"267\":3}}],[\"右边开启bfc\",{\"1\":{\"69\":1,\"267\":1}}],[\"右边自适应\",{\"1\":{\"69\":1,\"267\":1}}],[\"父元素不会因子元素上的鼠标指针移动而触发\",{\"1\":{\"200\":1,\"398\":1}}],[\"父元素也会接收到事件\",{\"1\":{\"199\":1,\"397\":1}}],[\"父元素上的事件处理程序就会执行\",{\"1\":{\"161\":1,\"359\":1}}],[\"父元素在计算高度时就会将浮动子元素child的高度也计算到其中\",{\"1\":{\"68\":1,\"266\":1}}],[\"父盒子的剩余空间可以利用flex\",{\"1\":{\"72\":1,\"270\":1}}],[\"父子级外边距合并\",{\"1\":{\"71\":1,\"269\":1}}],[\"父相子绝\",{\"0\":{\"55\":1,\"253\":1},\"1\":{\"55\":2,\"253\":2}}],[\"当前路由改变\",{\"1\":{\"228\":1,\"426\":1}}],[\"当前导航正要离开的路由\",{\"1\":{\"228\":1,\"426\":1}}],[\"当前事件处于的阶段\",{\"1\":{\"160\":1,\"358\":1}}],[\"当\",{\"1\":{\"207\":1,\"405\":1}}],[\"当执行到这一行时\",{\"1\":{\"204\":1,\"402\":1}}],[\"当鼠标指针移动到子元素上时\",{\"1\":{\"201\":1,\"399\":1}}],[\"当鼠标指针移动到其子元素上时\",{\"1\":{\"200\":1,\"398\":1}}],[\"当鼠标指针移动到元素上时触发\",{\"1\":{\"199\":1,\"200\":1,\"397\":1,\"398\":1}}],[\"当鼠标释放时\",{\"1\":{\"188\":1,\"189\":1,\"386\":1,\"387\":1}}],[\"当鼠标移动时\",{\"1\":{\"188\":1,\"189\":1,\"386\":1,\"387\":1}}],[\"当鼠标按下时\",{\"1\":{\"188\":1,\"189\":1,\"386\":1,\"387\":1}}],[\"当调用这个方法时\",{\"1\":{\"184\":1,\"382\":1}}],[\"当使用<span\",{\"1\":{\"177\":1,\"375\":1}}],[\"当按钮被点击时\",{\"1\":{\"164\":1,\"362\":1}}],[\"当任何按钮被点击时\",{\"1\":{\"161\":1,\"359\":1}}],[\"当子元素\",{\"1\":{\"161\":1,\"359\":1}}],[\"当一个事件发生时\",{\"1\":{\"160\":1,\"358\":1}}],[\"当一个事件发生在某个元素上时\",{\"1\":{\"143\":1,\"341\":1}}],[\"当事件被触发时\",{\"1\":{\"159\":1,\"163\":1,\"357\":1,\"361\":1}}],[\"当需要阻止事件冒泡时\",{\"1\":{\"148\":1,\"346\":1}}],[\"当你有一个响应式对象\",{\"1\":{\"224\":1,\"422\":1}}],[\"当你使用构建工具\",{\"1\":{\"204\":1,\"402\":1}}],[\"当你使用<span\",{\"1\":{\"88\":1,\"286\":1}}],[\"当你将鼠标指针移动到子元素上时\",{\"1\":{\"202\":1,\"400\":1}}],[\"当你设置一个元素的\",{\"1\":{\"185\":1,\"383\":1}}],[\"当你想停止定时任务时\",{\"1\":{\"181\":1,\"379\":1}}],[\"当你点击按钮时\",{\"1\":{\"145\":2,\"147\":1,\"149\":1,\"153\":1,\"343\":2,\"345\":1,\"347\":1,\"351\":1}}],[\"当仍有元素未洗牌时\",{\"1\":{\"128\":1,\"326\":1}}],[\"当访问对象的一个属性的时候\",{\"1\":{\"92\":1,\"290\":1}}],[\"当与\",{\"1\":{\"73\":1,\"271\":1}}],[\"当父盒子的宽度大于子盒子的宽度\",{\"1\":{\"72\":1,\"270\":1}}],[\"当我们\",{\"1\":{\"67\":1,\"265\":1}}],[\"当兄弟盒子设置\",{\"1\":{\"67\":1,\"265\":1}}],[\"为了兼容不支持\",{\"1\":{\"211\":1,\"409\":1}}],[\"为了避免这种情况\",{\"1\":{\"177\":1,\"375\":1}}],[\"为了阻止事件冒泡\",{\"1\":{\"146\":1,\"344\":1}}],[\"为按钮添加点击事件监听器\",{\"1\":{\"164\":1,\"362\":1}}],[\"为true\",{\"1\":{\"149\":1,\"347\":1}}],[\"为破折号\",{\"1\":{\"114\":3,\"312\":3}}],[\"为\",{\"1\":{\"65\":1,\"113\":2,\"263\":1,\"311\":2}}],[\"浮动效果\",{\"1\":{\"68\":1,\"266\":1}}],[\"浮动元素\",{\"1\":{\"65\":1,\"263\":1}}],[\"浮动子元素也参与计算\",{\"1\":{\"64\":1,\"262\":1}}],[\"二\",{\"0\":{\"65\":1,\"263\":1},\"1\":{\"76\":1,\"274\":1}}],[\"两栏布局没有实现自适应\",{\"1\":{\"64\":1,\"262\":1}}],[\"往往会因为bfc问题导致\",{\"1\":{\"64\":1,\"262\":1}}],[\"在模板中使用时\",{\"1\":{\"223\":1,\"421\":1}}],[\"在set拦截函数内调用trigger来触发变化\",{\"1\":{\"220\":1,\"418\":1}}],[\"在get时拦截函数调用track函数追踪变化\",{\"1\":{\"220\":1,\"418\":1}}],[\"在性能\",{\"1\":{\"219\":1,\"417\":1}}],[\"在虚拟\",{\"1\":{\"219\":1,\"417\":1}}],[\"在处理复杂列表更新时\",{\"1\":{\"218\":1,\"416\":1}}],[\"在vue\",{\"1\":{\"215\":1,\"413\":1}}],[\"在vue中会通过\",{\"1\":{\"214\":1,\"412\":1}}],[\"在现代\",{\"1\":{\"211\":1,\"409\":1}}],[\"在代码中添加\",{\"1\":{\"204\":1,\"402\":1}}],[\"在代码中你想要检查的地方设置断点\",{\"1\":{\"204\":1,\"402\":1}}],[\"在<span\",{\"1\":{\"193\":1,\"391\":1}}],[\"在文档加载时使用\",{\"1\":{\"186\":1,\"384\":1}}],[\"在使用\",{\"1\":{\"186\":1,\"384\":1}}],[\"在dom事件处理中\",{\"1\":{\"160\":1,\"358\":1}}],[\"在dom\",{\"1\":{\"159\":1,\"162\":1,\"357\":1,\"360\":1}}],[\"在目标节点触发事件\",{\"1\":{\"158\":1,\"356\":1}}],[\"在冒泡阶段依次为<span\",{\"1\":{\"158\":1,\"356\":1}}],[\"在冒泡阶段\",{\"1\":{\"153\":1,\"351\":1}}],[\"在冒泡阶段添加事件处理器\",{\"1\":{\"149\":1,\"153\":1,\"347\":1,\"351\":1}}],[\"在捕获阶段依次为<span\",{\"1\":{\"158\":1,\"356\":1}}],[\"在捕获阶段\",{\"1\":{\"153\":1,\"351\":1}}],[\"在捕获阶段添加事件处理器\",{\"1\":{\"149\":1,\"153\":1,\"347\":1,\"351\":1}}],[\"在事件捕获阶段\",{\"1\":{\"149\":1,\"347\":1}}],[\"在实际应用中\",{\"1\":{\"141\":1,\"193\":1,\"197\":1,\"339\":1,\"391\":1,\"395\":1}}],[\"在实际开发中\",{\"1\":{\"103\":1,\"108\":1,\"113\":1,\"133\":1,\"187\":1,\"301\":1,\"306\":1,\"311\":1,\"331\":1,\"385\":1}}],[\"在web开发中\",{\"1\":{\"129\":1,\"158\":1,\"327\":1,\"356\":1}}],[\"在函数提升中\",{\"1\":{\"124\":1,\"322\":1}}],[\"在函数中\",{\"1\":{\"112\":1,\"310\":1}}],[\"在上面的代码中\",{\"1\":{\"123\":1,\"124\":1,\"126\":1,\"321\":1,\"322\":1,\"324\":1}}],[\"在某些文献中\",{\"1\":{\"102\":1,\"300\":1}}],[\"在node\",{\"1\":{\"100\":1,\"298\":1}}],[\"在浏览器中\",{\"1\":{\"100\":1,\"298\":1}}],[\"在\",{\"1\":{\"92\":1,\"211\":1,\"222\":1,\"290\":1,\"409\":1,\"420\":1}}],[\"在编程中\",{\"1\":{\"88\":1,\"286\":1}}],[\"在js解释器中查找一个变量或者函数时会首先从当前上下文对象中查找\",{\"1\":{\"127\":1,\"325\":1}}],[\"在js中new关键字主要做了\",{\"1\":{\"88\":1,\"286\":1}}],[\"在javascript中访问时\",{\"1\":{\"133\":2,\"331\":2}}],[\"在javascript中\",{\"1\":{\"78\":1,\"99\":1,\"104\":1,\"109\":1,\"115\":1,\"122\":1,\"128\":1,\"134\":1,\"152\":1,\"165\":1,\"276\":1,\"297\":1,\"302\":1,\"307\":1,\"313\":1,\"320\":1,\"326\":1,\"332\":1,\"350\":1,\"363\":1}}],[\"在指定位置添加元素\",{\"1\":{\"87\":1,\"285\":1}}],[\"在数组开头添加一个或多个元素\",{\"1\":{\"87\":1,\"285\":1}}],[\"在数组末尾添加一个或多个元素\",{\"1\":{\"87\":1,\"285\":1}}],[\"在选择使用哪个方法时\",{\"1\":{\"83\":1,\"281\":1}}],[\"在大多数情况下\",{\"1\":{\"83\":1,\"281\":1}}],[\"在这种技术中\",{\"1\":{\"161\":1,\"359\":1}}],[\"在这个示例中\",{\"1\":{\"164\":1,\"362\":1}}],[\"在这个过程中\",{\"1\":{\"143\":1,\"144\":1,\"150\":1,\"341\":1,\"342\":1,\"348\":1}}],[\"在这个函数中\",{\"1\":{\"128\":1,\"326\":1}}],[\"在这个例子中\",{\"1\":{\"81\":1,\"82\":1,\"88\":1,\"145\":1,\"147\":1,\"153\":1,\"154\":1,\"161\":1,\"202\":1,\"207\":1,\"279\":1,\"280\":1,\"286\":1,\"343\":1,\"345\":1,\"351\":1,\"352\":1,\"359\":1,\"400\":1,\"405\":1}}],[\"在这段代码中\",{\"1\":{\"114\":1,\"312\":1}}],[\"在这两个例子中\",{\"1\":{\"82\":1,\"280\":1}}],[\"在css中使用<span\",{\"1\":{\"196\":1,\"394\":1}}],[\"在css中\",{\"1\":{\"73\":1,\"271\":1}}],[\"在css中实现元素的水平和垂直居中布局是一个常见需求\",{\"1\":{\"60\":1,\"258\":1}}],[\"在父元素parent计算高度时\",{\"1\":{\"68\":1,\"266\":1}}],[\"在页面布局阶段\",{\"1\":{\"64\":1,\"262\":1}}],[\"让内部的子元素不会影响到外部的元素\",{\"1\":{\"64\":1,\"262\":1}}],[\"反之亦然\",{\"1\":{\"64\":1,\"262\":1}}],[\"6\",{\"1\":{\"64\":1,\"207\":1,\"262\":1,\"405\":1}}],[\"63299825\",{\"1\":{\"63\":1,\"261\":1}}],[\"5\",{\"0\":{\"170\":1,\"368\":1},\"1\":{\"64\":1,\"65\":1,\"76\":4,\"123\":1,\"128\":2,\"206\":1,\"207\":1,\"262\":1,\"263\":1,\"274\":4,\"321\":1,\"326\":2,\"404\":1,\"405\":1}}],[\"5000\",{\"1\":{\"176\":1,\"374\":1}}],[\"50px\",{\"1\":{\"56\":2,\"70\":1,\"254\":2,\"268\":1}}],[\"50\",{\"1\":{\"55\":2,\"56\":2,\"253\":2,\"254\":2}}],[\"404\",{\"1\":{\"449\":1}}],[\"44741577\",{\"1\":{\"194\":1,\"392\":1}}],[\"49078296\",{\"1\":{\"194\":1,\"392\":1}}],[\"46098577\",{\"1\":{\"97\":2,\"295\":2}}],[\"4\",{\"0\":{\"70\":1,\"91\":1,\"92\":1,\"169\":1,\"268\":1,\"289\":1,\"290\":1,\"367\":1},\"1\":{\"64\":1,\"65\":1,\"86\":1,\"128\":2,\"203\":1,\"206\":1,\"207\":1,\"262\":1,\"263\":1,\"284\":1,\"326\":2,\"401\":1,\"404\":1,\"405\":1}}],[\"即将进入的目标\",{\"1\":{\"228\":1,\"426\":1}}],[\"即子线程的全局对象\",{\"1\":{\"207\":1,\"405\":1}}],[\"即它们只能加载与主页面相同来源的脚本\",{\"1\":{\"207\":1,\"405\":1}}],[\"即不能打开本机的文件系统\",{\"1\":{\"206\":1,\"404\":1}}],[\"即所有任务只能在同一个线程上面完成\",{\"1\":{\"205\":1,\"403\":1}}],[\"即\",{\"1\":{\"184\":1,\"382\":1}}],[\"即上一次执行还没完成\",{\"1\":{\"177\":1,\"375\":1}}],[\"即修改一个另一个也会变\",{\"1\":{\"132\":1,\"330\":1}}],[\"即替换所有出现的斜杠\",{\"1\":{\"114\":1,\"312\":1}}],[\"即变量存在但还没有被赋予具体的值\",{\"1\":{\"111\":1,\"309\":1}}],[\"即还没有指向任何对象\",{\"1\":{\"110\":1,\"308\":1}}],[\"即返回\",{\"1\":{\"85\":1,\"283\":1}}],[\"即使鼠标指针在子元素上移动\",{\"1\":{\"202\":1,\"400\":1}}],[\"即使在文档加载完成后也可以安全地使用\",{\"1\":{\"185\":1,\"383\":1}}],[\"即使在多个\",{\"1\":{\"182\":1,\"380\":1}}],[\"即使在回调函数中抛出错误\",{\"1\":{\"85\":1,\"283\":1}}],[\"即使后续添加了更多的按钮\",{\"1\":{\"161\":1,\"359\":1}}],[\"即使它们看起来像数字或其他类型\",{\"1\":{\"130\":1,\"328\":1}}],[\"即使它们的值看起来相同\",{\"1\":{\"105\":1,\"303\":1}}],[\"即使它们包含相同的数据\",{\"1\":{\"78\":1,\"276\":1}}],[\"即使浮动元素也是如此\",{\"1\":{\"64\":1,\"262\":1}}],[\"即html元素\",{\"1\":{\"65\":1,\"263\":1}}],[\"即块级格式化上下文\",{\"1\":{\"64\":1,\"262\":1}}],[\"3性能提升的一个重要方面\",{\"1\":{\"218\":1,\"416\":1}}],[\"3引入了快速diff算法\",{\"1\":{\"217\":1,\"415\":1}}],[\"3的快速diff算法相比vue\",{\"1\":{\"218\":1,\"416\":1}}],[\"3的快速diff算法\",{\"0\":{\"217\":1,\"415\":1}}],[\"3则引入了快速diff算法\",{\"1\":{\"215\":1,\"413\":1}}],[\"3在diff算法上有所不同\",{\"1\":{\"215\":1,\"413\":1}}],[\"37680520\",{\"1\":{\"205\":1,\"403\":1}}],[\"3秒后执行sayhello函数\",{\"1\":{\"173\":1,\"371\":1}}],[\"3000\",{\"1\":{\"173\":1,\"371\":1}}],[\"300px\",{\"1\":{\"69\":1,\"267\":1}}],[\"30\",{\"1\":{\"88\":3,\"286\":3}}],[\"3\",{\"0\":{\"69\":1,\"168\":1,\"233\":1,\"237\":1,\"241\":1,\"245\":1,\"249\":1,\"267\":1,\"366\":1,\"431\":1,\"435\":1,\"439\":1,\"443\":1,\"447\":1},\"1\":{\"64\":1,\"65\":1,\"71\":2,\"76\":4,\"82\":1,\"85\":1,\"86\":1,\"93\":1,\"105\":4,\"106\":6,\"117\":6,\"120\":1,\"121\":7,\"128\":2,\"129\":1,\"173\":1,\"203\":1,\"206\":1,\"207\":1,\"219\":17,\"222\":3,\"223\":1,\"226\":1,\"262\":1,\"263\":1,\"269\":2,\"274\":4,\"280\":1,\"283\":1,\"284\":1,\"291\":1,\"303\":4,\"304\":6,\"315\":6,\"318\":1,\"319\":7,\"326\":2,\"327\":1,\"371\":1,\"401\":1,\"404\":1,\"405\":1,\"417\":17,\"420\":3,\"421\":1,\"424\":1}}],[\"内部重构\",{\"1\":{\"219\":1,\"417\":1}}],[\"内部如果要加载其他脚本\",{\"1\":{\"207\":1,\"405\":1}}],[\"内部的盒子会在垂直方向上一个接一个的放置\",{\"1\":{\"64\":1,\"262\":1}}],[\"内的脚本错误不会导致主线程崩溃\",{\"1\":{\"207\":1,\"405\":1}}],[\"内的内容\",{\"1\":{\"98\":1,\"296\":1}}],[\"内存分析\",{\"1\":{\"204\":2,\"402\":2}}],[\"内置对象是ecmascript规范中定义的对象\",{\"1\":{\"101\":1,\"299\":1}}],[\"内置对象是由ecmascript规范定义的对象\",{\"1\":{\"101\":1,\"299\":1}}],[\"内置对象\",{\"0\":{\"99\":1,\"101\":1,\"297\":1,\"299\":1},\"1\":{\"99\":1,\"102\":1,\"103\":1,\"297\":1,\"300\":1,\"301\":1}}],[\"内联元素居中布局\",{\"0\":{\"61\":1,\"259\":1}}],[\"内联元素和块级元素\",{\"1\":{\"60\":1,\"258\":1}}],[\"并想要创建一个仅针对其某个属性的响应式引用时\",{\"1\":{\"224\":1,\"422\":1}}],[\"并可能需要对现有的代码进行一些调整\",{\"1\":{\"219\":1,\"417\":1}}],[\"并可在该位置添加新元素\",{\"1\":{\"87\":1,\"285\":1}}],[\"并允许在\",{\"1\":{\"219\":1,\"417\":1}}],[\"并通过构建最长递增子序列\",{\"1\":{\"217\":1,\"415\":1}}],[\"并通过监听\",{\"1\":{\"207\":1,\"405\":1}}],[\"并对这些节点进行更新或移动\",{\"1\":{\"216\":1,\"414\":1}}],[\"并发送了一条消息\",{\"1\":{\"207\":1,\"405\":1}}],[\"并将\",{\"1\":{\"203\":1,\"401\":1}}],[\"并将其\",{\"1\":{\"88\":1,\"286\":1}}],[\"并更新元素的位置\",{\"1\":{\"193\":1,\"391\":1}}],[\"并相应地移动元素\",{\"1\":{\"188\":1,\"189\":1,\"386\":1,\"387\":1}}],[\"并阻止同一元素上其他同类型事件的执行\",{\"1\":{\"163\":1,\"361\":1}}],[\"并提供一个正确的示例\",{\"1\":{\"114\":1,\"312\":1}}],[\"并执行构造函数逻辑\",{\"1\":{\"88\":1,\"286\":1}}],[\"并返回一个包含\",{\"1\":{\"223\":1,\"421\":1}}],[\"并返回被删除的元素\",{\"1\":{\"87\":2,\"285\":2}}],[\"并返回新的长度\",{\"1\":{\"87\":2,\"285\":2}}],[\"并获取一个新的数组\",{\"1\":{\"86\":1,\"284\":1}}],[\"并且当原始值改变时\",{\"1\":{\"223\":1,\"421\":1}}],[\"并且在现代\",{\"1\":{\"211\":1,\"409\":1}}],[\"并且阻止同一元素上其他同类型事件的执行\",{\"1\":{\"160\":1,\"358\":1}}],[\"并且你有以下的javascript代码\",{\"1\":{\"145\":1,\"343\":1}}],[\"并且函数名是必需的\",{\"1\":{\"126\":1,\"324\":1}}],[\"并且可以指定事件处理的三个阶段\",{\"1\":{\"211\":1,\"409\":1}}],[\"并且可以使用事件对象的方法来控制事件的行为\",{\"1\":{\"164\":1,\"362\":1}}],[\"并且可以传递参数\",{\"1\":{\"96\":1,\"294\":1}}],[\"并且可以响应交互\",{\"1\":{\"73\":1,\"271\":1}}],[\"并且调用了它的构造函数来初始化属性\",{\"1\":{\"88\":1,\"286\":1}}],[\"并且basis和width同时存在basis会把width干掉\",{\"1\":{\"72\":1,\"270\":1}}],[\"并且有一套属于自己的渲染规则\",{\"1\":{\"64\":1,\"262\":1}}],[\"并没有计算子元素child的高度\",{\"1\":{\"68\":1,\"266\":1}}],[\"并触发父盒子生成一个bfc\",{\"1\":{\"67\":1,\"265\":1}}],[\"并使用\",{\"1\":{\"61\":2,\"62\":1,\"88\":1,\"259\":2,\"260\":1,\"286\":1}}],[\"xmlhttprequest\",{\"1\":{\"206\":1,\"404\":1}}],[\"xss\",{\"1\":{\"186\":1,\"384\":1}}],[\"xpos\",{\"1\":{\"166\":1,\"171\":2,\"364\":1,\"369\":2}}],[\"xxx\",{\"1\":{\"76\":2,\"274\":2}}],[\"x\",{\"1\":{\"62\":1,\"171\":1,\"260\":1,\"369\":1}}],[\"如tag\",{\"1\":{\"214\":1,\"412\":1}}],[\"如renderer\",{\"1\":{\"214\":1,\"412\":1}}],[\"如事件的类型\",{\"1\":{\"163\":1,\"361\":1}}],[\"如事件类型\",{\"1\":{\"159\":1,\"357\":1}}],[\"如具有索引和<span\",{\"1\":{\"116\":1,\"314\":1}}],[\"如数据类型\",{\"1\":{\"101\":1,\"299\":1}}],[\"如数组的遍历\",{\"1\":{\"85\":1,\"283\":1}}],[\"如浏览器或服务器\",{\"1\":{\"100\":1,\"298\":1}}],[\"如浏览器或node\",{\"1\":{\"100\":1,\"298\":1}}],[\"如何使用web\",{\"0\":{\"207\":1,\"405\":1}}],[\"如何使用事件捕获\",{\"0\":{\"152\":1,\"350\":1}}],[\"如何阻止事件捕获\",{\"0\":{\"154\":1,\"352\":1}}],[\"如何阻止事件冒泡\",{\"0\":{\"142\":1,\"146\":1,\"340\":1,\"344\":1}}],[\"如何实现数组的随机排序\",{\"0\":{\"128\":1,\"326\":1}}],[\"如何实现继承\",{\"0\":{\"89\":1,\"287\":1},\"1\":{\"75\":1,\"273\":1}}],[\"如何延长\",{\"0\":{\"127\":1,\"325\":1}}],[\"如何判断空对象\",{\"0\":{\"79\":1,\"277\":1}}],[\"如<span\",{\"1\":{\"78\":1,\"118\":1,\"132\":1,\"276\":1,\"316\":1,\"330\":1}}],[\"如\",{\"1\":{\"78\":1,\"193\":1,\"204\":4,\"207\":1,\"209\":1,\"210\":1,\"219\":2,\"276\":1,\"391\":1,\"402\":4,\"405\":1,\"407\":1,\"408\":1,\"417\":2}}],[\"如屏幕阅读器\",{\"1\":{\"73\":1,\"271\":1}}],[\"如果浏览器支持的话\",{\"1\":{\"209\":1,\"407\":1}}],[\"如果发生错误\",{\"1\":{\"207\":1,\"405\":1}}],[\"如果需要与\",{\"1\":{\"207\":1,\"405\":1}}],[\"如果需要检查对象是否完全没有属性\",{\"1\":{\"83\":1,\"281\":1}}],[\"如果开发者工具是打开状态\",{\"1\":{\"204\":1,\"402\":1}}],[\"如果返回值是一个对象\",{\"1\":{\"203\":1,\"401\":1}}],[\"如果将\",{\"1\":{\"202\":1,\"400\":1}}],[\"如果鼠标指针移动到其子元素上\",{\"1\":{\"199\":1,\"397\":1}}],[\"如果尝试读取它的值\",{\"1\":{\"184\":1,\"382\":1}}],[\"如果\",{\"1\":{\"180\":1,\"378\":1}}],[\"如果主线程被其他任务阻塞\",{\"1\":{\"177\":1,\"375\":1}}],[\"如果执行的函数耗时较长\",{\"1\":{\"177\":1,\"375\":1}}],[\"如果这些元素也不存在\",{\"1\":{\"168\":1,\"366\":1}}],[\"如果所有父元素都没有定位\",{\"1\":{\"168\":1,\"366\":1}}],[\"如果是\",{\"1\":{\"161\":1,\"359\":1}}],[\"如果设置为\",{\"1\":{\"139\":1,\"159\":1,\"337\":1,\"357\":1}}],[\"如果通过javascript更改\",{\"1\":{\"133\":1,\"331\":1}}],[\"如果当前上下文对象中不存在\",{\"1\":{\"127\":1,\"325\":1}}],[\"如果您希望日期和时间的格式完全按照您的要求\",{\"1\":{\"114\":1,\"312\":1}}],[\"如果函数需要返回一个空对象\",{\"1\":{\"109\":1,\"112\":1,\"307\":1,\"310\":1}}],[\"如果函数没有返回值\",{\"1\":{\"109\":1,\"112\":1,\"307\":1,\"310\":1}}],[\"如果比较的两个值类型不同\",{\"1\":{\"105\":1,\"106\":1,\"303\":1,\"304\":1}}],[\"如果两个值的类型不同\",{\"1\":{\"105\":1,\"106\":1,\"303\":1,\"304\":1}}],[\"如果面试官让你写\",{\"1\":{\"94\":1,\"292\":1}}],[\"如果我们在一个对象的原型上添加属性或者方法\",{\"1\":{\"92\":1,\"290\":1}}],[\"如果自身没有找到\",{\"1\":{\"92\":1,\"290\":1}}],[\"如果你点击了一个按钮\",{\"1\":{\"162\":1,\"360\":1}}],[\"如果你想阻止事件在捕获阶段继续传播\",{\"1\":{\"154\":1,\"352\":1}}],[\"如果你想在捕获阶段触发事件处理器\",{\"1\":{\"152\":1,\"350\":1}}],[\"如果你只想处理按钮的点击事件\",{\"1\":{\"147\":1,\"345\":1}}],[\"如果你只需要获取字符串属性名\",{\"1\":{\"83\":1,\"281\":1}}],[\"如果你需要获取元素的滚动位置\",{\"1\":{\"170\":1,\"368\":1}}],[\"如果你需要保留原始数组\",{\"1\":{\"128\":1,\"326\":1}}],[\"如果你需要表示一个变量尚未被初始化\",{\"1\":{\"113\":1,\"311\":1}}],[\"如果你需要表示一个变量指向一个空对象\",{\"1\":{\"113\":1,\"311\":1}}],[\"如果你需要在其他编程语言中实现类似的功能\",{\"1\":{\"88\":1,\"286\":1}}],[\"如果数组长度为0\",{\"1\":{\"83\":2,\"281\":2}}],[\"如果没有属性执行\",{\"1\":{\"83\":1,\"281\":1}}],[\"如果对象\",{\"1\":{\"82\":1,\"280\":1}}],[\"如果不是同一个引用\",{\"1\":{\"78\":1,\"276\":1}}],[\"如果页面上没有其他元素覆盖它\",{\"1\":{\"73\":1,\"271\":1}}],[\"如果已定义高度\",{\"1\":{\"62\":1,\"260\":1}}],[\"如点击\",{\"1\":{\"73\":2,\"271\":2}}],[\"如外边距合并问题\",{\"1\":{\"64\":1,\"262\":1}}],[\"如flexbox\",{\"1\":{\"60\":1,\"258\":1}}],[\"块级元素居中布局\",{\"0\":{\"62\":1,\"260\":1}}],[\"将仅追踪\",{\"1\":{\"224\":1,\"422\":1}}],[\"将一些任务分配给后者运行\",{\"1\":{\"205\":1,\"403\":1}}],[\"将新对象的原型指向构造函数\",{\"1\":{\"203\":1,\"401\":1}}],[\"将构造函数的this指向新对象\",{\"1\":{\"203\":2,\"401\":2}}],[\"将多个小图标合并到一个图片文件中\",{\"1\":{\"196\":1,\"394\":1}}],[\"将拖动的元素移动到放置区域\",{\"1\":{\"192\":1,\"390\":1}}],[\"将\",{\"1\":{\"128\":1,\"326\":1}}],[\"将变量声明提升到当前作用域的顶部\",{\"1\":{\"123\":1,\"321\":1}}],[\"将日期转换为本地字符串格式\",{\"1\":{\"114\":1,\"312\":1}}],[\"将其转换为本地字符串表示\",{\"1\":{\"114\":1,\"312\":1}}],[\"将创建的空对象原型\",{\"1\":{\"88\":1,\"286\":1}}],[\"将数组中的值通过回调函数处理后缩减为单一的返回值\",{\"1\":{\"87\":1,\"285\":1}}],[\"将对象转换为json字符串\",{\"1\":{\"78\":1,\"83\":1,\"276\":1,\"281\":1}}],[\"将元素的宽度和高度设置为0\",{\"1\":{\"73\":1,\"271\":1}}],[\"将元素的透明度设置为0\",{\"1\":{\"73\":1,\"271\":1}}],[\"将元素通过绝对定位移出视口外\",{\"1\":{\"73\":1,\"271\":1}}],[\"将父元素设置为\",{\"1\":{\"61\":1,\"259\":1}}],[\"将你的个人介绍和档案放置在此处\",{\"1\":{\"1\":1}}],[\"行内元素可以通过设置父元素的\",{\"1\":{\"61\":1,\"259\":1}}],[\"拓展这段代码定义了两个函数\",{\"1\":{\"178\":1,\"376\":1}}],[\"拓展\",{\"0\":{\"60\":1,\"258\":1},\"1\":{\"84\":1,\"109\":1,\"129\":1,\"134\":1,\"142\":1,\"149\":1,\"158\":1,\"162\":1,\"165\":1,\"172\":1,\"183\":1,\"188\":1,\"194\":1,\"198\":1,\"203\":1,\"204\":1,\"207\":1,\"211\":1,\"222\":1,\"282\":1,\"307\":1,\"327\":1,\"332\":1,\"340\":1,\"347\":1,\"356\":1,\"360\":1,\"363\":1,\"370\":1,\"381\":1,\"386\":1,\"392\":1,\"396\":1,\"401\":1,\"402\":1,\"405\":1,\"409\":1,\"420\":1}}],[\"默认情况下\",{\"1\":{\"159\":1,\"357\":1}}],[\"默认返回\",{\"1\":{\"111\":1,\"309\":1}}],[\"默认垂直居中\",{\"1\":{\"58\":1,\"59\":1,\"256\":1,\"257\":1}}],[\"默认水平居中\",{\"1\":{\"58\":1,\"59\":1,\"256\":1,\"257\":1}}],[\"主线程可以监听\",{\"1\":{\"207\":1,\"405\":1}}],[\"主线程就可以把它关掉\",{\"1\":{\"207\":1,\"405\":1}}],[\"主线程通过worker\",{\"1\":{\"207\":1,\"405\":1}}],[\"主线程调用worker\",{\"1\":{\"207\":1,\"405\":1}}],[\"主线程采用new命令\",{\"1\":{\"207\":1,\"405\":1}}],[\"主线程监听\",{\"1\":{\"207\":1,\"405\":1}}],[\"主线程创建了一个\",{\"1\":{\"207\":1,\"405\":1}}],[\"主线程和\",{\"1\":{\"207\":1,\"405\":1}}],[\"主要有三种事件模型\",{\"1\":{\"211\":1,\"409\":1}}],[\"主要有两种事件模型\",{\"1\":{\"158\":1,\"356\":1}}],[\"主要用于在文档加载时写入内容\",{\"1\":{\"183\":1,\"186\":1,\"381\":1,\"384\":1}}],[\"主要还是学会使用class\",{\"1\":{\"96\":1,\"294\":1}}],[\"主轴居中\",{\"1\":{\"58\":1,\"59\":1,\"256\":1,\"257\":1}}],[\"主页\",{\"0\":{\"0\":1,\"2\":1}}],[\"join\",{\"1\":{\"207\":1,\"405\":1}}],[\"jest\",{\"1\":{\"204\":1,\"402\":1}}],[\"jerome\",{\"1\":{\"88\":2,\"286\":2}}],[\"jpg\",{\"1\":{\"196\":2,\"394\":2}}],[\"juejin\",{\"1\":{\"77\":1,\"275\":1}}],[\"justify\",{\"1\":{\"58\":1,\"59\":1,\"256\":1,\"257\":1}}],[\"js框架中\",{\"1\":{\"215\":1,\"413\":1}}],[\"js中\",{\"1\":{\"100\":1,\"298\":1}}],[\"js\",{\"0\":{\"235\":1,\"433\":1},\"1\":{\"92\":1,\"96\":1,\"100\":1,\"207\":6,\"219\":1,\"290\":1,\"294\":1,\"298\":1,\"405\":6,\"417\":1},\"2\":{\"238\":1,\"436\":1}}],[\"json\",{\"1\":{\"78\":4,\"79\":1,\"83\":2,\"121\":2,\"276\":4,\"277\":1,\"281\":2,\"319\":2}}],[\"js的基础类型\",{\"1\":{\"75\":1,\"273\":1}}],[\"js相关\",{\"1\":{\"75\":1,\"273\":1}}],[\"jasmine\",{\"1\":{\"204\":1,\"402\":1}}],[\"james\",{\"1\":{\"97\":2,\"295\":2}}],[\"jack\",{\"1\":{\"97\":2,\"295\":2}}],[\"javascript是单线程模型\",{\"1\":{\"205\":1,\"403\":1}}],[\"javascript复制\",{\"1\":{\"158\":1,\"356\":1}}],[\"javascript中的对象是引用类型\",{\"1\":{\"78\":1,\"276\":1}}],[\"javascript\",{\"0\":{\"75\":1,\"208\":1,\"273\":1,\"406\":1},\"1\":{\"80\":1,\"87\":1,\"106\":1,\"108\":1,\"196\":1,\"203\":2,\"204\":2,\"205\":1,\"207\":1,\"211\":1,\"219\":1,\"278\":1,\"285\":1,\"304\":1,\"306\":1,\"394\":1,\"401\":2,\"402\":2,\"403\":1,\"405\":1,\"409\":1,\"417\":1},\"2\":{\"212\":1,\"410\":1}}],[\"january\",{\"1\":{\"41\":1}}],[\"垂直居中\",{\"1\":{\"57\":1,\"61\":1,\"62\":1,\"255\":1,\"259\":1,\"260\":1}}],[\"水平居中\",{\"1\":{\"57\":1,\"61\":1,\"62\":1,\"255\":1,\"259\":1,\"260\":1}}],[\"负值\",{\"0\":{\"56\":1,\"254\":1}}],[\">worker<\",{\"1\":{\"207\":1,\"405\":1}}],[\">window\",{\"1\":{\"211\":1,\"409\":1}}],[\">window<\",{\"1\":{\"100\":1,\"158\":3,\"207\":1,\"298\":1,\"356\":3,\"405\":1}}],[\">width<\",{\"1\":{\"72\":2,\"73\":1,\"167\":1,\"270\":2,\"271\":1,\"365\":1}}],[\">loading<\",{\"1\":{\"195\":1,\"393\":1}}],[\">let\",{\"1\":{\"203\":1,\"401\":1}}],[\">let<\",{\"1\":{\"123\":1,\"125\":2,\"321\":1,\"323\":2}}],[\">length<\",{\"1\":{\"116\":1,\"118\":1,\"314\":1,\"316\":1}}],[\">left\",{\"1\":{\"73\":1,\"271\":1}}],[\">left<\",{\"1\":{\"62\":2,\"73\":1,\"167\":1,\"260\":2,\"271\":1,\"365\":1}}],[\">放置区域<\",{\"1\":{\"192\":1,\"390\":1}}],[\">可拖动的元素<\",{\"1\":{\"192\":1,\"390\":1}}],[\">key<\",{\"1\":{\"179\":3,\"180\":4,\"182\":1,\"377\":3,\"378\":4,\"380\":1}}],[\">keydown<\",{\"1\":{\"162\":1,\"360\":1}}],[\">inject<\",{\"1\":{\"219\":1,\"417\":1}}],[\">innerhtml<\",{\"1\":{\"183\":2,\"185\":5,\"186\":5,\"187\":1,\"381\":2,\"383\":5,\"384\":5,\"385\":1}}],[\">interval<\",{\"1\":{\"174\":1,\"372\":1}}],[\">input\",{\"1\":{\"133\":3,\"331\":3}}],[\">bubbles<\",{\"1\":{\"160\":1,\"358\":1}}],[\">bottom<\",{\"1\":{\"167\":1,\"365\":1}}],[\">body<\",{\"1\":{\"158\":2,\"356\":2}}],[\">boolean<\",{\"1\":{\"101\":1,\"299\":1}}],[\">目标节点<\",{\"1\":{\"158\":2,\"356\":2}}],[\">父节点<\",{\"1\":{\"158\":2,\"356\":2}}],[\">handleclick<\",{\"1\":{\"164\":1,\"362\":1}}],[\">html<\",{\"1\":{\"158\":2,\"356\":2}}],[\">height<\",{\"1\":{\"72\":2,\"73\":1,\"167\":1,\"270\":2,\"271\":1,\"365\":1}}],[\">height\",{\"1\":{\"61\":1,\"73\":1,\"259\":1,\"271\":1}}],[\">点击我<\",{\"1\":{\"145\":1,\"343\":1}}],[\">queryselectorall\",{\"1\":{\"141\":1,\"339\":1}}],[\">queryselector\",{\"1\":{\"141\":1,\"339\":1}}],[\">right<\",{\"1\":{\"167\":1,\"365\":1}}],[\">randomindex<\",{\"1\":{\"128\":2,\"326\":2}}],[\">reactive<\",{\"1\":{\"225\":1,\"423\":1}}],[\">ref<\",{\"1\":{\"222\":2,\"223\":1,\"226\":1,\"420\":2,\"421\":1,\"424\":1}}],[\">reflect\",{\"1\":{\"80\":1,\"82\":2,\"83\":3,\"278\":1,\"280\":2,\"281\":3}}],[\">removeeventlistener<\",{\"1\":{\"157\":1,\"211\":1,\"355\":1,\"409\":1}}],[\">removechild\",{\"1\":{\"136\":1,\"334\":1}}],[\">replacechild\",{\"1\":{\"138\":1,\"336\":1}}],[\">replace\",{\"1\":{\"114\":1,\"312\":1}}],[\">reduce\",{\"1\":{\"87\":1,\"285\":1}}],[\">modelvalue<\",{\"1\":{\"223\":1,\"421\":1}}],[\">mouseenter<\",{\"1\":{\"198\":1,\"200\":2,\"201\":2,\"202\":4,\"396\":1,\"398\":2,\"399\":2,\"400\":4}}],[\">mouseover<\",{\"1\":{\"162\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":2,\"202\":4,\"360\":1,\"396\":1,\"397\":1,\"398\":1,\"399\":2,\"400\":4}}],[\">message<\",{\"1\":{\"207\":2,\"405\":2}}],[\">mynew<\",{\"1\":{\"203\":3,\"401\":3}}],[\">myclearinterval<\",{\"1\":{\"178\":1,\"182\":1,\"376\":1,\"380\":1}}],[\">mysetinterval<\",{\"1\":{\"178\":1,\"180\":2,\"182\":1,\"376\":1,\"378\":2,\"380\":1}}],[\">myfuncexpr\",{\"1\":{\"126\":1,\"324\":1}}],[\">myfuncexpr<\",{\"1\":{\"126\":2,\"324\":2}}],[\">myfunc<\",{\"1\":{\"124\":3,\"322\":3}}],[\">myvar<\",{\"1\":{\"123\":3,\"321\":3}}],[\">math<\",{\"1\":{\"101\":1,\"299\":1}}],[\">map\",{\"1\":{\"87\":1,\"285\":1}}],[\">map<\",{\"1\":{\"84\":1,\"86\":1,\"282\":1,\"284\":1}}],[\">margin\",{\"1\":{\"62\":4,\"260\":4}}],[\">==<\",{\"1\":{\"104\":1,\"106\":2,\"107\":1,\"302\":1,\"304\":2,\"305\":1}}],[\">===<\",{\"1\":{\"78\":2,\"104\":1,\"105\":3,\"107\":1,\"108\":1,\"276\":2,\"302\":1,\"303\":3,\"305\":1,\"306\":1}}],[\">execute<\",{\"1\":{\"179\":3,\"377\":3}}],[\">eventphase<\",{\"1\":{\"160\":1,\"358\":1}}],[\">event<\",{\"1\":{\"160\":1,\"211\":1,\"358\":1,\"409\":1}}],[\">event\",{\"1\":{\"146\":1,\"147\":2,\"148\":1,\"154\":2,\"159\":2,\"344\":1,\"345\":2,\"346\":1,\"352\":2,\"357\":2}}],[\">every\",{\"1\":{\"87\":1,\"285\":1}}],[\">element\",{\"1\":{\"130\":2,\"131\":2,\"328\":2,\"329\":2}}],[\">error<\",{\"1\":{\"101\":1,\"299\":1}}],[\">geolocation<\",{\"1\":{\"210\":1,\"408\":1}}],[\">getelementsbytagname\",{\"1\":{\"141\":1,\"339\":1}}],[\">getelementsbyclassname\",{\"1\":{\"141\":1,\"339\":1}}],[\">getelementbyid\",{\"1\":{\"141\":1,\"339\":1}}],[\">getattribute<\",{\"1\":{\"132\":1,\"330\":1}}],[\">g<\",{\"1\":{\"114\":1,\"312\":1}}],[\">global<\",{\"1\":{\"100\":1,\"298\":1}}],[\">greet<\",{\"1\":{\"88\":1,\"286\":1}}],[\">xmlhttprequest<\",{\"1\":{\"100\":1,\"298\":1}}],[\">app\",{\"1\":{\"219\":1,\"417\":1}}],[\">appendchild\",{\"1\":{\"135\":1,\"333\":1}}],[\">attachevent<\",{\"1\":{\"211\":1,\"409\":1}}],[\">absolute<\",{\"1\":{\"193\":1,\"391\":1}}],[\">addeventlistener<\",{\"1\":{\"152\":1,\"155\":1,\"157\":1,\"159\":2,\"211\":1,\"350\":1,\"353\":1,\"355\":1,\"357\":2,\"409\":1}}],[\">args<\",{\"1\":{\"203\":1,\"401\":1}}],[\">arg1\",{\"1\":{\"173\":1,\"174\":1,\"371\":1,\"372\":1}}],[\">arguments<\",{\"1\":{\"116\":1,\"118\":1,\"314\":1,\"316\":1}}],[\">array\",{\"1\":{\"117\":2,\"120\":1,\"121\":1,\"315\":2,\"318\":1,\"319\":1}}],[\">array<\",{\"1\":{\"101\":1,\"118\":1,\"299\":1,\"316\":1}}],[\">aria\",{\"1\":{\"73\":1,\"271\":1}}],[\">age<\",{\"1\":{\"88\":1,\"286\":1}}],[\">navigator\",{\"1\":{\"209\":11,\"210\":2,\"407\":11,\"408\":2}}],[\">navigator<\",{\"1\":{\"208\":1,\"210\":3,\"406\":1,\"408\":3}}],[\">name<\",{\"1\":{\"88\":1,\"225\":1,\"286\":1,\"423\":1}}],[\">null<\",{\"1\":{\"109\":2,\"110\":3,\"112\":3,\"113\":2,\"307\":2,\"308\":3,\"310\":3,\"311\":2}}],[\">number<\",{\"1\":{\"101\":1,\"299\":1}}],[\">new\",{\"1\":{\"88\":1,\"114\":1,\"286\":1,\"312\":1}}],[\">new<\",{\"1\":{\"88\":2,\"203\":4,\"286\":2,\"401\":4}}],[\">>\",{\"1\":{\"88\":2,\"97\":5,\"220\":1,\"286\":2,\"295\":5,\"418\":1}}],[\">count<\",{\"1\":{\"224\":1,\"225\":1,\"422\":1,\"423\":1}}],[\">countref<\",{\"1\":{\"224\":1,\"422\":1}}],[\">const<\",{\"1\":{\"123\":1,\"125\":2,\"321\":1,\"323\":2}}],[\">constructor<\",{\"1\":{\"88\":1,\"286\":1}}],[\">console\",{\"1\":{\"123\":2,\"124\":2,\"126\":1,\"204\":10,\"321\":2,\"322\":2,\"324\":1,\"402\":10}}],[\">console<\",{\"1\":{\"100\":1,\"204\":2,\"298\":1,\"402\":2}}],[\">concat\",{\"1\":{\"87\":2,\"285\":2}}],[\">cancelable<\",{\"1\":{\"160\":1,\"358\":1}}],[\">currenttarget<\",{\"1\":{\"160\":1,\"358\":1}}],[\">currentindex<\",{\"1\":{\"128\":4,\"326\":4}}],[\">createtextnode\",{\"1\":{\"140\":1,\"338\":1}}],[\">createelement\",{\"1\":{\"140\":1,\"338\":1}}],[\">class<\",{\"1\":{\"203\":1,\"401\":1}}],[\">cleartimeout<\",{\"1\":{\"176\":1,\"180\":1,\"374\":1,\"378\":1}}],[\">clearinterval<\",{\"1\":{\"175\":2,\"176\":1,\"178\":1,\"373\":2,\"374\":1,\"376\":1}}],[\">click<\",{\"1\":{\"162\":1,\"360\":1}}],[\">clip<\",{\"1\":{\"73\":1,\"271\":1}}],[\">clip\",{\"1\":{\"73\":3,\"271\":3}}],[\">clonenode\",{\"1\":{\"139\":1,\"337\":1}}],[\">suspense<\",{\"1\":{\"219\":1,\"417\":1}}],[\">src<\",{\"1\":{\"196\":1,\"394\":1}}],[\">setinterval<\",{\"1\":{\"172\":1,\"174\":1,\"175\":3,\"176\":1,\"177\":2,\"178\":2,\"182\":1,\"370\":1,\"372\":1,\"373\":3,\"374\":1,\"375\":2,\"376\":2,\"380\":1}}],[\">settimeout<\",{\"1\":{\"172\":1,\"173\":1,\"175\":4,\"176\":1,\"177\":2,\"178\":1,\"179\":1,\"370\":1,\"371\":1,\"373\":4,\"374\":1,\"375\":2,\"376\":1,\"377\":1}}],[\">setattribute<\",{\"1\":{\"132\":1,\"330\":1}}],[\">state<\",{\"1\":{\"224\":1,\"422\":1}}],[\">stopimmediatepropagation\",{\"1\":{\"160\":1,\"163\":1,\"358\":1,\"361\":1}}],[\">stoppropagation\",{\"1\":{\"160\":1,\"163\":1,\"358\":1,\"361\":1}}],[\">string<\",{\"1\":{\"101\":1,\"299\":1}}],[\">some\",{\"1\":{\"87\":1,\"285\":1}}],[\">slice\",{\"1\":{\"87\":2,\"285\":2}}],[\">shift\",{\"1\":{\"87\":1,\"285\":1}}],[\">splice\",{\"1\":{\"87\":3,\"285\":3}}],[\">symbol<\",{\"1\":{\"179\":1,\"182\":1,\"377\":1,\"380\":1}}],[\">symbol\",{\"1\":{\"82\":1,\"280\":1}}],[\">unshift\",{\"1\":{\"87\":1,\"285\":1}}],[\">undefined<\",{\"1\":{\"85\":1,\"109\":2,\"111\":4,\"112\":3,\"113\":2,\"123\":1,\"126\":1,\"283\":1,\"307\":2,\"309\":4,\"310\":3,\"311\":2,\"321\":1,\"324\":1}}],[\">provide<\",{\"1\":{\"219\":1,\"417\":1}}],[\">process<\",{\"1\":{\"100\":1,\"298\":1}}],[\">preload<\",{\"1\":{\"196\":2,\"394\":2}}],[\">preventdefault\",{\"1\":{\"160\":1,\"163\":1,\"358\":1,\"361\":1}}],[\">person1\",{\"1\":{\"88\":1,\"286\":1}}],[\">person<\",{\"1\":{\"88\":2,\"286\":2}}],[\">push\",{\"1\":{\"87\":2,\"285\":2}}],[\">postmessage\",{\"1\":{\"207\":1,\"405\":1}}],[\">position<\",{\"1\":{\"193\":1,\"391\":1}}],[\">position\",{\"1\":{\"73\":1,\"271\":1}}],[\">pop\",{\"1\":{\"87\":1,\"285\":1}}],[\">pointer\",{\"1\":{\"73\":1,\"271\":1}}],[\">defineproperty<\",{\"1\":{\"219\":1,\"417\":1}}],[\">detachevent<\",{\"1\":{\"211\":1,\"409\":1}}],[\">debugger<\",{\"1\":{\"204\":2,\"402\":2}}],[\">delay<\",{\"1\":{\"173\":1,\"371\":1}}],[\">dragend<\",{\"1\":{\"188\":1,\"191\":1,\"386\":1,\"389\":1}}],[\">dragover<\",{\"1\":{\"188\":1,\"191\":1,\"386\":1,\"389\":1}}],[\">dragstart<\",{\"1\":{\"188\":1,\"191\":1,\"386\":1,\"389\":1}}],[\">draggable=\",{\"1\":{\"188\":1,\"191\":1,\"386\":1,\"389\":1}}],[\">domcontentloaded<\",{\"1\":{\"184\":1,\"382\":1}}],[\">document\",{\"1\":{\"183\":2,\"184\":5,\"186\":4,\"381\":2,\"382\":5,\"384\":4}}],[\">document<\",{\"1\":{\"100\":1,\"144\":1,\"158\":1,\"193\":1,\"207\":1,\"298\":1,\"342\":1,\"356\":1,\"391\":1,\"405\":1}}],[\">documen<\",{\"1\":{\"158\":1,\"356\":1}}],[\">dispatchevent<\",{\"1\":{\"157\":1,\"355\":1}}],[\">display\",{\"1\":{\"61\":2,\"62\":3,\"73\":2,\"259\":2,\"260\":3,\"271\":2}}],[\">div<\",{\"1\":{\"145\":1,\"161\":2,\"343\":1,\"359\":2}}],[\">date<\",{\"1\":{\"78\":1,\"101\":1,\"276\":1,\"299\":1}}],[\">fragment<\",{\"1\":{\"219\":1,\"417\":1}}],[\">func\",{\"1\":{\"203\":2,\"401\":2}}],[\">func<\",{\"1\":{\"203\":1,\"401\":1}}],[\">function<\",{\"1\":{\"126\":1,\"173\":1,\"174\":1,\"324\":1,\"371\":1,\"372\":1}}],[\">fn<\",{\"1\":{\"179\":3,\"377\":3}}],[\">fixed<\",{\"1\":{\"193\":1,\"391\":1}}],[\">find\",{\"1\":{\"87\":1,\"285\":1}}],[\">filter\",{\"1\":{\"87\":1,\"285\":1}}],[\">foreach<\",{\"1\":{\"84\":1,\"85\":2,\"282\":1,\"283\":2}}],[\">for\",{\"1\":{\"83\":1,\"281\":1}}],[\">false<\",{\"1\":{\"78\":1,\"105\":2,\"159\":1,\"276\":1,\"303\":2,\"357\":1}}],[\">flex\",{\"1\":{\"72\":1,\"270\":1}}],[\">json<\",{\"1\":{\"101\":1,\"299\":1}}],[\">json\",{\"1\":{\"78\":1,\"121\":4,\"276\":1,\"319\":4}}],[\">justify\",{\"1\":{\"61\":1,\"259\":1}}],[\">onunmounted<\",{\"1\":{\"219\":1,\"417\":1}}],[\">onupdated<\",{\"1\":{\"219\":1,\"417\":1}}],[\">onbeforeunmount<\",{\"1\":{\"219\":1,\"417\":1}}],[\">onbeforeupdate<\",{\"1\":{\"219\":1,\"417\":1}}],[\">onbeforemount<\",{\"1\":{\"219\":1,\"417\":1}}],[\">onmounted<\",{\"1\":{\"219\":1,\"417\":1}}],[\">options<\",{\"1\":{\"114\":1,\"312\":1}}],[\">opacity\",{\"1\":{\"73\":1,\"271\":1}}],[\">obj<\",{\"1\":{\"82\":1,\"203\":3,\"280\":1,\"401\":3}}],[\">object<\",{\"1\":{\"101\":1,\"110\":1,\"299\":1,\"308\":1}}],[\">object\",{\"1\":{\"80\":1,\"81\":2,\"83\":3,\"121\":3,\"278\":1,\"279\":2,\"281\":3,\"319\":3}}],[\">overflow\",{\"1\":{\"73\":1,\"271\":1}}],[\">z\",{\"1\":{\"73\":2,\"271\":2}}],[\">v\",{\"1\":{\"223\":1,\"421\":1}}],[\">vue\",{\"1\":{\"219\":1,\"417\":1}}],[\">viewport<\",{\"1\":{\"195\":1,\"393\":1}}],[\">visibility\",{\"1\":{\"73\":2,\"271\":2}}],[\">value=\",{\"1\":{\"133\":1,\"331\":1}}],[\">value<\",{\"1\":{\"130\":1,\"132\":1,\"133\":2,\"328\":1,\"330\":1,\"331\":2}}],[\">var<\",{\"1\":{\"125\":1,\"323\":1}}],[\">vertical\",{\"1\":{\"61\":1,\"62\":1,\"259\":1,\"260\":1}}],[\">右侧自适应右侧自适应右侧自适应右侧自适应\",{\"1\":{\"69\":1,\"267\":1}}],[\">左侧定宽<\",{\"1\":{\"69\":1,\"267\":1}}],[\">teleport<\",{\"1\":{\"219\":1,\"417\":1}}],[\">terminate\",{\"1\":{\"207\":1,\"405\":1}}],[\">text\",{\"1\":{\"61\":1,\"259\":1}}],[\">this<\",{\"1\":{\"203\":1,\"401\":1}}],[\">timeworker<\",{\"1\":{\"179\":1,\"180\":2,\"377\":1,\"378\":2}}],[\">time<\",{\"1\":{\"179\":1,\"377\":1}}],[\">timestamp<\",{\"1\":{\"160\":1,\"358\":1}}],[\">target<\",{\"1\":{\"160\":1,\"358\":1}}],[\">true<\",{\"1\":{\"139\":1,\"152\":1,\"155\":1,\"159\":1,\"337\":1,\"350\":1,\"353\":1,\"357\":1}}],[\">transform\",{\"1\":{\"62\":1,\"260\":1}}],[\">type=\",{\"1\":{\"133\":1,\"331\":1}}],[\">type<\",{\"1\":{\"130\":1,\"133\":1,\"160\":1,\"328\":1,\"331\":1,\"358\":1}}],[\">typeof\",{\"1\":{\"112\":2,\"310\":2}}],[\">torefs<\",{\"1\":{\"222\":2,\"225\":1,\"226\":1,\"420\":2,\"423\":1,\"424\":1}}],[\">toref<\",{\"1\":{\"222\":2,\"224\":2,\"226\":1,\"420\":2,\"422\":2,\"424\":1}}],[\">tolocaletimestring\",{\"1\":{\"114\":1,\"312\":1}}],[\">tolocaledatestring\",{\"1\":{\"114\":1,\"312\":1}}],[\">tolocalestring\",{\"1\":{\"114\":2,\"312\":2}}],[\">top\",{\"1\":{\"73\":1,\"271\":1}}],[\">top<\",{\"1\":{\"62\":1,\"73\":1,\"167\":1,\"260\":1,\"271\":1,\"365\":1}}],[\">50\",{\"1\":{\"62\":1,\"260\":1}}],[\"><script><\",{\"1\":{\"219\":1,\"417\":1}}],[\"><img\",{\"1\":{\"195\":1,\"393\":1}}],[\"><input\",{\"1\":{\"130\":1,\"328\":1}}],[\"><body><\",{\"1\":{\"168\":1,\"366\":1}}],[\"><td><\",{\"1\":{\"168\":1,\"366\":1}}],[\"><table><\",{\"1\":{\"168\":1,\"366\":1}}],[\"><\",{\"1\":{\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"67\":4,\"68\":1,\"70\":3,\"130\":1,\"195\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"265\":4,\"266\":1,\"268\":3,\"328\":1,\"393\":1}}],[\">\",{\"1\":{\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"67\":1,\"68\":1,\"81\":1,\"82\":1,\"83\":1,\"88\":1,\"112\":2,\"114\":6,\"117\":1,\"128\":1,\"131\":2,\"133\":3,\"145\":1,\"158\":2,\"160\":2,\"161\":2,\"202\":2,\"220\":2,\"223\":5,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"265\":1,\"266\":1,\"279\":1,\"280\":1,\"281\":1,\"286\":1,\"310\":2,\"312\":6,\"315\":1,\"326\":1,\"329\":2,\"331\":3,\"343\":1,\"356\":2,\"358\":2,\"359\":2,\"400\":2,\"418\":2,\"421\":5}}],[\"<template>\",{\"1\":{\"223\":2,\"421\":2}}],[\"<p>hello\",{\"1\":{\"187\":1,\"385\":1}}],[\"<button>按钮2<\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"<button>按钮1<\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"<button\",{\"1\":{\"145\":1,\"343\":1}}],[\"<input\",{\"1\":{\"133\":1,\"223\":1,\"331\":1,\"421\":1}}],[\"<script>\",{\"1\":{\"192\":1,\"390\":1}}],[\"<strong>bold\",{\"1\":{\"187\":1,\"385\":1}}],[\"<style>\",{\"1\":{\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"67\":2,\"68\":1,\"69\":1,\"70\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"265\":2,\"266\":1,\"267\":1,\"268\":1}}],[\"<span\",{\"1\":{\"61\":6,\"62\":13,\"72\":5,\"73\":22,\"78\":3,\"80\":2,\"81\":3,\"82\":5,\"83\":5,\"84\":2,\"85\":3,\"86\":1,\"87\":18,\"88\":9,\"100\":6,\"101\":9,\"104\":2,\"105\":5,\"106\":2,\"107\":2,\"108\":1,\"109\":3,\"110\":4,\"111\":4,\"112\":10,\"113\":4,\"114\":14,\"116\":1,\"117\":1,\"118\":2,\"121\":5,\"123\":6,\"124\":4,\"125\":5,\"126\":5,\"128\":7,\"130\":3,\"131\":4,\"132\":1,\"133\":10,\"139\":1,\"144\":1,\"152\":1,\"155\":1,\"157\":3,\"158\":10,\"159\":3,\"160\":12,\"161\":1,\"162\":2,\"163\":2,\"167\":5,\"168\":2,\"172\":2,\"173\":4,\"174\":4,\"175\":9,\"176\":4,\"177\":3,\"178\":6,\"179\":13,\"180\":9,\"182\":5,\"183\":4,\"184\":6,\"185\":5,\"186\":9,\"187\":1,\"188\":2,\"191\":2,\"193\":2,\"195\":3,\"196\":1,\"198\":2,\"199\":1,\"200\":3,\"201\":4,\"202\":8,\"203\":17,\"204\":14,\"207\":7,\"208\":1,\"209\":10,\"210\":2,\"211\":6,\"219\":15,\"222\":6,\"223\":7,\"224\":5,\"225\":4,\"226\":3,\"259\":6,\"260\":13,\"270\":5,\"271\":22,\"276\":3,\"278\":2,\"279\":3,\"280\":5,\"281\":5,\"282\":2,\"283\":3,\"284\":1,\"285\":18,\"286\":9,\"298\":6,\"299\":9,\"302\":2,\"303\":5,\"304\":2,\"305\":2,\"306\":1,\"307\":3,\"308\":4,\"309\":4,\"310\":10,\"311\":4,\"312\":14,\"314\":1,\"315\":1,\"316\":2,\"319\":5,\"321\":6,\"322\":4,\"323\":5,\"324\":5,\"326\":7,\"328\":3,\"329\":4,\"330\":1,\"331\":10,\"337\":1,\"342\":1,\"350\":1,\"353\":1,\"355\":3,\"356\":10,\"357\":3,\"358\":12,\"359\":1,\"360\":2,\"361\":2,\"365\":5,\"366\":2,\"370\":2,\"371\":4,\"372\":4,\"373\":9,\"374\":4,\"375\":3,\"376\":6,\"377\":13,\"378\":9,\"380\":5,\"381\":4,\"382\":6,\"383\":5,\"384\":9,\"385\":1,\"386\":2,\"389\":2,\"391\":2,\"393\":3,\"394\":1,\"396\":2,\"397\":1,\"398\":3,\"399\":4,\"400\":8,\"401\":17,\"402\":14,\"405\":7,\"406\":1,\"407\":10,\"408\":2,\"409\":6,\"417\":15,\"420\":6,\"421\":7,\"422\":5,\"423\":4,\"424\":3}}],[\"<div>\",{\"1\":{\"223\":1,\"421\":1}}],[\"<div\",{\"1\":{\"55\":2,\"56\":2,\"57\":2,\"58\":2,\"59\":2,\"67\":5,\"68\":2,\"69\":2,\"70\":3,\"145\":1,\"158\":1,\"161\":1,\"192\":2,\"202\":2,\"253\":2,\"254\":2,\"255\":2,\"256\":2,\"257\":2,\"265\":5,\"266\":2,\"267\":2,\"268\":3,\"343\":1,\"356\":1,\"359\":1,\"390\":2,\"400\":2}}],[\"<\",{\"1\":{\"55\":2,\"56\":2,\"57\":2,\"58\":2,\"59\":2,\"61\":5,\"62\":7,\"67\":3,\"68\":2,\"69\":2,\"70\":1,\"73\":15,\"78\":1,\"80\":2,\"81\":3,\"82\":4,\"83\":7,\"87\":18,\"88\":3,\"97\":1,\"112\":2,\"114\":11,\"117\":3,\"120\":1,\"121\":8,\"126\":1,\"128\":1,\"130\":2,\"131\":3,\"133\":4,\"135\":1,\"136\":1,\"138\":1,\"139\":1,\"140\":2,\"141\":5,\"145\":1,\"146\":1,\"147\":2,\"148\":1,\"154\":2,\"158\":2,\"159\":2,\"160\":5,\"161\":2,\"163\":3,\"173\":1,\"174\":1,\"188\":1,\"191\":1,\"192\":1,\"202\":2,\"203\":3,\"204\":10,\"207\":2,\"220\":1,\"223\":4,\"253\":2,\"254\":2,\"255\":2,\"256\":2,\"257\":2,\"259\":5,\"260\":7,\"265\":3,\"266\":2,\"267\":2,\"268\":1,\"271\":15,\"276\":1,\"278\":2,\"279\":3,\"280\":4,\"281\":7,\"285\":18,\"286\":3,\"295\":1,\"310\":2,\"312\":11,\"315\":3,\"318\":1,\"319\":8,\"324\":1,\"326\":1,\"328\":2,\"329\":3,\"331\":4,\"333\":1,\"334\":1,\"336\":1,\"337\":1,\"338\":2,\"339\":5,\"343\":1,\"344\":1,\"345\":2,\"346\":1,\"352\":2,\"356\":2,\"357\":2,\"358\":5,\"359\":2,\"361\":3,\"371\":1,\"372\":1,\"386\":1,\"389\":1,\"390\":1,\"400\":2,\"401\":3,\"402\":10,\"405\":2,\"418\":1,\"421\":4}}],[\"0事件模型和dom\",{\"1\":{\"158\":1,\"356\":1}}],[\"0\",{\"1\":{\"55\":4,\"62\":1,\"72\":1,\"73\":7,\"79\":4,\"82\":2,\"83\":2,\"87\":1,\"97\":1,\"106\":4,\"108\":6,\"120\":1,\"128\":1,\"211\":1,\"220\":2,\"223\":1,\"224\":1,\"225\":1,\"253\":4,\"260\":1,\"270\":1,\"271\":7,\"277\":4,\"280\":2,\"281\":2,\"285\":1,\"295\":1,\"304\":4,\"306\":6,\"318\":1,\"326\":1,\"409\":1,\"418\":2,\"421\":1,\"422\":1,\"423\":1}}],[\"子元素交互\",{\"1\":{\"201\":1,\"399\":1}}],[\"子类中的方法和父类的同名\",{\"1\":{\"96\":1,\"294\":1}}],[\"子类在构造函数\",{\"1\":{\"96\":1,\"294\":1}}],[\"子类使用\",{\"1\":{\"96\":1,\"294\":1}}],[\"子\",{\"1\":{\"55\":2,\"253\":2}}],[\"位移50\",{\"1\":{\"55\":1,\"253\":1}}],[\"位移\",{\"0\":{\"55\":1,\"253\":1}}],[\"利用定位+margin\",{\"0\":{\"56\":1,\"254\":1}}],[\"利用定位\",{\"0\":{\"55\":1,\"253\":1}}],[\"+\",{\"0\":{\"55\":1,\"253\":1},\"1\":{\"32\":1,\"43\":1,\"55\":2,\"76\":1,\"96\":1,\"120\":1,\"171\":2,\"190\":2,\"207\":2,\"253\":2,\"274\":1,\"294\":1,\"318\":1,\"369\":2,\"388\":2,\"405\":2}}],[\"^\",{\"1\":{\"32\":1}}],[\"^i\",{\"1\":{\"32\":1}}],[\"^r\",{\"1\":{\"32\":2}}],[\"^first\",{\"1\":{\"30\":2}}],[\"=>\",{\"1\":{\"97\":2,\"120\":1,\"196\":1,\"220\":5,\"228\":5,\"295\":2,\"318\":1,\"394\":1,\"418\":5,\"426\":5}}],[\"==\",{\"1\":{\"88\":1,\"106\":4,\"108\":3,\"128\":1,\"286\":1,\"304\":4,\"306\":3,\"326\":1}}],[\"===\",{\"0\":{\"104\":1,\"302\":1},\"1\":{\"61\":1,\"76\":7,\"78\":2,\"79\":5,\"82\":2,\"83\":3,\"88\":1,\"97\":1,\"105\":2,\"108\":3,\"158\":1,\"161\":1,\"259\":1,\"274\":7,\"276\":2,\"277\":5,\"280\":2,\"281\":3,\"286\":1,\"295\":1,\"303\":2,\"306\":3,\"356\":1,\"359\":1}}],[\"=\",{\"1\":{\"32\":1,\"76\":34,\"78\":6,\"81\":1,\"82\":4,\"83\":4,\"85\":1,\"86\":2,\"88\":8,\"93\":9,\"96\":8,\"97\":5,\"113\":1,\"114\":3,\"117\":6,\"120\":5,\"121\":8,\"123\":2,\"126\":1,\"128\":9,\"135\":2,\"136\":2,\"137\":2,\"138\":3,\"139\":3,\"140\":2,\"141\":5,\"145\":2,\"149\":2,\"153\":2,\"158\":2,\"161\":2,\"164\":1,\"166\":3,\"167\":8,\"168\":2,\"169\":3,\"170\":3,\"171\":4,\"174\":1,\"176\":2,\"178\":5,\"181\":1,\"187\":2,\"190\":12,\"192\":3,\"196\":3,\"203\":6,\"207\":5,\"211\":3,\"220\":20,\"223\":1,\"224\":2,\"225\":2,\"228\":2,\"274\":34,\"276\":6,\"279\":1,\"280\":4,\"281\":4,\"283\":1,\"284\":2,\"286\":8,\"291\":9,\"294\":8,\"295\":5,\"311\":1,\"312\":3,\"315\":6,\"318\":5,\"319\":8,\"321\":2,\"324\":1,\"326\":9,\"333\":2,\"334\":2,\"335\":2,\"336\":3,\"337\":3,\"338\":2,\"339\":5,\"343\":2,\"347\":2,\"351\":2,\"356\":2,\"359\":2,\"362\":1,\"364\":3,\"365\":8,\"366\":2,\"367\":3,\"368\":3,\"369\":4,\"372\":1,\"374\":2,\"376\":5,\"379\":1,\"385\":2,\"388\":12,\"390\":3,\"394\":3,\"401\":6,\"405\":5,\"409\":3,\"418\":20,\"421\":1,\"422\":2,\"423\":2,\"426\":2}}],[\"run\",{\"1\":{\"176\":2,\"374\":2}}],[\"random\",{\"1\":{\"128\":1,\"326\":1}}],[\"randomindex\",{\"1\":{\"128\":4,\"326\":4}}],[\"routes\",{\"1\":{\"228\":1,\"426\":1}}],[\"router\",{\"1\":{\"228\":4,\"426\":4}}],[\"router的路由守卫\",{\"0\":{\"228\":1,\"426\":1}}],[\"rose\",{\"1\":{\"97\":2,\"295\":2}}],[\"room\",{\"1\":{\"97\":1,\"295\":1}}],[\"r\",{\"1\":{\"32\":3}}],[\"right\",{\"1\":{\"32\":3,\"55\":1,\"65\":1,\"69\":2,\"70\":5,\"167\":2,\"253\":1,\"263\":1,\"267\":2,\"268\":5,\"365\":2}}],[\"richer\",{\"1\":{\"27\":1}}],[\"react\",{\"0\":{\"231\":1,\"429\":1},\"2\":{\"234\":1,\"432\":1}}],[\"reactive\",{\"1\":{\"224\":1,\"225\":1,\"422\":1,\"423\":1}}],[\"read\",{\"1\":{\"23\":1,\"24\":1,\"26\":1}}],[\"received\",{\"1\":{\"207\":3,\"405\":3}}],[\"rect\",{\"1\":{\"73\":1,\"167\":7,\"171\":3,\"271\":1,\"365\":7,\"369\":3}}],[\"rel=\",{\"1\":{\"196\":1,\"394\":1}}],[\"relative\",{\"1\":{\"42\":1,\"55\":1,\"56\":1,\"171\":1,\"253\":1,\"254\":1,\"369\":1}}],[\"related\",{\"1\":{\"2\":1}}],[\"repeathello\",{\"1\":{\"174\":2,\"372\":2}}],[\"replacechild\",{\"1\":{\"138\":1,\"336\":1}}],[\"replaceme\",{\"1\":{\"138\":1,\"336\":1}}],[\"replace\",{\"1\":{\"76\":1,\"114\":2,\"274\":1,\"312\":2}}],[\"removechild\",{\"1\":{\"136\":1,\"334\":1}}],[\"removeme\",{\"1\":{\"136\":1,\"334\":1}}],[\"ref\",{\"0\":{\"223\":1,\"421\":1},\"1\":{\"223\":2,\"421\":2}}],[\"referenceerror\",{\"1\":{\"123\":1,\"321\":1}}],[\"reflect\",{\"0\":{\"82\":1,\"280\":1},\"1\":{\"79\":1,\"82\":3,\"277\":1,\"280\":3}}],[\"result\",{\"1\":{\"88\":4,\"203\":4,\"286\":4,\"401\":4}}],[\"return\",{\"1\":{\"76\":1,\"83\":1,\"86\":1,\"88\":1,\"93\":1,\"96\":2,\"97\":6,\"113\":2,\"117\":3,\"120\":1,\"128\":1,\"178\":1,\"203\":1,\"220\":4,\"228\":4,\"274\":1,\"281\":1,\"284\":1,\"286\":1,\"291\":1,\"294\":2,\"295\":6,\"311\":2,\"315\":3,\"318\":1,\"326\":1,\"376\":1,\"401\":1,\"418\":4,\"426\":4}}],[\"reduce\",{\"1\":{\"120\":2,\"318\":2}}],[\"red\",{\"1\":{\"56\":1,\"67\":3,\"68\":2,\"69\":1,\"70\":1,\"254\":1,\"265\":3,\"266\":2,\"267\":1,\"268\":1}}],[\"regarded\",{\"1\":{\"39\":1,\"40\":1}}],[\"vnode\",{\"1\":{\"214\":1,\"412\":1}}],[\"vendor<\",{\"1\":{\"209\":1,\"407\":1}}],[\"vertical\",{\"1\":{\"57\":1,\"255\":1}}],[\"v\",{\"1\":{\"158\":1,\"223\":1,\"356\":1,\"421\":1}}],[\"var\",{\"1\":{\"123\":1,\"126\":1,\"135\":2,\"136\":2,\"137\":2,\"138\":3,\"139\":3,\"140\":2,\"141\":5,\"178\":5,\"181\":1,\"187\":1,\"190\":2,\"192\":3,\"207\":1,\"211\":2,\"321\":1,\"324\":1,\"333\":2,\"334\":2,\"335\":2,\"336\":3,\"337\":3,\"338\":2,\"339\":5,\"376\":5,\"379\":1,\"385\":1,\"388\":2,\"390\":3,\"405\":1,\"409\":2}}],[\"variable\",{\"1\":{\"122\":1,\"320\":1}}],[\"val\",{\"1\":{\"120\":2,\"318\":2}}],[\"value<\",{\"1\":{\"133\":2,\"223\":3,\"331\":2,\"421\":3}}],[\"value=\",{\"1\":{\"130\":1,\"133\":1,\"328\":1,\"331\":1}}],[\"values\",{\"1\":{\"121\":5,\"319\":5}}],[\"value\",{\"1\":{\"81\":1,\"82\":1,\"97\":3,\"223\":1,\"279\":1,\"280\":1,\"295\":3,\"421\":1}}],[\"vue3中的ref\",{\"0\":{\"221\":1,\"419\":1}}],[\"vue3\",{\"1\":{\"220\":1,\"418\":1}}],[\"vue3双向绑定实现\",{\"0\":{\"220\":1,\"418\":1}}],[\"vue2和vue3有哪些不同\",{\"0\":{\"219\":1,\"417\":1}}],[\"vue\",{\"0\":{\"213\":1,\"216\":1,\"217\":1,\"228\":1,\"411\":1,\"414\":1,\"415\":1,\"426\":1},\"1\":{\"43\":2,\"215\":2,\"217\":1,\"218\":1,\"219\":21,\"222\":3,\"223\":2,\"224\":1,\"225\":2,\"226\":1,\"413\":2,\"415\":1,\"416\":1,\"417\":21,\"420\":3,\"421\":2,\"422\":1,\"423\":2,\"424\":1},\"2\":{\"230\":1,\"428\":1}}],[\"vuepress\",{\"0\":{\"26\":1},\"1\":{\"22\":2,\"24\":2,\"25\":1,\"26\":2,\"27\":1,\"42\":1}}],[\"visual\",{\"1\":{\"204\":1,\"402\":1}}],[\"visible\",{\"1\":{\"65\":1,\"263\":1}}],[\"viewport\",{\"1\":{\"171\":1,\"195\":1,\"369\":1,\"393\":1}}],[\"view\",{\"1\":{\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1}}],[\"via\",{\"1\":{\"25\":1}}],[\"model=\",{\"1\":{\"223\":1,\"421\":1}}],[\"modelvalue\",{\"1\":{\"223\":1,\"421\":1}}],[\"model<\",{\"1\":{\"223\":1,\"421\":1}}],[\"mozilla\",{\"1\":{\"209\":1,\"407\":1}}],[\"mocha\",{\"1\":{\"204\":1,\"402\":1}}],[\"mouseenter不存在\",{\"1\":{\"198\":1,\"396\":1}}],[\"mouseenter\",{\"0\":{\"200\":1,\"398\":1},\"1\":{\"198\":1,\"202\":3,\"396\":1,\"400\":3}}],[\"mouseup\",{\"1\":{\"188\":1,\"189\":1,\"386\":1,\"387\":1}}],[\"mousemove\",{\"1\":{\"188\":1,\"189\":1,\"386\":1,\"387\":1}}],[\"mousedown\",{\"1\":{\"188\":1,\"189\":1,\"386\":1,\"387\":1}}],[\"mouseover和mouseenter的区别\",{\"0\":{\"198\":1,\"396\":1}}],[\"mouseover\",{\"0\":{\"199\":1,\"397\":1},\"1\":{\"160\":1,\"198\":1,\"358\":1,\"396\":1}}],[\"moveme\",{\"1\":{\"137\":1,\"335\":1}}],[\"more\",{\"1\":{\"27\":1,\"39\":1}}],[\"microsoft\",{\"1\":{\"209\":1,\"407\":1}}],[\"mike\",{\"1\":{\"93\":1,\"96\":1,\"291\":1,\"294\":1}}],[\"middle\",{\"1\":{\"57\":1,\"61\":1,\"62\":1,\"255\":1,\"259\":1,\"260\":1}}],[\"myworker\",{\"1\":{\"207\":3,\"405\":3}}],[\"mynew\",{\"1\":{\"203\":2,\"401\":2}}],[\"myintervalkey\",{\"1\":{\"181\":2,\"379\":2}}],[\"myid\",{\"1\":{\"141\":1,\"339\":1}}],[\"mysetinterval\",{\"0\":{\"179\":1,\"377\":1},\"1\":{\"181\":1,\"379\":1}}],[\"mysetinterval=\",{\"1\":{\"178\":1,\"376\":1}}],[\"myclearinterval\",{\"0\":{\"180\":1,\"378\":1},\"1\":{\"178\":1,\"181\":1,\"376\":1,\"379\":1}}],[\"myclass\",{\"1\":{\"141\":3,\"339\":3}}],[\"myelement\",{\"1\":{\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"187\":1,\"364\":1,\"365\":1,\"366\":1,\"367\":1,\"368\":1,\"369\":1,\"385\":1}}],[\"mybutton\",{\"1\":{\"164\":1,\"211\":3,\"362\":1,\"409\":3}}],[\"myarray\",{\"1\":{\"128\":2,\"326\":2}}],[\"myfuncexpr\",{\"1\":{\"126\":3,\"324\":3}}],[\"myfunc\",{\"1\":{\"124\":3,\"322\":3}}],[\"mylet\",{\"1\":{\"123\":2,\"321\":2}}],[\"myvar\",{\"1\":{\"123\":2,\"321\":2}}],[\"my\",{\"1\":{\"88\":2,\"203\":2,\"286\":2,\"401\":2}}],[\"mmzuo\",{\"1\":{\"72\":1,\"270\":1}}],[\"m0\",{\"1\":{\"54\":1,\"252\":1}}],[\"message\",{\"1\":{\"207\":5,\"405\":5}}],[\"me\",{\"1\":{\"202\":1,\"400\":1}}],[\"means\",{\"1\":{\"43\":1}}],[\"meta\",{\"1\":{\"19\":1,\"228\":1,\"426\":1}}],[\"ms\",{\"1\":{\"41\":1}}],[\"md\",{\"1\":{\"27\":1}}],[\"main\",{\"1\":{\"207\":3,\"405\":3}}],[\"math\",{\"1\":{\"128\":2,\"326\":2}}],[\"matter\",{\"1\":{\"2\":1}}],[\"maps\",{\"1\":{\"204\":1,\"402\":1}}],[\"map\",{\"0\":{\"86\":1,\"284\":1},\"1\":{\"86\":1,\"220\":1,\"284\":1,\"418\":1}}],[\"man\",{\"1\":{\"76\":21,\"93\":1,\"96\":1,\"274\":21,\"291\":1,\"294\":1}}],[\"margin\",{\"1\":{\"55\":2,\"56\":2,\"67\":4,\"253\":2,\"254\":2,\"265\":4}}],[\"markdown\",{\"0\":{\"22\":1,\"23\":1,\"24\":1,\"25\":1},\"1\":{\"22\":2,\"23\":3,\"24\":1,\"25\":3,\"26\":2,\"27\":1,\"40\":2,\"41\":1,\"42\":2,\"43\":2},\"2\":{\"38\":1}}],[\"2的双端diff算法\",{\"0\":{\"216\":1,\"414\":1},\"1\":{\"218\":1,\"416\":1}}],[\"2使用的是双端diff算法\",{\"1\":{\"215\":1,\"413\":1}}],[\"2和vue\",{\"1\":{\"215\":1,\"413\":1}}],[\"2事件模型中\",{\"1\":{\"159\":1,\"357\":1}}],[\"2事件模型\",{\"0\":{\"159\":1,\"357\":1},\"1\":{\"158\":1,\"159\":1,\"356\":1,\"357\":1}}],[\"234\",{\"1\":{\"96\":1,\"294\":1}}],[\"25\",{\"1\":{\"93\":1,\"96\":1,\"291\":1,\"294\":1}}],[\"2000\",{\"1\":{\"174\":1,\"181\":1,\"372\":1,\"379\":1}}],[\"200px\",{\"1\":{\"56\":2,\"254\":2}}],[\"20px\",{\"1\":{\"67\":2,\"265\":2}}],[\"2020\",{\"1\":{\"41\":1}}],[\"2\",{\"0\":{\"91\":1,\"92\":1,\"167\":1,\"232\":1,\"236\":1,\"240\":1,\"244\":1,\"248\":1,\"289\":1,\"290\":1,\"365\":1,\"430\":1,\"434\":1,\"438\":1,\"442\":1,\"446\":1},\"1\":{\"16\":14,\"64\":1,\"65\":1,\"71\":4,\"76\":1,\"81\":1,\"82\":1,\"85\":1,\"86\":1,\"92\":1,\"96\":4,\"117\":6,\"120\":2,\"121\":7,\"128\":2,\"129\":1,\"145\":1,\"149\":1,\"153\":1,\"174\":1,\"203\":1,\"206\":1,\"207\":1,\"211\":6,\"219\":3,\"223\":1,\"262\":1,\"263\":1,\"269\":4,\"274\":1,\"279\":1,\"280\":1,\"283\":1,\"284\":1,\"290\":1,\"294\":4,\"315\":6,\"318\":2,\"319\":7,\"326\":2,\"327\":1,\"343\":1,\"347\":1,\"351\":1,\"372\":1,\"401\":1,\"404\":1,\"405\":1,\"409\":6,\"417\":3,\"421\":1}}],[\"117623499\",{\"1\":{\"205\":1,\"403\":1}}],[\"140249963\",{\"1\":{\"194\":1,\"392\":1}}],[\"1726711353383\",{\"1\":{\"156\":1,\"354\":1}}],[\"17246920\",{\"1\":{\"72\":1,\"270\":1}}],[\"17335549\",{\"1\":{\"88\":1,\"89\":1,\"286\":1,\"287\":1}}],[\"12\",{\"1\":{\"76\":4,\"93\":1,\"96\":1,\"274\":4,\"291\":1,\"294\":1}}],[\"12345678910111213\",{\"1\":{\"76\":2,\"274\":2}}],[\"123\",{\"1\":{\"76\":3,\"274\":3}}],[\"1实际代表的是三个属性的简写\",{\"1\":{\"72\":1,\"270\":1}}],[\"10\",{\"1\":{\"123\":1,\"239\":1,\"321\":1,\"437\":1}}],[\"101\",{\"1\":{\"97\":1,\"295\":1}}],[\"10000\",{\"1\":{\"176\":1,\"374\":1}}],[\"1000\",{\"1\":{\"176\":1,\"220\":1,\"374\":1,\"418\":1}}],[\"100\",{\"1\":{\"73\":1,\"271\":1}}],[\"100px\",{\"1\":{\"56\":2,\"67\":8,\"68\":2,\"70\":2,\"254\":2,\"265\":8,\"266\":2,\"268\":2}}],[\"10px\",{\"1\":{\"67\":2,\"68\":2,\"265\":2,\"266\":2}}],[\"139061021\",{\"1\":{\"208\":2,\"406\":2}}],[\"139324747\",{\"1\":{\"194\":1,\"392\":1}}],[\"137033829\",{\"1\":{\"205\":1,\"403\":1}}],[\"131005395\",{\"1\":{\"97\":2,\"295\":2}}],[\"131048599\",{\"1\":{\"63\":1,\"261\":1}}],[\"138100619\",{\"1\":{\"88\":1,\"89\":1,\"286\":1,\"287\":1}}],[\"133819940\",{\"1\":{\"88\":2,\"286\":2}}],[\"135777987\",{\"1\":{\"54\":1,\"252\":1}}],[\"19th\",{\"1\":{\"35\":1}}],[\"1\",{\"0\":{\"72\":1,\"92\":1,\"96\":1,\"166\":1,\"270\":1,\"290\":1,\"294\":1,\"364\":1},\"1\":{\"16\":12,\"32\":1,\"41\":1,\"43\":2,\"64\":1,\"65\":1,\"71\":3,\"72\":4,\"73\":1,\"76\":5,\"78\":6,\"81\":1,\"82\":1,\"85\":1,\"86\":2,\"92\":1,\"96\":1,\"117\":6,\"120\":3,\"121\":7,\"128\":3,\"129\":1,\"145\":1,\"149\":1,\"153\":1,\"203\":1,\"206\":1,\"207\":1,\"262\":1,\"263\":1,\"269\":3,\"270\":4,\"271\":1,\"274\":5,\"276\":6,\"279\":1,\"280\":1,\"283\":1,\"284\":2,\"290\":1,\"294\":1,\"315\":6,\"318\":3,\"319\":7,\"326\":3,\"327\":1,\"343\":1,\"347\":1,\"351\":1,\"401\":1,\"404\":1,\"405\":1}}],[\"effectstorun\",{\"1\":{\"220\":2,\"418\":2}}],[\"effects\",{\"1\":{\"220\":4,\"418\":4}}],[\"effect\",{\"1\":{\"220\":2,\"418\":2}}],[\"effectfn\",{\"1\":{\"220\":12,\"418\":12}}],[\"error\",{\"1\":{\"204\":1,\"207\":2,\"228\":2,\"402\":1,\"405\":2,\"426\":2}}],[\"every\",{\"1\":{\"174\":1,\"372\":1}}],[\"event<\",{\"1\":{\"211\":1,\"409\":1}}],[\"event\",{\"0\":{\"143\":1,\"163\":1,\"341\":1,\"361\":1},\"1\":{\"142\":1,\"145\":2,\"147\":3,\"149\":3,\"153\":2,\"154\":3,\"158\":2,\"159\":4,\"161\":2,\"162\":6,\"163\":1,\"164\":5,\"207\":4,\"340\":1,\"343\":2,\"345\":3,\"347\":3,\"351\":2,\"352\":3,\"356\":2,\"357\":4,\"359\":2,\"360\":6,\"361\":1,\"362\":5,\"405\":4}}],[\"events\",{\"1\":{\"73\":1,\"211\":1,\"271\":1,\"409\":1}}],[\"element\",{\"1\":{\"141\":2,\"159\":1,\"166\":3,\"167\":2,\"168\":2,\"169\":3,\"170\":3,\"171\":2,\"187\":2,\"339\":2,\"357\":1,\"364\":3,\"365\":2,\"366\":2,\"367\":3,\"368\":3,\"369\":2,\"385\":2}}],[\"elementtocopy\",{\"1\":{\"139\":2,\"337\":2}}],[\"elementtomove\",{\"1\":{\"137\":2,\"335\":2}}],[\"elementtoremove\",{\"1\":{\"136\":3,\"334\":3}}],[\"elements\",{\"1\":{\"19\":1,\"141\":3,\"339\":3}}],[\"else\",{\"1\":{\"97\":1,\"295\":1}}],[\"es6\",{\"0\":{\"95\":1,\"293\":1},\"1\":{\"94\":1,\"96\":5,\"292\":1,\"294\":5}}],[\"es5\",{\"1\":{\"93\":1,\"94\":1,\"96\":2,\"291\":1,\"292\":1,\"294\":2}}],[\"ed7zgee9x\",{\"1\":{\"88\":2,\"286\":2}}],[\"edit\",{\"1\":{\"13\":1}}],[\"empty\",{\"1\":{\"83\":2,\"281\":2}}],[\"e\",{\"1\":{\"42\":1,\"158\":6,\"190\":6,\"192\":5,\"207\":9,\"356\":6,\"388\":6,\"390\":5,\"405\":9}}],[\"express\",{\"0\":{\"239\":1,\"437\":1},\"2\":{\"242\":1,\"440\":1}}],[\"explorer\",{\"1\":{\"209\":1,\"211\":1,\"407\":1,\"409\":1}}],[\"execute\",{\"1\":{\"178\":3,\"376\":3}}],[\"excerpt\",{\"1\":{\"39\":1}}],[\"extends\",{\"1\":{\"27\":1,\"96\":3,\"294\":3}}],[\"extended\",{\"1\":{\"26\":1}}],[\"extensions\",{\"1\":{\"25\":1,\"26\":2}}],[\"extension\",{\"0\":{\"25\":1}}],[\"early\",{\"1\":{\"97\":1,\"295\":1}}],[\"easily\",{\"1\":{\"22\":1}}],[\"each\",{\"1\":{\"19\":1,\"24\":1,\"43\":1}}],[\"entry\",{\"1\":{\"97\":1,\"295\":1}}],[\"entries\",{\"1\":{\"79\":1,\"83\":2,\"121\":3,\"277\":1,\"281\":2,\"319\":3}}],[\"end\",{\"1\":{\"87\":1,\"285\":1}}],[\"enumerable\",{\"1\":{\"81\":1,\"82\":1,\"279\":1,\"280\":1}}],[\"enrich\",{\"1\":{\"26\":1}}],[\"enhancement\",{\"0\":{\"26\":1,\"27\":1,\"34\":1}}],[\"enhance\",{\"0\":{\"22\":1},\"1\":{\"27\":1}}],[\"encryption\",{\"0\":{\"16\":1},\"2\":{\"18\":1}}],[\"ui\",{\"1\":{\"207\":1,\"405\":1}}],[\"url\",{\"1\":{\"196\":2,\"394\":2}}],[\"until\",{\"1\":{\"176\":1,\"374\":1}}],[\"undefvar\",{\"1\":{\"76\":1,\"274\":1}}],[\"undefined<\",{\"1\":{\"112\":1,\"310\":1}}],[\"undefined的区别\",{\"0\":{\"109\":1,\"307\":1}}],[\"undefined这种就调用不了constructor判断数据类型了\",{\"1\":{\"76\":1,\"274\":1}}],[\"undefined\",{\"0\":{\"111\":1,\"309\":1},\"1\":{\"76\":3,\"97\":2,\"108\":4,\"109\":1,\"112\":1,\"113\":3,\"123\":1,\"126\":1,\"274\":3,\"295\":2,\"306\":4,\"307\":1,\"310\":1,\"311\":3,\"321\":1,\"324\":1}}],[\"update\",{\"1\":{\"13\":1,\"19\":1,\"223\":1,\"421\":1}}],[\"using\",{\"1\":{\"24\":1,\"27\":1}}],[\"us\",{\"0\":{\"6\":1,\"48\":1}}],[\"user\",{\"1\":{\"210\":1,\"408\":1}}],[\"useragent<\",{\"1\":{\"209\":1,\"210\":1,\"407\":1,\"408\":1}}],[\"use\",{\"1\":{\"2\":1,\"22\":1,\"42\":2,\"43\":1}}],[\"longest\",{\"1\":{\"217\":1,\"415\":1}}],[\"loading=\",{\"1\":{\"195\":1,\"393\":1}}],[\"loading\",{\"1\":{\"194\":1,\"392\":1}}],[\"lodash\",{\"1\":{\"78\":2,\"276\":2}}],[\"logerror\",{\"1\":{\"228\":1,\"426\":1}}],[\"loginfo\",{\"1\":{\"228\":1,\"426\":1}}],[\"login\",{\"1\":{\"228\":2,\"426\":2}}],[\"log<\",{\"1\":{\"123\":2,\"124\":2,\"126\":1,\"321\":2,\"322\":2,\"324\":1}}],[\"log\",{\"1\":{\"32\":2,\"78\":3,\"81\":1,\"82\":3,\"83\":5,\"85\":1,\"86\":1,\"88\":2,\"93\":3,\"96\":3,\"97\":2,\"113\":2,\"114\":1,\"123\":2,\"124\":2,\"126\":2,\"128\":3,\"145\":2,\"147\":2,\"149\":2,\"153\":2,\"154\":2,\"158\":1,\"159\":2,\"161\":1,\"164\":3,\"171\":1,\"173\":1,\"174\":1,\"176\":2,\"181\":1,\"202\":2,\"203\":1,\"204\":1,\"207\":4,\"220\":3,\"276\":3,\"279\":1,\"280\":3,\"281\":5,\"283\":1,\"284\":1,\"286\":2,\"291\":3,\"294\":3,\"295\":2,\"311\":2,\"312\":1,\"321\":2,\"322\":2,\"324\":2,\"326\":3,\"343\":2,\"345\":2,\"347\":2,\"351\":2,\"352\":2,\"356\":1,\"357\":2,\"359\":1,\"362\":3,\"369\":1,\"371\":1,\"372\":1,\"374\":2,\"379\":1,\"400\":2,\"401\":1,\"402\":1,\"405\":4,\"418\":3}}],[\"lis\",{\"1\":{\"217\":1,\"415\":1}}],[\"lily\",{\"1\":{\"76\":4,\"97\":3,\"274\":4,\"295\":3}}],[\"linux\",{\"0\":{\"243\":1,\"441\":1},\"2\":{\"246\":1,\"444\":1}}],[\"lineno\",{\"1\":{\"207\":1,\"405\":1}}],[\"line\",{\"1\":{\"61\":1,\"207\":1,\"259\":1,\"405\":1}}],[\"links\",{\"1\":{\"42\":2}}],[\"link\",{\"1\":{\"13\":2,\"196\":1,\"394\":1}}],[\"lazy\",{\"1\":{\"194\":2,\"195\":1,\"392\":2,\"393\":1}}],[\"language<\",{\"1\":{\"209\":1,\"407\":1}}],[\"lang\",{\"1\":{\"96\":2,\"294\":2}}],[\"last\",{\"1\":{\"67\":2,\"265\":2}}],[\"layout\",{\"0\":{\"13\":1,\"19\":1},\"1\":{\"0\":1,\"2\":2,\"13\":1,\"19\":1},\"2\":{\"21\":1}}],[\"level\",{\"0\":{\"159\":1,\"357\":1},\"1\":{\"158\":2,\"159\":2,\"211\":1,\"356\":2,\"357\":2,\"409\":1}}],[\"let\",{\"1\":{\"83\":1,\"85\":1,\"86\":2,\"88\":1,\"97\":1,\"113\":2,\"114\":1,\"117\":6,\"120\":4,\"121\":8,\"123\":1,\"128\":1,\"220\":4,\"281\":1,\"283\":1,\"284\":2,\"286\":1,\"295\":1,\"311\":2,\"312\":1,\"315\":6,\"318\":4,\"319\":8,\"321\":1,\"326\":1,\"418\":4}}],[\"length\",{\"1\":{\"79\":4,\"82\":2,\"83\":2,\"97\":1,\"128\":1,\"220\":2,\"277\":4,\"280\":2,\"281\":2,\"295\":1,\"326\":1,\"418\":2}}],[\"left<\",{\"1\":{\"62\":2,\"260\":2}}],[\"left\",{\"1\":{\"32\":3,\"55\":2,\"56\":2,\"68\":1,\"69\":3,\"70\":5,\"71\":1,\"166\":1,\"167\":2,\"171\":1,\"190\":1,\"253\":2,\"254\":2,\"266\":1,\"267\":3,\"268\":5,\"269\":1,\"364\":1,\"365\":2,\"369\":1,\"388\":1}}],[\"learner\",{\"1\":{\"23\":1}}],[\"node\",{\"0\":{\"235\":1,\"433\":1},\"2\":{\"238\":1,\"436\":1}}],[\"not\",{\"1\":{\"83\":1,\"176\":1,\"281\":1,\"374\":1,\"449\":1}}],[\"none\",{\"1\":{\"73\":3,\"271\":3}}],[\"navigator对象详解\",{\"0\":{\"208\":1,\"406\":1}}],[\"navigator\",{\"0\":{\"208\":1,\"406\":1}}],[\"navbar\",{\"1\":{\"13\":1,\"19\":1}}],[\"native\",{\"0\":{\"102\":1,\"300\":1},\"1\":{\"99\":1,\"297\":1}}],[\"nation\",{\"1\":{\"96\":2,\"294\":2}}],[\"name\",{\"1\":{\"76\":12,\"88\":12,\"93\":2,\"96\":2,\"97\":3,\"203\":6,\"225\":2,\"228\":2,\"274\":12,\"286\":12,\"291\":2,\"294\":2,\"295\":3,\"401\":6,\"423\":2,\"426\":2}}],[\"nu\",{\"1\":{\"76\":2,\"274\":2}}],[\"null<\",{\"1\":{\"112\":1,\"310\":1}}],[\"null\",{\"0\":{\"109\":1,\"110\":1,\"307\":1,\"308\":1},\"1\":{\"76\":4,\"88\":1,\"92\":1,\"108\":4,\"109\":1,\"113\":5,\"190\":2,\"274\":4,\"286\":1,\"290\":1,\"306\":4,\"307\":1,\"311\":5,\"388\":2}}],[\"numbers\",{\"1\":{\"85\":2,\"86\":2,\"283\":2,\"284\":2}}],[\"number\",{\"1\":{\"76\":3,\"85\":2,\"86\":3,\"274\":3,\"283\":2,\"284\":3}}],[\"num\",{\"1\":{\"76\":6,\"93\":2,\"96\":2,\"274\":6,\"291\":2,\"294\":2}}],[\"nd\",{\"1\":{\"42\":1}}],[\"ne\",{\"1\":{\"61\":6,\"62\":13,\"72\":5,\"73\":22,\"78\":5,\"80\":2,\"81\":3,\"82\":5,\"83\":8,\"84\":2,\"85\":3,\"86\":1,\"87\":18,\"88\":11,\"100\":6,\"101\":9,\"104\":2,\"105\":5,\"106\":2,\"107\":2,\"108\":1,\"109\":4,\"110\":4,\"111\":4,\"112\":10,\"113\":4,\"114\":14,\"116\":2,\"117\":3,\"118\":3,\"120\":1,\"121\":8,\"123\":8,\"124\":5,\"125\":5,\"126\":6,\"128\":7,\"130\":5,\"131\":4,\"132\":3,\"133\":10,\"135\":1,\"136\":1,\"138\":1,\"139\":2,\"140\":2,\"141\":5,\"144\":1,\"145\":1,\"146\":1,\"147\":2,\"148\":1,\"152\":2,\"154\":2,\"155\":2,\"157\":3,\"158\":13,\"159\":6,\"160\":13,\"161\":2,\"162\":3,\"163\":3,\"164\":1,\"167\":6,\"168\":3,\"172\":2,\"173\":4,\"174\":4,\"175\":9,\"176\":4,\"177\":4,\"178\":6,\"179\":13,\"180\":9,\"182\":5,\"183\":4,\"184\":6,\"185\":5,\"186\":9,\"187\":1,\"188\":4,\"191\":4,\"193\":4,\"195\":3,\"196\":3,\"198\":2,\"199\":1,\"200\":3,\"201\":4,\"202\":8,\"203\":17,\"204\":14,\"207\":7,\"208\":1,\"209\":11,\"210\":6,\"211\":6,\"219\":15,\"222\":6,\"223\":7,\"224\":5,\"225\":4,\"226\":3,\"259\":6,\"260\":13,\"270\":5,\"271\":22,\"276\":5,\"278\":2,\"279\":3,\"280\":5,\"281\":8,\"282\":2,\"283\":3,\"284\":1,\"285\":18,\"286\":11,\"298\":6,\"299\":9,\"302\":2,\"303\":5,\"304\":2,\"305\":2,\"306\":1,\"307\":4,\"308\":4,\"309\":4,\"310\":10,\"311\":4,\"312\":14,\"314\":2,\"315\":3,\"316\":3,\"318\":1,\"319\":8,\"321\":8,\"322\":5,\"323\":5,\"324\":6,\"326\":7,\"328\":5,\"329\":4,\"330\":3,\"331\":10,\"333\":1,\"334\":1,\"336\":1,\"337\":2,\"338\":2,\"339\":5,\"342\":1,\"343\":1,\"344\":1,\"345\":2,\"346\":1,\"350\":2,\"352\":2,\"353\":2,\"355\":3,\"356\":13,\"357\":6,\"358\":13,\"359\":2,\"360\":3,\"361\":3,\"362\":1,\"365\":6,\"366\":3,\"370\":2,\"371\":4,\"372\":4,\"373\":9,\"374\":4,\"375\":4,\"376\":6,\"377\":13,\"378\":9,\"380\":5,\"381\":4,\"382\":6,\"383\":5,\"384\":9,\"385\":1,\"386\":4,\"389\":4,\"391\":4,\"393\":3,\"394\":3,\"396\":2,\"397\":1,\"398\":3,\"399\":4,\"400\":8,\"401\":17,\"402\":14,\"405\":7,\"406\":1,\"407\":11,\"408\":6,\"409\":6,\"417\":15,\"420\":6,\"421\":7,\"422\":5,\"423\":4,\"424\":3}}],[\"need\",{\"1\":{\"24\":1}}],[\"newvalue\",{\"1\":{\"220\":4,\"418\":4}}],[\"new操作符做了哪些事情\",{\"0\":{\"203\":1,\"401\":1}}],[\"newtext\",{\"1\":{\"140\":1,\"338\":1}}],[\"newparent\",{\"1\":{\"137\":3,\"335\":3}}],[\"newelement\",{\"1\":{\"135\":2,\"138\":2,\"140\":1,\"333\":2,\"336\":2,\"338\":1}}],[\"newfn\",{\"1\":{\"88\":2,\"286\":2}}],[\"new\",{\"1\":{\"23\":1,\"76\":4,\"88\":1,\"93\":3,\"96\":3,\"97\":1,\"114\":2,\"196\":1,\"207\":2,\"220\":5,\"274\":4,\"286\":1,\"291\":3,\"294\":3,\"295\":1,\"312\":2,\"394\":1,\"405\":2,\"418\":5}}],[\"next\",{\"1\":{\"13\":1,\"97\":1,\"228\":3,\"295\":1,\"426\":3}}],[\"net\",{\"1\":{\"4\":1,\"46\":1,\"54\":1,\"63\":1,\"88\":3,\"89\":1,\"97\":2,\"194\":2,\"205\":2,\"208\":2,\"252\":1,\"261\":1,\"286\":3,\"287\":1,\"295\":2,\"392\":2,\"403\":2,\"406\":2}}],[\"option\",{\"0\":{\"229\":1,\"427\":1}}],[\"options\",{\"1\":{\"19\":1}}],[\"out\",{\"1\":{\"204\":1,\"402\":1}}],[\"over\",{\"1\":{\"202\":1,\"204\":1,\"400\":1,\"402\":1}}],[\"overflow\",{\"1\":{\"67\":1,\"68\":2,\"69\":1,\"70\":1,\"71\":1,\"265\":1,\"266\":2,\"267\":1,\"268\":1,\"269\":1}}],[\"overflow值不为\",{\"1\":{\"65\":1,\"263\":1}}],[\"observer\",{\"1\":{\"195\":1,\"393\":1}}],[\"obj2\",{\"1\":{\"78\":7,\"276\":7}}],[\"obj1\",{\"1\":{\"78\":7,\"276\":7}}],[\"obj\",{\"1\":{\"76\":9,\"79\":5,\"81\":3,\"82\":7,\"83\":9,\"88\":3,\"90\":1,\"120\":2,\"121\":8,\"203\":7,\"220\":3,\"274\":9,\"277\":5,\"279\":3,\"280\":7,\"281\":9,\"286\":3,\"288\":1,\"318\":2,\"319\":8,\"401\":7,\"418\":3}}],[\"objects\",{\"0\":{\"100\":1,\"101\":1,\"102\":1,\"298\":1,\"299\":1,\"300\":1},\"1\":{\"99\":3,\"297\":3}}],[\"object\",{\"0\":{\"81\":1,\"163\":1,\"279\":1,\"361\":1},\"1\":{\"76\":40,\"79\":5,\"80\":1,\"81\":2,\"82\":3,\"83\":6,\"88\":2,\"90\":1,\"92\":3,\"93\":5,\"112\":1,\"121\":3,\"163\":1,\"203\":1,\"219\":1,\"274\":40,\"277\":5,\"278\":1,\"279\":2,\"280\":3,\"281\":6,\"286\":2,\"288\":1,\"290\":3,\"291\":5,\"310\":1,\"319\":3,\"361\":1,\"401\":1,\"417\":1}}],[\"oldelement\",{\"1\":{\"138\":3,\"336\":3}}],[\"old\",{\"1\":{\"88\":2,\"286\":2}}],[\"ownkeys\",{\"0\":{\"82\":1,\"280\":1},\"1\":{\"79\":1,\"80\":2,\"82\":5,\"83\":3,\"277\":1,\"278\":2,\"280\":5,\"281\":3}}],[\"own\",{\"1\":{\"43\":1}}],[\"omega^i\",{\"1\":{\"32\":1}}],[\"omega^r\",{\"1\":{\"32\":1}}],[\"omega\",{\"1\":{\"32\":4}}],[\"originalarray\",{\"1\":{\"128\":3,\"326\":3}}],[\"or\",{\"1\":{\"22\":1}}],[\"offsety\",{\"1\":{\"190\":3,\"388\":3}}],[\"offsetx\",{\"1\":{\"190\":3,\"388\":3}}],[\"offsetparent\",{\"1\":{\"168\":1,\"366\":1}}],[\"offsettop\",{\"1\":{\"166\":1,\"364\":1}}],[\"offsetleft\",{\"1\":{\"166\":1,\"364\":1}}],[\"offset\",{\"1\":{\"166\":1,\"364\":1}}],[\"of\",{\"1\":{\"13\":1,\"19\":1,\"97\":1,\"295\":1}}],[\"onclick\",{\"1\":{\"211\":2,\"409\":2}}],[\"online<\",{\"1\":{\"209\":1,\"407\":1}}],[\"onmessage指定监听函数\",{\"1\":{\"207\":1,\"405\":1}}],[\"onmessage\",{\"1\":{\"207\":5,\"405\":5}}],[\"onmouseenter=\",{\"1\":{\"202\":2,\"400\":2}}],[\"onmouseup\",{\"1\":{\"190\":2,\"388\":2}}],[\"onmousemove\",{\"1\":{\"190\":2,\"388\":2}}],[\"onmousedown\",{\"1\":{\"190\":1,\"388\":1}}],[\"onerror\",{\"1\":{\"207\":1,\"228\":1,\"405\":1,\"426\":1}}],[\"one\",{\"1\":{\"97\":1,\"295\":1}}],[\"on\",{\"1\":{\"13\":1,\"171\":2,\"369\":2}}],[\"globalproperties<\",{\"1\":{\"219\":1,\"417\":1}}],[\"gulp\",{\"1\":{\"204\":1,\"402\":1}}],[\"guide\",{\"1\":{\"41\":2},\"2\":{\"12\":1,\"14\":1,\"17\":1,\"20\":1,\"37\":1,\"44\":1,\"45\":1}}],[\"g<\",{\"1\":{\"114\":1,\"312\":1}}],[\"g\",{\"1\":{\"114\":2,\"312\":2}}],[\"geolocation<\",{\"1\":{\"209\":1,\"407\":1}}],[\"gender\",{\"1\":{\"93\":3,\"96\":3,\"291\":3,\"294\":3}}],[\"generator\",{\"1\":{\"75\":1,\"97\":1,\"273\":1,\"295\":1}}],[\"generate\",{\"1\":{\"22\":2}}],[\"get\",{\"1\":{\"220\":7,\"418\":7}}],[\"getdata\",{\"1\":{\"192\":1,\"390\":1}}],[\"getdes\",{\"1\":{\"96\":2,\"294\":2}}],[\"getboundingclientrect\",{\"1\":{\"167\":1,\"171\":1,\"365\":1,\"369\":1}}],[\"getelementsbytagname\",{\"1\":{\"141\":1,\"339\":1}}],[\"getelementsbyclassname\",{\"1\":{\"141\":1,\"339\":1}}],[\"getelementbyid\",{\"1\":{\"135\":1,\"136\":1,\"137\":2,\"138\":1,\"139\":2,\"141\":1,\"145\":2,\"149\":2,\"153\":2,\"158\":1,\"161\":1,\"164\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"187\":1,\"190\":1,\"192\":2,\"211\":3,\"333\":1,\"334\":1,\"335\":2,\"336\":1,\"337\":2,\"339\":1,\"343\":2,\"347\":2,\"351\":2,\"356\":1,\"359\":1,\"362\":1,\"364\":1,\"365\":1,\"366\":1,\"367\":1,\"368\":1,\"369\":1,\"385\":1,\"388\":1,\"390\":2,\"409\":3}}],[\"getattribute\",{\"1\":{\"130\":1,\"328\":1}}],[\"getname\",{\"1\":{\"93\":3,\"96\":3,\"291\":3,\"294\":3}}],[\"getprototypeof\",{\"1\":{\"90\":1,\"92\":1,\"93\":1,\"288\":1,\"290\":1,\"291\":1}}],[\"getownpropertynames\",{\"0\":{\"81\":1,\"279\":1},\"1\":{\"79\":2,\"80\":2,\"81\":3,\"82\":2,\"83\":3,\"277\":2,\"278\":2,\"279\":3,\"280\":2,\"281\":3}}],[\"gettype\",{\"1\":{\"76\":1,\"274\":1}}],[\"groupend\",{\"1\":{\"204\":1,\"402\":1}}],[\"group\",{\"1\":{\"204\":1,\"402\":1}}],[\"grow和flex\",{\"1\":{\"72\":1,\"270\":1}}],[\"grow来设置子盒子增大的占比\",{\"1\":{\"72\":1,\"270\":1}}],[\"grow是用来增大盒子的\",{\"1\":{\"72\":1,\"270\":1}}],[\"grow\",{\"1\":{\"72\":1,\"270\":1}}],[\"greet\",{\"1\":{\"88\":3,\"286\":3}}],[\"green\",{\"1\":{\"67\":1,\"265\":1}}],[\"grid\",{\"1\":{\"59\":1,\"60\":1,\"62\":1,\"65\":2,\"257\":1,\"258\":1,\"260\":1,\"263\":2}}],[\"grid网格布局\",{\"0\":{\"59\":1,\"257\":1}}],[\"github\",{\"0\":{\"8\":1,\"50\":1},\"1\":{\"8\":1,\"50\":1}}],[\"ypos\",{\"1\":{\"166\":1,\"171\":2,\"364\":1,\"369\":2}}],[\"yates算法实现数组随机排序的步骤\",{\"1\":{\"128\":1,\"326\":1}}],[\"yates\",{\"1\":{\"128\":1,\"326\":1}}],[\"yield\",{\"1\":{\"97\":1,\"295\":1}}],[\"years\",{\"1\":{\"88\":2,\"286\":2}}],[\"y\",{\"1\":{\"32\":2,\"62\":1,\"171\":1,\"260\":1,\"369\":1}}],[\"y^\",{\"1\":{\"32\":2}}],[\"yuque\",{\"1\":{\"9\":1,\"51\":1}}],[\"your\",{\"1\":{\"3\":1,\"42\":2,\"43\":1}}],[\"you\",{\"1\":{\"2\":1,\"13\":1,\"19\":1,\"22\":2,\"23\":1,\"24\":2,\"40\":1,\"41\":1,\"42\":2,\"43\":2,\"207\":1,\"405\":1}}],[\"watch不依赖缓存\",{\"1\":{\"227\":1,\"425\":1}}],[\"watch适合一个数据\",{\"1\":{\"227\":1,\"425\":1}}],[\"way\",{\"1\":{\"216\":1,\"414\":1}}],[\"warn\",{\"1\":{\"204\":1,\"402\":1}}],[\"weakmap\",{\"1\":{\"220\":1,\"418\":1}}],[\"weakmap常用于存储只有当key所引用的对象存在时\",{\"1\":{\"220\":1,\"418\":1}}],[\"web\",{\"0\":{\"206\":1,\"404\":1},\"1\":{\"205\":1,\"207\":9,\"211\":3,\"403\":1,\"405\":9,\"409\":3}}],[\"webpack\",{\"1\":{\"204\":1,\"402\":1}}],[\"weixin\",{\"1\":{\"97\":2,\"194\":1,\"205\":1,\"295\":2,\"392\":1,\"403\":1}}],[\"weijordannw\",{\"1\":{\"8\":1,\"50\":1}}],[\"while\",{\"1\":{\"128\":1,\"326\":1}}],[\"which\",{\"1\":{\"25\":1,\"43\":1}}],[\"work\",{\"1\":{\"207\":2,\"405\":2}}],[\"workers\",{\"1\":{\"207\":8,\"405\":8}}],[\"worker\",{\"0\":{\"206\":1,\"207\":1,\"404\":1,\"405\":1},\"1\":{\"205\":2,\"206\":6,\"207\":33,\"403\":2,\"404\":6,\"405\":33}}],[\"world<\",{\"1\":{\"187\":1,\"385\":1}}],[\"world\",{\"1\":{\"124\":2,\"126\":1,\"207\":1,\"220\":1,\"322\":2,\"324\":1,\"405\":1,\"418\":1}}],[\"word\",{\"1\":{\"96\":1,\"294\":1}}],[\"women\",{\"1\":{\"93\":1,\"96\":1,\"291\":1,\"294\":1}}],[\"window\",{\"1\":{\"171\":2,\"206\":1,\"369\":2,\"404\":1}}],[\"width\",{\"1\":{\"55\":1,\"56\":2,\"57\":2,\"67\":4,\"68\":1,\"69\":1,\"70\":1,\"73\":1,\"167\":2,\"169\":1,\"253\":1,\"254\":2,\"255\":2,\"265\":4,\"266\":1,\"267\":1,\"268\":1,\"271\":1,\"365\":2,\"367\":1}}],[\"with\",{\"1\":{\"42\":1}}],[\"will\",{\"1\":{\"25\":1,\"40\":1,\"176\":2,\"374\":2}}],[\"writing\",{\"1\":{\"26\":1,\"27\":1,\"41\":1}}],[\"write<\",{\"1\":{\"183\":2,\"184\":5,\"186\":4,\"381\":2,\"382\":5,\"384\":4}}],[\"write和innerhtml的区别\",{\"0\":{\"183\":1,\"381\":1}}],[\"write\",{\"0\":{\"184\":1,\"382\":1},\"1\":{\"22\":1,\"23\":1,\"42\":1,\"187\":2,\"385\":2}}],[\"www\",{\"1\":{\"4\":1,\"9\":1,\"46\":1,\"51\":1,\"72\":1,\"270\":1}}],[\"css\",{\"1\":{\"196\":1,\"394\":1}}],[\"css定位\",{\"1\":{\"193\":1,\"391\":1}}],[\"csdn\",{\"0\":{\"4\":1,\"46\":1},\"1\":{\"4\":1,\"46\":1,\"54\":1,\"63\":1,\"88\":3,\"89\":1,\"97\":2,\"194\":2,\"205\":2,\"208\":2,\"252\":1,\"261\":1,\"286\":3,\"287\":1,\"295\":2,\"392\":2,\"403\":2,\"406\":2},\"2\":{\"5\":1,\"47\":1}}],[\"cleanup\",{\"1\":{\"220\":2,\"418\":2}}],[\"clear\",{\"1\":{\"204\":1,\"402\":1}}],[\"cleared\",{\"1\":{\"176\":1,\"374\":1}}],[\"clearinterval\",{\"1\":{\"172\":1,\"176\":1,\"370\":1,\"374\":1}}],[\"cleartimeout\",{\"1\":{\"172\":1,\"176\":1,\"178\":1,\"370\":1,\"374\":1,\"376\":1}}],[\"clienty\",{\"1\":{\"190\":2,\"388\":2}}],[\"clientx\",{\"1\":{\"190\":2,\"388\":2}}],[\"clienttop\",{\"1\":{\"169\":1,\"367\":1}}],[\"clientleft\",{\"1\":{\"169\":1,\"367\":1}}],[\"clicked\",{\"1\":{\"211\":3,\"409\":3}}],[\"click\",{\"1\":{\"145\":2,\"147\":2,\"149\":2,\"153\":2,\"154\":2,\"158\":1,\"159\":2,\"160\":1,\"161\":1,\"164\":1,\"211\":1,\"343\":2,\"345\":2,\"347\":2,\"351\":2,\"352\":2,\"356\":1,\"357\":2,\"358\":1,\"359\":1,\"362\":1,\"409\":1}}],[\"clonenode\",{\"1\":{\"139\":1,\"337\":1}}],[\"classone\",{\"1\":{\"97\":2,\"295\":2}}],[\"classroom\",{\"1\":{\"97\":2,\"295\":2}}],[\"class\",{\"1\":{\"88\":1,\"96\":5,\"97\":1,\"286\":1,\"294\":5,\"295\":1}}],[\"class=\",{\"1\":{\"55\":2,\"56\":2,\"57\":2,\"58\":2,\"59\":2,\"61\":6,\"62\":13,\"67\":5,\"68\":2,\"69\":2,\"70\":3,\"72\":5,\"73\":22,\"78\":5,\"80\":2,\"81\":3,\"82\":5,\"83\":8,\"84\":2,\"85\":3,\"86\":1,\"87\":18,\"88\":11,\"100\":6,\"101\":9,\"104\":2,\"105\":5,\"106\":2,\"107\":2,\"108\":1,\"109\":4,\"110\":4,\"111\":4,\"112\":10,\"113\":4,\"114\":14,\"116\":2,\"117\":3,\"118\":3,\"120\":1,\"121\":8,\"123\":8,\"124\":5,\"125\":5,\"126\":6,\"128\":7,\"130\":5,\"131\":4,\"132\":3,\"133\":10,\"135\":1,\"136\":1,\"138\":1,\"139\":2,\"140\":2,\"141\":5,\"144\":1,\"145\":1,\"146\":1,\"147\":2,\"148\":1,\"152\":2,\"154\":2,\"155\":2,\"157\":3,\"158\":13,\"159\":6,\"160\":13,\"161\":2,\"162\":3,\"163\":3,\"164\":1,\"167\":6,\"168\":3,\"172\":2,\"173\":4,\"174\":4,\"175\":9,\"176\":4,\"177\":4,\"178\":6,\"179\":13,\"180\":9,\"182\":5,\"183\":4,\"184\":6,\"185\":5,\"186\":9,\"187\":1,\"188\":4,\"191\":4,\"193\":4,\"195\":3,\"196\":3,\"198\":2,\"199\":1,\"200\":3,\"201\":4,\"202\":8,\"203\":17,\"204\":14,\"207\":7,\"208\":1,\"209\":11,\"210\":6,\"211\":6,\"219\":15,\"222\":6,\"223\":7,\"224\":5,\"225\":4,\"226\":3,\"253\":2,\"254\":2,\"255\":2,\"256\":2,\"257\":2,\"259\":6,\"260\":13,\"265\":5,\"266\":2,\"267\":2,\"268\":3,\"270\":5,\"271\":22,\"276\":5,\"278\":2,\"279\":3,\"280\":5,\"281\":8,\"282\":2,\"283\":3,\"284\":1,\"285\":18,\"286\":11,\"298\":6,\"299\":9,\"302\":2,\"303\":5,\"304\":2,\"305\":2,\"306\":1,\"307\":4,\"308\":4,\"309\":4,\"310\":10,\"311\":4,\"312\":14,\"314\":2,\"315\":3,\"316\":3,\"318\":1,\"319\":8,\"321\":8,\"322\":5,\"323\":5,\"324\":6,\"326\":7,\"328\":5,\"329\":4,\"330\":3,\"331\":10,\"333\":1,\"334\":1,\"336\":1,\"337\":2,\"338\":2,\"339\":5,\"342\":1,\"343\":1,\"344\":1,\"345\":2,\"346\":1,\"350\":2,\"352\":2,\"353\":2,\"355\":3,\"356\":13,\"357\":6,\"358\":13,\"359\":2,\"360\":3,\"361\":3,\"362\":1,\"365\":6,\"366\":3,\"370\":2,\"371\":4,\"372\":4,\"373\":9,\"374\":4,\"375\":4,\"376\":6,\"377\":13,\"378\":9,\"380\":5,\"381\":4,\"382\":6,\"383\":5,\"384\":9,\"385\":1,\"386\":4,\"389\":4,\"391\":4,\"393\":3,\"394\":3,\"396\":2,\"397\":1,\"398\":3,\"399\":4,\"400\":8,\"401\":17,\"402\":14,\"405\":7,\"406\":1,\"407\":11,\"408\":6,\"409\":6,\"417\":15,\"420\":6,\"421\":7,\"422\":5,\"423\":4,\"424\":3}}],[\"chenyajundd\",{\"1\":{\"205\":1,\"403\":1}}],[\"chrome\",{\"1\":{\"204\":3,\"402\":3}}],[\"chrome浏览器中\",{\"1\":{\"98\":1,\"296\":1}}],[\"china\",{\"1\":{\"96\":1,\"294\":1}}],[\"children\",{\"1\":{\"214\":1,\"412\":1}}],[\"childbutton\",{\"1\":{\"145\":2,\"147\":1,\"149\":2,\"153\":2,\"154\":1,\"343\":2,\"345\":1,\"347\":2,\"351\":2,\"352\":1}}],[\"child\",{\"1\":{\"67\":3,\"68\":2,\"145\":2,\"149\":1,\"153\":1,\"202\":2,\"265\":3,\"266\":2,\"343\":2,\"347\":1,\"351\":1,\"400\":2}}],[\"c\",{\"0\":{\"247\":1,\"445\":1},\"1\":{\"82\":3,\"120\":6,\"121\":6,\"280\":3,\"318\":6,\"319\":6},\"2\":{\"250\":1,\"448\":1}}],[\"cn\",{\"1\":{\"77\":1,\"275\":1}}],[\"cnblogs\",{\"1\":{\"72\":1,\"270\":1}}],[\"cuclife\",{\"1\":{\"208\":2,\"406\":2}}],[\"currenttarget就是div\",{\"1\":{\"158\":1,\"356\":1}}],[\"currenttarget\",{\"1\":{\"158\":2,\"356\":2}}],[\"currenttarget的区别\",{\"1\":{\"158\":1,\"356\":1}}],[\"currentindex\",{\"1\":{\"128\":6,\"326\":6}}],[\"cube1\",{\"1\":{\"67\":2,\"265\":2}}],[\"cube\",{\"1\":{\"67\":4,\"265\":4}}],[\"customize\",{\"1\":{\"19\":1}}],[\"center\",{\"1\":{\"57\":1,\"58\":2,\"59\":2,\"61\":2,\"70\":2,\"255\":1,\"256\":2,\"257\":2,\"259\":2,\"268\":2}}],[\"cell\",{\"1\":{\"57\":1,\"61\":1,\"62\":1,\"65\":1,\"255\":1,\"259\":1,\"260\":1,\"263\":1}}],[\"capture\",{\"1\":{\"211\":1,\"409\":1}}],[\"capturing\",{\"1\":{\"149\":1,\"159\":1,\"347\":1,\"357\":1}}],[\"caption\",{\"1\":{\"65\":1,\"263\":1}}],[\"callback\",{\"1\":{\"87\":6,\"285\":6}}],[\"call方法返回结果中的\",{\"1\":{\"76\":1,\"274\":1}}],[\"call方法返回各数据类型的\",{\"1\":{\"76\":2,\"274\":2}}],[\"call\",{\"1\":{\"76\":14,\"93\":1,\"117\":2,\"274\":14,\"291\":1,\"315\":2}}],[\"category\",{\"1\":{\"41\":1}}],[\"cancopy\",{\"1\":{\"228\":1,\"426\":1}}],[\"can\",{\"1\":{\"13\":1,\"19\":2,\"22\":2,\"40\":1,\"41\":1,\"42\":1,\"43\":2}}],[\"cdots\",{\"1\":{\"32\":1}}],[\"createtextnode\",{\"1\":{\"140\":1,\"338\":1}}],[\"createelement\",{\"1\":{\"135\":1,\"138\":1,\"140\":1,\"333\":1,\"336\":1,\"338\":1}}],[\"create\",{\"1\":{\"22\":1,\"43\":1,\"88\":1,\"93\":4,\"286\":1,\"291\":4}}],[\"cookieenabled<\",{\"1\":{\"209\":1,\"407\":1}}],[\"copiedelement\",{\"1\":{\"139\":2,\"337\":2}}],[\"copyme\",{\"1\":{\"139\":1,\"337\":1}}],[\"countref\",{\"1\":{\"224\":1,\"422\":1}}],[\"count\",{\"1\":{\"87\":2,\"204\":1,\"223\":3,\"224\":3,\"225\":2,\"285\":2,\"402\":1,\"421\":3,\"422\":3,\"423\":2}}],[\"color\",{\"1\":{\"34\":1,\"67\":2,\"68\":1,\"69\":2,\"70\":2,\"265\":2,\"266\":1,\"267\":2,\"268\":2}}],[\"code\",{\"0\":{\"28\":1},\"1\":{\"204\":1,\"402\":1}}],[\"console\",{\"1\":{\"78\":3,\"81\":1,\"82\":3,\"83\":5,\"85\":1,\"86\":1,\"88\":2,\"93\":3,\"96\":3,\"97\":2,\"113\":2,\"114\":1,\"123\":2,\"124\":2,\"126\":2,\"128\":3,\"145\":2,\"147\":2,\"149\":2,\"153\":2,\"154\":2,\"158\":1,\"159\":2,\"161\":1,\"164\":3,\"171\":1,\"173\":1,\"174\":1,\"176\":2,\"181\":1,\"202\":2,\"203\":1,\"207\":4,\"220\":3,\"276\":3,\"279\":1,\"280\":3,\"281\":5,\"283\":1,\"284\":1,\"286\":2,\"291\":3,\"294\":3,\"295\":2,\"311\":2,\"312\":1,\"321\":2,\"322\":2,\"324\":2,\"326\":3,\"343\":2,\"345\":2,\"347\":2,\"351\":2,\"352\":2,\"356\":1,\"357\":2,\"359\":1,\"362\":3,\"369\":1,\"371\":1,\"372\":1,\"374\":2,\"379\":1,\"400\":2,\"401\":1,\"405\":4,\"418\":3}}],[\"constructor\",{\"1\":{\"76\":8,\"88\":4,\"90\":1,\"92\":1,\"93\":1,\"96\":4,\"97\":1,\"274\":8,\"286\":4,\"288\":1,\"290\":1,\"291\":1,\"294\":4,\"295\":1}}],[\"const\",{\"1\":{\"76\":26,\"78\":6,\"81\":1,\"82\":3,\"83\":4,\"88\":4,\"93\":2,\"96\":2,\"97\":2,\"114\":1,\"128\":3,\"145\":2,\"149\":2,\"153\":2,\"158\":2,\"161\":2,\"164\":1,\"166\":3,\"167\":8,\"168\":2,\"169\":3,\"170\":3,\"171\":4,\"174\":1,\"176\":2,\"196\":2,\"203\":3,\"207\":1,\"220\":9,\"223\":1,\"224\":2,\"225\":2,\"228\":2,\"274\":26,\"276\":6,\"279\":1,\"280\":3,\"281\":4,\"286\":4,\"291\":2,\"294\":2,\"295\":2,\"312\":1,\"326\":3,\"343\":2,\"347\":2,\"351\":2,\"356\":2,\"359\":2,\"362\":1,\"364\":3,\"365\":8,\"366\":2,\"367\":3,\"368\":3,\"369\":4,\"372\":1,\"374\":2,\"394\":2,\"401\":3,\"405\":1,\"418\":9,\"421\":1,\"422\":2,\"423\":2,\"426\":2}}],[\"concept\",{\"1\":{\"24\":1}}],[\"config\",{\"0\":{\"24\":1,\"39\":1},\"1\":{\"41\":1,\"219\":1,\"417\":1},\"2\":{\"45\":1}}],[\"configuration\",{\"1\":{\"2\":1,\"24\":1}}],[\"converted\",{\"1\":{\"43\":1}}],[\"convert\",{\"1\":{\"22\":1}}],[\"context\",{\"1\":{\"64\":1,\"262\":1}}],[\"contents\",{\"1\":{\"19\":1}}],[\"content\",{\"0\":{\"42\":1},\"1\":{\"16\":1,\"25\":1,\"30\":1,\"39\":1,\"58\":1,\"59\":1,\"61\":1,\"256\":1,\"257\":1,\"259\":1}}],[\"container\",{\"1\":{\"67\":2,\"214\":1,\"265\":2,\"412\":1}}],[\"contain\",{\"1\":{\"19\":1}}],[\"contains\",{\"1\":{\"19\":1}}],[\"contributors\",{\"1\":{\"13\":1,\"19\":1}}],[\"computed属性默认会走缓存\",{\"1\":{\"227\":1,\"425\":1}}],[\"computed适用于一个数据\",{\"1\":{\"227\":1,\"425\":1}}],[\"computed和watch的区别\",{\"0\":{\"227\":1,\"425\":1},\"1\":{\"222\":1,\"420\":1}}],[\"composition\",{\"0\":{\"229\":1,\"427\":1},\"1\":{\"219\":2,\"222\":1,\"226\":1,\"417\":2,\"420\":1,\"424\":1}}],[\"components\",{\"0\":{\"43\":1},\"1\":{\"43\":1}}],[\"component\",{\"0\":{\"36\":1},\"1\":{\"43\":1,\"228\":1,\"426\":1}}],[\"comments\",{\"1\":{\"19\":1}}],[\"comment\",{\"1\":{\"13\":1,\"39\":1}}],[\"com\",{\"1\":{\"8\":1,\"9\":1,\"50\":1,\"51\":1,\"72\":1,\"270\":1}}],[\"hi\",{\"1\":{\"207\":1,\"220\":1,\"405\":1,\"418\":1}}],[\"hidden=\",{\"1\":{\"73\":1,\"271\":1}}],[\"hidden\",{\"1\":{\"65\":1,\"67\":1,\"68\":2,\"69\":1,\"70\":1,\"71\":1,\"73\":3,\"263\":1,\"265\":1,\"266\":2,\"267\":1,\"268\":1,\"269\":1,\"271\":3}}],[\"href=\",{\"1\":{\"196\":1,\"394\":1}}],[\"hardwareconcurrency<\",{\"1\":{\"209\":1,\"210\":1,\"407\":1,\"408\":1}}],[\"handler\",{\"1\":{\"162\":2,\"360\":2}}],[\"handleclick\",{\"1\":{\"159\":1,\"164\":2,\"357\":1,\"362\":2}}],[\"hasownproperty\",{\"1\":{\"83\":1,\"281\":1}}],[\"has\",{\"1\":{\"19\":1,\"26\":1,\"30\":1,\"97\":1,\"295\":1}}],[\"heap\",{\"1\":{\"204\":1,\"402\":1}}],[\"hello\",{\"1\":{\"88\":1,\"96\":1,\"124\":2,\"126\":1,\"130\":1,\"133\":3,\"173\":1,\"174\":1,\"203\":1,\"207\":2,\"220\":1,\"286\":1,\"294\":1,\"322\":2,\"324\":1,\"328\":1,\"331\":3,\"371\":1,\"372\":1,\"401\":1,\"405\":2,\"418\":1}}],[\"height<\",{\"1\":{\"61\":1,\"259\":1}}],[\"height\",{\"1\":{\"55\":1,\"56\":2,\"57\":2,\"67\":4,\"68\":1,\"70\":2,\"167\":2,\"253\":1,\"254\":2,\"255\":2,\"265\":4,\"266\":1,\"268\":2,\"365\":2}}],[\"here\",{\"1\":{\"3\":1,\"42\":1}}],[\"html5\",{\"1\":{\"195\":1,\"393\":1}}],[\"html5拖放api提供了更丰富的功能和更好的浏览器兼容性\",{\"1\":{\"193\":1,\"391\":1}}],[\"html5提供了一套拖放api\",{\"1\":{\"191\":1,\"389\":1}}],[\"html5和css3\",{\"0\":{\"53\":1,\"251\":1}}],[\"html\",{\"1\":{\"72\":1,\"158\":1,\"211\":1,\"270\":1,\"356\":1,\"409\":1}}],[\"https\",{\"1\":{\"4\":1,\"8\":1,\"9\":1,\"46\":1,\"50\":1,\"51\":1,\"54\":1,\"63\":1,\"72\":1,\"77\":1,\"88\":3,\"89\":1,\"97\":2,\"194\":1,\"205\":2,\"208\":2,\"252\":1,\"261\":1,\"270\":1,\"275\":1,\"286\":3,\"287\":1,\"295\":2,\"392\":1,\"403\":2,\"406\":2}}],[\"h1\",{\"1\":{\"40\":1}}],[\"h2o\",{\"1\":{\"35\":1}}],[\"hooks\",{\"1\":{\"229\":1,\"427\":1}}],[\"hooks钩子函数\",{\"1\":{\"229\":1,\"427\":1}}],[\"hover\",{\"1\":{\"202\":1,\"400\":1}}],[\"hoisting\",{\"1\":{\"122\":2,\"320\":2}}],[\"host\",{\"0\":{\"100\":1,\"298\":1},\"1\":{\"99\":1,\"297\":1}}],[\"hope\",{\"1\":{\"41\":1}}],[\"how\",{\"1\":{\"23\":1}}],[\"homepage\",{\"1\":{\"2\":1}}],[\"home\",{\"1\":{\"0\":1,\"2\":2,\"228\":3,\"426\":3}}],[\"polyfills\",{\"1\":{\"211\":1,\"409\":1}}],[\"postmessage\",{\"1\":{\"207\":7,\"405\":7}}],[\"post\",{\"1\":{\"77\":1,\"275\":1}}],[\"positionedparent\",{\"1\":{\"168\":1,\"366\":1}}],[\"positioned\",{\"1\":{\"168\":1,\"171\":1,\"366\":1,\"369\":1}}],[\"position的值为absolute或fixed\",{\"1\":{\"65\":1,\"263\":1}}],[\"position\",{\"1\":{\"55\":2,\"56\":2,\"71\":1,\"253\":2,\"254\":2,\"269\":1}}],[\"performance\",{\"1\":{\"204\":1,\"402\":1}}],[\"person1\",{\"1\":{\"88\":2,\"286\":2}}],[\"person\",{\"1\":{\"88\":5,\"93\":6,\"96\":4,\"203\":5,\"286\":5,\"291\":6,\"294\":4,\"401\":5}}],[\"px\",{\"1\":{\"190\":2,\"388\":2}}],[\"p>\",{\"1\":{\"187\":1,\"385\":1}}],[\"phase\",{\"1\":{\"159\":3,\"357\":3}}],[\"push\",{\"1\":{\"97\":1,\"220\":1,\"295\":1,\"418\":1}}],[\"public\",{\"1\":{\"42\":1,\"96\":1,\"294\":1}}],[\"p\",{\"1\":{\"72\":1,\"88\":4,\"140\":1,\"270\":1,\"286\":4,\"338\":1}}],[\"path<\",{\"1\":{\"73\":1,\"271\":1}}],[\"path\",{\"1\":{\"73\":1,\"228\":1,\"271\":1,\"426\":1}}],[\"parse\",{\"1\":{\"121\":3,\"319\":3}}],[\"parsed\",{\"1\":{\"25\":1}}],[\"parent这些对象\",{\"1\":{\"206\":1,\"404\":1}}],[\"parentdiv\",{\"1\":{\"145\":2,\"147\":1,\"149\":2,\"153\":2,\"154\":1,\"158\":2,\"161\":2,\"343\":2,\"345\":1,\"347\":2,\"351\":2,\"352\":1,\"356\":2,\"359\":2}}],[\"parentnode\",{\"1\":{\"136\":1,\"138\":1,\"334\":1,\"336\":1}}],[\"parentelement\",{\"1\":{\"135\":2,\"136\":2,\"138\":2,\"139\":2,\"333\":2,\"334\":2,\"336\":2,\"337\":2}}],[\"parent\",{\"1\":{\"68\":3,\"135\":1,\"139\":1,\"145\":2,\"149\":1,\"153\":1,\"158\":2,\"161\":2,\"166\":1,\"202\":3,\"266\":3,\"333\":1,\"337\":1,\"343\":2,\"347\":1,\"351\":1,\"356\":2,\"359\":2,\"364\":1,\"400\":3}}],[\"partial\",{\"1\":{\"32\":1}}],[\"partial^r\",{\"1\":{\"32\":1}}],[\"paragraph\",{\"1\":{\"16\":26}}],[\"pages\",{\"1\":{\"22\":2}}],[\"page\",{\"0\":{\"3\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1},\"1\":{\"2\":2,\"13\":4,\"19\":2,\"24\":1,\"39\":1,\"40\":2,\"41\":2,\"43\":1},\"2\":{\"45\":1}}],[\"preloadimage\",{\"1\":{\"196\":2,\"394\":2}}],[\"preloading\",{\"1\":{\"194\":1,\"392\":1}}],[\"preload\",{\"1\":{\"196\":1,\"394\":1}}],[\"preloadhttps\",{\"1\":{\"194\":1,\"392\":1}}],[\"preventdefault\",{\"1\":{\"159\":1,\"164\":1,\"192\":1,\"357\":1,\"362\":1,\"390\":1}}],[\"prev\",{\"1\":{\"13\":1}}],[\"private\",{\"1\":{\"96\":1,\"294\":1}}],[\"print\",{\"1\":{\"19\":1}}],[\"proxy\",{\"1\":{\"219\":1,\"220\":2,\"222\":1,\"417\":1,\"418\":2,\"420\":1}}],[\"props\",{\"1\":{\"214\":1,\"412\":1}}],[\"property通过点符号或方括号访问\",{\"1\":{\"132\":1,\"330\":1}}],[\"property反映了元素的实时状态\",{\"1\":{\"131\":1,\"329\":1}}],[\"property<\",{\"1\":{\"131\":1,\"329\":1}}],[\"property是javascript变量\",{\"1\":{\"131\":1,\"329\":1}}],[\"property是javascript中dom元素对象的属性\",{\"1\":{\"131\":1,\"329\":1}}],[\"property是对象的属性\",{\"1\":{\"131\":1,\"329\":1}}],[\"property\",{\"0\":{\"131\":1,\"329\":1},\"1\":{\"129\":1,\"131\":1,\"133\":1,\"327\":1,\"329\":1,\"331\":1}}],[\"promise\",{\"1\":{\"98\":1,\"296\":1}}],[\"protected\",{\"1\":{\"96\":1,\"294\":1}}],[\"proto\",{\"1\":{\"88\":1,\"89\":1,\"203\":1,\"286\":1,\"287\":1,\"401\":1}}],[\"prototype<\",{\"1\":{\"219\":1,\"417\":1}}],[\"prototype\",{\"1\":{\"76\":17,\"88\":1,\"90\":3,\"92\":7,\"93\":5,\"117\":2,\"120\":1,\"203\":2,\"274\":17,\"286\":1,\"288\":3,\"290\":7,\"291\":5,\"315\":2,\"318\":1,\"401\":2}}],[\"provides\",{\"1\":{\"27\":1}}],[\"profile\",{\"1\":{\"3\":1}}],[\"platform<\",{\"1\":{\"209\":1,\"407\":1}}],[\"plan\",{\"1\":{\"33\":2}}],[\"place\",{\"1\":{\"3\":1,\"42\":1}}],[\"plugin\",{\"1\":{\"27\":1}}],[\"plugins\",{\"1\":{\"25\":1}}],[\"please\",{\"1\":{\"2\":1,\"23\":1,\"26\":1,\"42\":1}}],[\"drop\",{\"1\":{\"192\":1,\"390\":1}}],[\"dropzone\",{\"1\":{\"192\":6,\"390\":6}}],[\"dragover\",{\"1\":{\"192\":1,\"390\":1}}],[\"dragstart\",{\"1\":{\"192\":1,\"390\":1}}],[\"dragitem\",{\"1\":{\"192\":3,\"390\":3}}],[\"dragmove\",{\"1\":{\"190\":2,\"388\":2}}],[\"dragy\",{\"1\":{\"190\":4,\"388\":4}}],[\"dragx\",{\"1\":{\"190\":4,\"388\":4}}],[\"draggable=\",{\"1\":{\"192\":1,\"390\":1}}],[\"draggable\",{\"1\":{\"190\":1,\"192\":2,\"388\":1,\"390\":2}}],[\"draggable属性\",{\"1\":{\"188\":1,\"191\":1,\"386\":1,\"389\":1}}],[\"dragelement\",{\"1\":{\"190\":4,\"388\":4}}],[\"dealpermission\",{\"1\":{\"228\":2,\"426\":2}}],[\"dealparams\",{\"1\":{\"228\":2,\"426\":2}}],[\"dead\",{\"1\":{\"123\":1,\"321\":1}}],[\"depsmap\",{\"1\":{\"220\":8,\"418\":8}}],[\"deps\",{\"1\":{\"220\":12,\"418\":12}}],[\"detection\",{\"1\":{\"210\":1,\"408\":1}}],[\"details\",{\"1\":{\"54\":1,\"63\":1,\"88\":3,\"89\":1,\"97\":2,\"194\":2,\"205\":2,\"208\":2,\"252\":1,\"261\":1,\"286\":3,\"287\":1,\"295\":2,\"392\":2,\"403\":2,\"406\":2}}],[\"detail\",{\"1\":{\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1}}],[\"debug\",{\"1\":{\"204\":1,\"402\":1}}],[\"developer\",{\"1\":{\"204\":1,\"402\":1}}],[\"devtools\",{\"1\":{\"204\":1,\"402\":1}}],[\"delete\",{\"1\":{\"178\":1,\"220\":1,\"376\":1,\"418\":1}}],[\"delay\",{\"1\":{\"172\":1,\"173\":1,\"370\":1,\"371\":1}}],[\"defineproperty\",{\"1\":{\"81\":1,\"82\":1,\"219\":1,\"279\":1,\"280\":1,\"417\":1}}],[\"demo\",{\"0\":{\"11\":1},\"1\":{\"2\":1,\"13\":1,\"23\":1}}],[\"dosomething\",{\"1\":{\"207\":2,\"405\":2}}],[\"dom事件传播的三个阶段\",{\"1\":{\"158\":1,\"356\":1}}],[\"dom的事件模型\",{\"0\":{\"156\":1,\"354\":1}}],[\"dom结构操作怎样添加\",{\"0\":{\"134\":1,\"332\":1}}],[\"dom\",{\"0\":{\"157\":1,\"159\":1,\"355\":1,\"357\":1},\"1\":{\"129\":1,\"158\":2,\"206\":2,\"207\":4,\"211\":8,\"219\":3,\"327\":1,\"356\":2,\"404\":2,\"405\":4,\"409\":8,\"417\":3}}],[\"dom节点的attribute和property有何区别\",{\"0\":{\"129\":1,\"327\":1}}],[\"done\",{\"1\":{\"97\":3,\"207\":1,\"295\":3,\"405\":1}}],[\"don\",{\"1\":{\"23\":1,\"24\":1}}],[\"document对象\",{\"1\":{\"143\":1,\"149\":1,\"150\":1,\"159\":1,\"341\":1,\"347\":1,\"348\":1,\"357\":1}}],[\"document\",{\"0\":{\"183\":1,\"184\":1,\"381\":1,\"382\":1},\"1\":{\"26\":1,\"135\":2,\"136\":1,\"137\":2,\"138\":2,\"139\":2,\"140\":2,\"141\":5,\"145\":2,\"149\":2,\"153\":2,\"158\":1,\"161\":1,\"164\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"187\":3,\"190\":5,\"192\":2,\"211\":3,\"333\":2,\"334\":1,\"335\":2,\"336\":2,\"337\":2,\"338\":2,\"339\":5,\"343\":2,\"347\":2,\"351\":2,\"356\":1,\"359\":1,\"362\":1,\"364\":1,\"365\":1,\"366\":1,\"367\":1,\"368\":1,\"369\":1,\"385\":3,\"388\":5,\"390\":2,\"409\":3}}],[\"documentation\",{\"1\":{\"22\":1}}],[\"docs\",{\"1\":{\"2\":1}}],[\"diff\",{\"1\":{\"216\":1,\"414\":1}}],[\"diff算法来计算出最小的变更\",{\"1\":{\"214\":1,\"412\":1}}],[\"different\",{\"1\":{\"22\":1}}],[\"div\",{\"1\":{\"67\":2,\"135\":1,\"138\":1,\"141\":1,\"265\":2,\"333\":1,\"336\":1,\"339\":1}}],[\"div>span\",{\"1\":{\"158\":1,\"356\":1}}],[\"div>\",{\"1\":{\"55\":2,\"56\":2,\"57\":2,\"58\":2,\"59\":2,\"67\":5,\"68\":2,\"69\":2,\"70\":3,\"145\":1,\"158\":1,\"161\":1,\"192\":2,\"202\":2,\"223\":1,\"253\":2,\"254\":2,\"255\":2,\"256\":2,\"257\":2,\"265\":5,\"266\":2,\"267\":2,\"268\":3,\"343\":1,\"356\":1,\"359\":1,\"390\":2,\"400\":2,\"421\":1}}],[\"display的值为除了none以外的全部值\",{\"1\":{\"65\":1,\"263\":1}}],[\"display\",{\"1\":{\"57\":2,\"58\":1,\"59\":1,\"71\":1,\"255\":2,\"256\":1,\"257\":1,\"269\":1}}],[\"disables\",{\"1\":{\"13\":1}}],[\"disable\",{\"1\":{\"13\":1},\"2\":{\"15\":1}}],[\"disabling\",{\"0\":{\"13\":1}}],[\"directory\",{\"1\":{\"42\":1}}],[\"datatransfer\",{\"1\":{\"192\":1,\"390\":1}}],[\"data\",{\"1\":{\"76\":2,\"192\":1,\"207\":4,\"220\":2,\"274\":2,\"390\":1,\"405\":4,\"418\":2}}],[\"date\",{\"1\":{\"41\":1,\"114\":3,\"312\":3}}],[\"darkmode\",{\"1\":{\"19\":1}}],[\"dashboard\",{\"1\":{\"9\":1,\"51\":1}}],[\"fullpath\",{\"1\":{\"228\":1,\"426\":1}}],[\"func\",{\"1\":{\"203\":4,\"401\":4}}],[\"functions\",{\"1\":{\"27\":1}}],[\"function\",{\"1\":{\"13\":1,\"76\":9,\"85\":1,\"86\":1,\"88\":2,\"93\":3,\"113\":2,\"117\":3,\"122\":1,\"124\":1,\"126\":1,\"128\":1,\"145\":2,\"147\":2,\"149\":2,\"153\":2,\"154\":2,\"158\":1,\"159\":2,\"161\":1,\"164\":1,\"172\":2,\"173\":2,\"174\":2,\"176\":3,\"178\":4,\"181\":1,\"190\":3,\"192\":3,\"203\":3,\"207\":7,\"211\":3,\"220\":4,\"228\":2,\"274\":9,\"283\":1,\"284\":1,\"286\":2,\"291\":3,\"311\":2,\"315\":3,\"320\":1,\"322\":1,\"324\":1,\"326\":1,\"343\":2,\"345\":2,\"347\":2,\"351\":2,\"352\":2,\"356\":1,\"357\":2,\"359\":1,\"362\":1,\"370\":2,\"371\":2,\"372\":2,\"374\":3,\"376\":4,\"379\":1,\"388\":3,\"390\":3,\"401\":3,\"405\":7,\"409\":3,\"418\":4,\"426\":2}}],[\"feature\",{\"1\":{\"210\":1,\"408\":1}}],[\"features\",{\"0\":{\"11\":1,\"13\":1},\"1\":{\"13\":1}}],[\"fn\",{\"1\":{\"178\":5,\"220\":4,\"376\":5,\"418\":4}}],[\"false\",{\"1\":{\"76\":1,\"78\":1,\"81\":1,\"82\":1,\"97\":1,\"105\":1,\"106\":2,\"108\":2,\"139\":1,\"159\":1,\"207\":1,\"211\":2,\"228\":3,\"274\":1,\"276\":1,\"279\":1,\"280\":1,\"295\":1,\"303\":1,\"304\":2,\"306\":2,\"337\":1,\"357\":1,\"405\":1,\"409\":2,\"426\":3}}],[\"father\",{\"1\":{\"55\":2,\"56\":2,\"57\":2,\"58\":2,\"59\":2,\"253\":2,\"254\":2,\"255\":2,\"256\":2,\"257\":2}}],[\"floor\",{\"1\":{\"128\":1,\"326\":1}}],[\"float\",{\"1\":{\"68\":1,\"69\":1,\"70\":2,\"71\":1,\"266\":1,\"267\":1,\"268\":2,\"269\":1}}],[\"float值为left\",{\"1\":{\"65\":1,\"263\":1}}],[\"flowus\",{\"2\":{\"7\":1,\"49\":1}}],[\"flow\",{\"0\":{\"6\":1,\"48\":1}}],[\"flex\",{\"0\":{\"72\":1,\"270\":1},\"1\":{\"58\":1,\"61\":1,\"62\":1,\"65\":2,\"71\":1,\"72\":8,\"256\":1,\"259\":1,\"260\":1,\"263\":2,\"269\":1,\"270\":8}}],[\"flex弹性布局\",{\"0\":{\"58\":1,\"256\":1}}],[\"firefox\",{\"1\":{\"204\":2,\"402\":2}}],[\"first\",{\"1\":{\"40\":1,\"67\":1,\"265\":1}}],[\"fixed\",{\"1\":{\"71\":1,\"269\":1}}],[\"filename\",{\"1\":{\"207\":1,\"405\":1}}],[\"file\",{\"1\":{\"22\":1,\"206\":1,\"404\":1}}],[\"files\",{\"0\":{\"31\":1},\"1\":{\"22\":2,\"42\":1}}],[\"fragment\",{\"1\":{\"219\":1,\"417\":1}}],[\"frac\",{\"1\":{\"32\":4}}],[\"free\",{\"1\":{\"42\":1}}],[\"from\",{\"1\":{\"22\":1,\"78\":1,\"117\":2,\"121\":2,\"207\":2,\"223\":1,\"224\":1,\"225\":1,\"228\":7,\"276\":1,\"315\":2,\"319\":2,\"405\":2,\"421\":1,\"422\":1,\"423\":1,\"426\":7}}],[\"frontmatter\",{\"1\":{\"13\":1,\"19\":1,\"24\":4,\"40\":1,\"41\":1}}],[\"front\",{\"1\":{\"2\":1}}],[\"found\",{\"1\":{\"449\":1}}],[\"footnote\",{\"0\":{\"30\":1},\"1\":{\"30\":2}}],[\"footer\",{\"1\":{\"13\":1,\"19\":1}}],[\"following\",{\"1\":{\"13\":1,\"19\":1}}],[\"foreach\",{\"0\":{\"85\":1,\"283\":1},\"1\":{\"85\":1,\"220\":2,\"283\":1,\"418\":2}}],[\"formatting\",{\"1\":{\"64\":1,\"262\":1}}],[\"for\",{\"1\":{\"2\":1,\"24\":1,\"26\":1,\"42\":1,\"79\":1,\"83\":2,\"97\":1,\"220\":1,\"277\":1,\"281\":2,\"295\":1,\"418\":1}}],[\"i++\",{\"1\":{\"220\":1,\"418\":1}}],[\"i+1\",{\"1\":{\"32\":1}}],[\"ie\",{\"1\":{\"211\":5,\"409\":5}}],[\"id=\",{\"1\":{\"145\":2,\"158\":1,\"161\":1,\"192\":2,\"202\":2,\"343\":2,\"356\":1,\"359\":1,\"390\":2,\"400\":2}}],[\"img\",{\"1\":{\"196\":2,\"394\":2}}],[\"importscripts\",{\"1\":{\"207\":1,\"405\":1}}],[\"import\",{\"1\":{\"43\":1,\"78\":1,\"223\":1,\"224\":1,\"225\":1,\"276\":1,\"421\":1,\"422\":1,\"423\":1}}],[\"important\",{\"1\":{\"24\":1,\"196\":1,\"394\":1}}],[\"images\",{\"1\":{\"42\":2}}],[\"image\",{\"0\":{\"34\":1},\"1\":{\"196\":4,\"394\":4}}],[\"i\",{\"1\":{\"32\":1,\"42\":1,\"43\":1,\"88\":2,\"220\":3,\"286\":2,\"418\":3}}],[\"i=1\",{\"1\":{\"32\":1}}],[\"if\",{\"1\":{\"23\":1,\"24\":1,\"83\":1,\"97\":2,\"158\":1,\"161\":1,\"178\":1,\"220\":5,\"228\":1,\"281\":1,\"295\":2,\"356\":1,\"359\":1,\"376\":1,\"418\":5,\"426\":1}}],[\"iterator\",{\"1\":{\"75\":1,\"97\":7,\"273\":1,\"295\":7}}],[\"items\",{\"1\":{\"58\":1,\"59\":1,\"87\":5,\"256\":1,\"257\":1,\"285\":5}}],[\"it\",{\"1\":{\"22\":1,\"24\":1,\"25\":2,\"176\":1,\"374\":1}}],[\"increasing\",{\"1\":{\"217\":1,\"415\":1}}],[\"include\",{\"0\":{\"31\":1}}],[\"including\",{\"1\":{\"19\":1}}],[\"info\",{\"1\":{\"204\":1,\"402\":1}}],[\"information\",{\"0\":{\"41\":1},\"1\":{\"13\":1,\"19\":2,\"41\":1}}],[\"innerhtml\",{\"0\":{\"185\":1,\"383\":1},\"1\":{\"187\":2,\"385\":2}}],[\"initialvalue\",{\"1\":{\"87\":1,\"285\":1}}],[\"in<\",{\"1\":{\"83\":1,\"281\":1}}],[\"in循环\",{\"1\":{\"79\":1,\"83\":1,\"277\":1,\"281\":1}}],[\"instanceof\",{\"1\":{\"76\":7,\"203\":1,\"274\":7,\"401\":1}}],[\"inset\",{\"1\":{\"73\":1,\"271\":1}}],[\"index++\",{\"1\":{\"97\":1,\"295\":1}}],[\"index<\",{\"1\":{\"73\":1,\"271\":1}}],[\"index\",{\"1\":{\"73\":1,\"87\":3,\"97\":2,\"120\":2,\"271\":1,\"285\":3,\"295\":2,\"318\":2}}],[\"inltable\",{\"1\":{\"65\":1,\"263\":1}}],[\"inline\",{\"1\":{\"57\":1,\"65\":4,\"71\":1,\"255\":1,\"263\":4,\"269\":1}}],[\"internet\",{\"1\":{\"209\":1,\"211\":1,\"407\":1,\"409\":1}}],[\"intersection\",{\"1\":{\"195\":1,\"393\":1}}],[\"intervalid\",{\"1\":{\"172\":1,\"174\":1,\"176\":2,\"370\":1,\"372\":1,\"374\":2}}],[\"interval\",{\"1\":{\"172\":1,\"174\":1,\"370\":1,\"372\":1}}],[\"into\",{\"1\":{\"43\":1,\"204\":1,\"402\":1}}],[\"introduce\",{\"1\":{\"24\":1}}],[\"introduction\",{\"0\":{\"23\":1},\"1\":{\"3\":1,\"24\":1}}],[\"intro\",{\"0\":{\"3\":1},\"1\":{\"23\":1}}],[\"in\",{\"0\":{\"101\":1,\"299\":1},\"1\":{\"2\":1,\"19\":1,\"24\":1,\"25\":1,\"26\":1,\"40\":2,\"41\":1,\"42\":1,\"43\":1,\"83\":1,\"99\":1,\"178\":1,\"207\":1,\"281\":1,\"297\":1,\"376\":1,\"405\":1}}],[\"isequal\",{\"1\":{\"78\":2,\"276\":2}}],[\"is\",{\"1\":{\"2\":1,\"13\":1,\"24\":1,\"30\":1,\"39\":1,\"41\":3,\"43\":1,\"83\":2,\"88\":2,\"171\":1,\"176\":1,\"203\":2,\"281\":2,\"286\":2,\"369\":1,\"374\":1,\"401\":2}}],[\"bucket\",{\"1\":{\"220\":4,\"418\":4}}],[\"bubble\",{\"1\":{\"211\":1,\"409\":1}}],[\"bubbling\",{\"0\":{\"143\":1,\"341\":1},\"1\":{\"159\":1,\"211\":1,\"357\":1,\"409\":1}}],[\"built\",{\"0\":{\"101\":1,\"299\":1},\"1\":{\"99\":1,\"297\":1}}],[\"button>\",{\"1\":{\"145\":1,\"158\":2,\"161\":2,\"343\":1,\"356\":2,\"359\":2}}],[\"button\",{\"1\":{\"13\":1,\"19\":3,\"158\":1,\"161\":1,\"164\":2,\"211\":7,\"356\":1,\"359\":1,\"362\":2,\"409\":7}}],[\"bigint\",{\"1\":{\"76\":4,\"274\":4}}],[\"bi\",{\"1\":{\"76\":4,\"274\":4}}],[\"blick\",{\"1\":{\"71\":1,\"269\":1}}],[\"blue\",{\"1\":{\"68\":1,\"69\":1,\"70\":1,\"266\":1,\"267\":1,\"268\":1}}],[\"block\",{\"1\":{\"57\":1,\"64\":1,\"65\":1,\"255\":1,\"262\":1,\"263\":1}}],[\"blog\",{\"1\":{\"2\":2,\"8\":1,\"22\":1,\"50\":1,\"54\":1,\"63\":1,\"88\":3,\"89\":1,\"97\":2,\"194\":2,\"205\":2,\"208\":2,\"252\":1,\"261\":1,\"286\":3,\"287\":1,\"295\":2,\"392\":2,\"403\":2,\"406\":2}}],[\"bloghome\",{\"1\":{\"0\":1,\"2\":1}}],[\"boolean\",{\"1\":{\"76\":3,\"274\":3}}],[\"bol\",{\"1\":{\"76\":6,\"274\":6}}],[\"bordertop\",{\"1\":{\"169\":1,\"367\":1}}],[\"borderleft\",{\"1\":{\"169\":1,\"367\":1}}],[\"border\",{\"1\":{\"68\":2,\"169\":1,\"266\":2,\"367\":1}}],[\"bottom\",{\"1\":{\"55\":1,\"67\":2,\"167\":2,\"253\":1,\"265\":2,\"365\":2}}],[\"both\",{\"1\":{\"2\":1}}],[\"bfc目的是形成一个相对于外界完全独立的空间\",{\"1\":{\"64\":1,\"262\":1}}],[\"bfc就是页面上的一个隔离的独立容器\",{\"1\":{\"64\":1,\"262\":1}}],[\"bfc的区域不会与float的元素区域重叠\",{\"1\":{\"64\":1,\"262\":1}}],[\"bfc\",{\"1\":{\"64\":1,\"262\":1}}],[\"bfc问题\",{\"0\":{\"63\":1,\"261\":1}}],[\"b\",{\"1\":{\"33\":1,\"76\":1,\"81\":3,\"82\":3,\"113\":2,\"114\":4,\"120\":6,\"121\":6,\"274\":1,\"279\":3,\"280\":3,\"311\":2,\"312\":4,\"318\":6,\"319\":6}}],[\"besides\",{\"1\":{\"42\":1}}],[\"beforerouteleave\",{\"1\":{\"228\":1,\"426\":1}}],[\"beforerouteupdate\",{\"1\":{\"228\":1,\"426\":1}}],[\"beforerouteenter\",{\"1\":{\"228\":1,\"426\":1}}],[\"beforeresolve\",{\"1\":{\"228\":1,\"426\":1}}],[\"beforeenter\",{\"1\":{\"228\":2,\"426\":2}}],[\"beforeenter可以传入单个函数\",{\"1\":{\"228\":1,\"426\":1}}],[\"beforeeach\",{\"1\":{\"228\":1,\"426\":1}}],[\"before\",{\"1\":{\"39\":1}}],[\"be\",{\"1\":{\"25\":1,\"40\":1}}],[\"basis<\",{\"1\":{\"72\":1,\"270\":1}}],[\"basis把width干掉\",{\"1\":{\"72\":1,\"270\":1}}],[\"basis是用来设置盒子的基准宽度\",{\"1\":{\"72\":1,\"270\":1}}],[\"basis\",{\"1\":{\"72\":1,\"270\":1}}],[\"basically\",{\"1\":{\"22\":1}}],[\"background\",{\"1\":{\"56\":2,\"67\":4,\"68\":1,\"69\":2,\"70\":2,\"254\":2,\"265\":4,\"266\":1,\"267\":2,\"268\":2}}],[\"back\",{\"1\":{\"13\":1,\"19\":1}}],[\"breadcrumb\",{\"1\":{\"13\":1,\"19\":1}}],[\"by\",{\"1\":{\"13\":1,\"25\":1,\"27\":1}}],[\"said\",{\"1\":{\"207\":1,\"405\":1}}],[\"sayhello\",{\"1\":{\"173\":2,\"203\":2,\"371\":2,\"401\":2}}],[\"snapshot\",{\"1\":{\"204\":1,\"402\":1}}],[\"s的\",{\"0\":{\"204\":1,\"402\":1}}],[\"sprites\",{\"1\":{\"196\":1,\"394\":1}}],[\"span>这样可能涉及复杂计算的属性\",{\"1\":{\"210\":1,\"408\":1}}],[\"span>进行浏览器或设备的简单识别\",{\"1\":{\"210\":1,\"408\":1}}],[\"span>查询cpu核心数\",{\"1\":{\"209\":1,\"407\":1}}],[\"span>递归调用自身\",{\"1\":{\"177\":1,\"375\":1}}],[\"span>来停止\",{\"1\":{\"175\":1,\"373\":1}}],[\"span>需要使用\",{\"1\":{\"175\":1,\"373\":1}}],[\"span>不需要手动停止\",{\"1\":{\"175\":1,\"373\":1}}],[\"span>到函数执行之间的时间\",{\"1\":{\"175\":1,\"373\":1}}],[\"span>会不断重复执行\",{\"1\":{\"175\":1,\"373\":1}}],[\"span>执行一次后停止\",{\"1\":{\"175\":1,\"373\":1}}],[\"span>执行时\",{\"1\":{\"123\":1,\"124\":1,\"321\":1,\"322\":1}}],[\"span>用于停止\",{\"1\":{\"176\":2,\"374\":2}}],[\"span>用于按照指定的时间间隔周期性地执行代码\",{\"1\":{\"174\":1,\"372\":1}}],[\"span>用于在指定的毫秒数后执行一次代码\",{\"1\":{\"173\":1,\"371\":1}}],[\"span>元素\",{\"1\":{\"168\":2,\"366\":2}}],[\"span>事件处理器\",{\"1\":{\"164\":1,\"362\":1}}],[\"span>等事件来控制拖动过程\",{\"1\":{\"188\":1,\"191\":1,\"386\":1,\"389\":1}}],[\"span>等\",{\"1\":{\"160\":1,\"162\":1,\"358\":1,\"360\":1}}],[\"span>的精确度受到javascript单线程模型的限制\",{\"1\":{\"177\":1,\"375\":1}}],[\"span>的间隔是指函数执行之间的时间\",{\"1\":{\"175\":1,\"373\":1}}],[\"span>的延迟是指从调用\",{\"1\":{\"175\":1,\"373\":1}}],[\"span>的第三个参数来控制事件处理是在捕获阶段还是冒泡阶段触发\",{\"1\":{\"159\":1,\"357\":1}}],[\"span>的声明被提升到了作用域顶部\",{\"1\":{\"123\":1,\"124\":1,\"321\":1,\"322\":1}}],[\"span>t\",{\"1\":{\"158\":1,\"356\":1}}],[\"span>作为第三个参数\",{\"1\":{\"155\":1,\"353\":1}}],[\"span>中设置\",{\"1\":{\"155\":1,\"353\":1}}],[\"span>中的某些属性\",{\"1\":{\"210\":1,\"408\":1}}],[\"span>中的\",{\"1\":{\"130\":1,\"328\":1}}],[\"span>阻止了事件的进一步传播\",{\"1\":{\"147\":1,\"345\":1}}],[\"span>上监听事件\",{\"1\":{\"193\":1,\"391\":1}}],[\"span>上设置了一个点击事件的监听器\",{\"1\":{\"161\":1,\"359\":1}}],[\"span>上\",{\"1\":{\"145\":1,\"343\":1}}],[\"span>指向的元素交换\",{\"1\":{\"128\":1,\"326\":1}}],[\"span>指向的元素与\",{\"1\":{\"128\":1,\"326\":1}}],[\"span>还没有被赋值\",{\"1\":{\"126\":1,\"324\":1}}],[\"span>在执行时抛出错误\",{\"1\":{\"126\":1,\"324\":1}}],[\"span>输出\",{\"1\":{\"126\":1,\"324\":1}}],[\"span>关键字预加载关键图片\",{\"1\":{\"196\":1,\"394\":1}}],[\"span>关键字\",{\"1\":{\"126\":1,\"324\":1}}],[\"span>关键字来创建其实例\",{\"1\":{\"88\":1,\"286\":1}}],[\"span>关键字来创建一个类的新实例\",{\"1\":{\"88\":1,\"286\":1}}],[\"span>声明的变量在初始化之前不能被访问\",{\"1\":{\"125\":1,\"323\":1}}],[\"span>声明的变量\",{\"1\":{\"123\":1,\"321\":1}}],[\"span>已经存在\",{\"1\":{\"123\":1,\"124\":1,\"321\":1,\"322\":1}}],[\"span>之后声明的\",{\"1\":{\"123\":1,\"124\":1,\"321\":1,\"322\":1}}],[\"span>是javascript中用于定时执行代码的两个函数\",{\"1\":{\"172\":1,\"370\":1}}],[\"span>是在\",{\"1\":{\"123\":1,\"124\":1,\"321\":1,\"322\":1}}],[\"span>是一个property\",{\"1\":{\"133\":2,\"331\":2}}],[\"span>是一个函数表达式\",{\"1\":{\"126\":1,\"324\":1}}],[\"span>是一个实例方法\",{\"1\":{\"88\":1,\"286\":1}}],[\"span>是一个类\",{\"1\":{\"88\":1,\"286\":1}}],[\"span>或\",{\"1\":{\"121\":1,\"131\":1,\"168\":1,\"193\":1,\"319\":1,\"329\":1,\"366\":1,\"391\":1}}],[\"span>或者\",{\"1\":{\"72\":1,\"83\":1,\"270\":1,\"281\":1}}],[\"span>方法阻止事件进一步传播\",{\"1\":{\"159\":1,\"357\":1}}],[\"span>方法取消事件的默认行为\",{\"1\":{\"159\":1,\"357\":1}}],[\"span>方法添加到元素上\",{\"1\":{\"159\":1,\"357\":1}}],[\"span>方法中设置第三个参数来指定事件处理器是在捕获阶段还是冒泡阶段被触发\",{\"1\":{\"152\":1,\"350\":1}}],[\"span>方法来实现\",{\"1\":{\"148\":1,\"346\":1}}],[\"span>方法通过css选择器查找所有匹配的节点列表\",{\"1\":{\"141\":1,\"339\":1}}],[\"span>方法通过css选择器查找第一个匹配的节点\",{\"1\":{\"141\":1,\"339\":1}}],[\"span>方法通过标签名查找节点列表\",{\"1\":{\"141\":1,\"339\":1}}],[\"span>方法通过类名查找节点列表\",{\"1\":{\"141\":1,\"339\":1}}],[\"span>方法通过id查找节点\",{\"1\":{\"141\":1,\"339\":1}}],[\"span>方法创建新的文本节点\",{\"1\":{\"140\":1,\"338\":1}}],[\"span>方法创建新的元素节点\",{\"1\":{\"140\":1,\"338\":1}}],[\"span>方法复制节点\",{\"1\":{\"139\":1,\"337\":1}}],[\"span>方法替换一个节点\",{\"1\":{\"138\":1,\"336\":1}}],[\"span>方法从dom中移除节点\",{\"1\":{\"136\":1,\"334\":1}}],[\"span>方法将新节点添加到父节点中\",{\"1\":{\"135\":1,\"333\":1}}],[\"span>方法设置\",{\"1\":{\"130\":1,\"328\":1}}],[\"span>方法访问\",{\"1\":{\"130\":1,\"132\":1,\"328\":1,\"330\":1}}],[\"span>方法在处理对象时会将对象转换为json字符串\",{\"1\":{\"121\":1,\"319\":1}}],[\"span>方法\",{\"1\":{\"117\":2,\"120\":1,\"121\":3,\"146\":1,\"154\":1,\"315\":2,\"318\":1,\"319\":3,\"344\":1,\"352\":1}}],[\"span>属性可能影响性能\",{\"1\":{\"210\":1,\"408\":1}}],[\"span>属性来预加载图片\",{\"1\":{\"196\":1,\"394\":1}}],[\"span>属性\",{\"1\":{\"116\":1,\"118\":1,\"132\":1,\"167\":1,\"188\":1,\"191\":1,\"193\":1,\"314\":1,\"316\":1,\"330\":1,\"365\":1,\"386\":1,\"389\":1,\"391\":1}}],[\"span>对象的支持程度和返回值可能有差异\",{\"1\":{\"210\":1,\"408\":1}}],[\"span>对象是javascript中的一个内置对象\",{\"1\":{\"208\":1,\"406\":1}}],[\"span>对象并设置\",{\"1\":{\"118\":1,\"316\":1}}],[\"span>对象和某些dom集合\",{\"1\":{\"116\":1,\"314\":1}}],[\"span>对象\",{\"1\":{\"88\":1,\"144\":1,\"286\":1,\"342\":1}}],[\"span>时\",{\"1\":{\"88\":1,\"177\":1,\"286\":1,\"375\":1}}],[\"span>和\",{\"1\":{\"88\":1,\"121\":2,\"123\":1,\"125\":1,\"130\":1,\"132\":1,\"167\":1,\"172\":1,\"177\":1,\"286\":1,\"319\":2,\"321\":1,\"323\":1,\"328\":1,\"330\":1,\"365\":1,\"370\":1,\"375\":1}}],[\"span>循环遍历对象的属性\",{\"1\":{\"83\":1,\"281\":1}}],[\"span>\",{\"1\":{\"61\":6,\"62\":13,\"72\":4,\"73\":22,\"78\":5,\"80\":2,\"81\":3,\"82\":5,\"83\":6,\"84\":2,\"85\":3,\"86\":1,\"87\":18,\"88\":4,\"100\":6,\"101\":9,\"104\":2,\"105\":5,\"106\":2,\"107\":2,\"108\":1,\"109\":4,\"110\":4,\"111\":4,\"112\":10,\"113\":4,\"114\":14,\"117\":1,\"118\":1,\"121\":1,\"123\":1,\"125\":3,\"126\":1,\"128\":5,\"130\":1,\"131\":3,\"133\":8,\"139\":1,\"147\":1,\"152\":1,\"154\":1,\"157\":3,\"158\":12,\"159\":2,\"160\":12,\"161\":1,\"162\":2,\"163\":3,\"167\":4,\"173\":3,\"174\":3,\"175\":1,\"176\":2,\"178\":6,\"179\":13,\"180\":9,\"182\":5,\"183\":4,\"184\":6,\"185\":5,\"186\":9,\"187\":1,\"188\":2,\"191\":2,\"193\":1,\"195\":3,\"196\":1,\"198\":2,\"199\":1,\"200\":3,\"201\":4,\"202\":8,\"203\":17,\"204\":14,\"207\":7,\"209\":10,\"210\":1,\"211\":6,\"219\":15,\"222\":6,\"223\":7,\"224\":5,\"225\":4,\"226\":3,\"259\":6,\"260\":13,\"270\":4,\"271\":22,\"276\":5,\"278\":2,\"279\":3,\"280\":5,\"281\":6,\"282\":2,\"283\":3,\"284\":1,\"285\":18,\"286\":4,\"298\":6,\"299\":9,\"302\":2,\"303\":5,\"304\":2,\"305\":2,\"306\":1,\"307\":4,\"308\":4,\"309\":4,\"310\":10,\"311\":4,\"312\":14,\"315\":1,\"316\":1,\"319\":1,\"321\":1,\"323\":3,\"324\":1,\"326\":5,\"328\":1,\"329\":3,\"331\":8,\"337\":1,\"345\":1,\"350\":1,\"352\":1,\"355\":3,\"356\":12,\"357\":2,\"358\":12,\"359\":1,\"360\":2,\"361\":3,\"365\":4,\"371\":3,\"372\":3,\"373\":1,\"374\":2,\"376\":6,\"377\":13,\"378\":9,\"380\":5,\"381\":4,\"382\":6,\"383\":5,\"384\":9,\"385\":1,\"386\":2,\"389\":2,\"391\":1,\"393\":3,\"394\":1,\"396\":2,\"397\":1,\"398\":3,\"399\":4,\"400\":8,\"401\":17,\"402\":14,\"405\":7,\"407\":10,\"408\":1,\"409\":6,\"417\":15,\"420\":6,\"421\":7,\"422\":5,\"423\":4,\"424\":3}}],[\"src\",{\"1\":{\"196\":1,\"394\":1}}],[\"slice\",{\"1\":{\"117\":2,\"315\":2}}],[\"squares\",{\"1\":{\"86\":2,\"284\":2}}],[\"symbol\",{\"1\":{\"76\":4,\"82\":4,\"97\":5,\"178\":1,\"274\":4,\"280\":4,\"295\":5,\"376\":1}}],[\"sy\",{\"1\":{\"76\":4,\"274\":4}}],[\"syntax\",{\"1\":{\"25\":1,\"26\":1,\"27\":1,\"43\":1}}],[\"s+\",{\"1\":{\"76\":1,\"274\":1}}],[\"shaking\",{\"1\":{\"219\":2,\"417\":2}}],[\"shufflearray\",{\"1\":{\"128\":3,\"326\":3}}],[\"shift\",{\"1\":{\"88\":1,\"286\":1}}],[\"shirnk\",{\"1\":{\"72\":1,\"270\":1}}],[\"shrink增大的增大缩小的缩小\",{\"1\":{\"72\":1,\"270\":1}}],[\"shrink用来设置子盒子超过父盒子的宽度后\",{\"1\":{\"72\":1,\"270\":1}}],[\"should\",{\"1\":{\"2\":1,\"22\":1}}],[\"script2\",{\"1\":{\"207\":1,\"405\":1}}],[\"script1\",{\"1\":{\"207\":1,\"405\":1}}],[\"script>\",{\"1\":{\"192\":1,\"390\":1}}],[\"script\",{\"1\":{\"98\":1,\"207\":2,\"296\":1,\"405\":2}}],[\"scrolly\",{\"1\":{\"171\":1,\"369\":1}}],[\"scrollx\",{\"1\":{\"171\":1,\"369\":1}}],[\"scrolltop\",{\"1\":{\"170\":2,\"368\":2}}],[\"scrollleft\",{\"1\":{\"170\":2,\"368\":2}}],[\"scroll\",{\"1\":{\"65\":1,\"263\":1}}],[\"scheme\",{\"1\":{\"34\":1}}],[\"skyblue\",{\"1\":{\"56\":1,\"254\":1}}],[\"step\",{\"1\":{\"204\":3,\"402\":3}}],[\"style\",{\"1\":{\"190\":2,\"388\":2}}],[\"style>\",{\"1\":{\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"67\":2,\"68\":1,\"69\":1,\"70\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"265\":2,\"266\":1,\"267\":1,\"268\":1}}],[\"stopdragging\",{\"1\":{\"190\":2,\"388\":2}}],[\"stoppropagation\",{\"1\":{\"142\":1,\"146\":1,\"147\":3,\"148\":1,\"154\":3,\"158\":2,\"159\":1,\"164\":1,\"340\":1,\"344\":1,\"345\":3,\"346\":1,\"352\":3,\"356\":2,\"357\":1,\"362\":1}}],[\"studio\",{\"1\":{\"204\":1,\"402\":1}}],[\"students\",{\"1\":{\"97\":7,\"295\":7}}],[\"student1\",{\"1\":{\"93\":3,\"96\":2,\"291\":3,\"294\":2}}],[\"student\",{\"1\":{\"93\":11,\"96\":8,\"97\":2,\"291\":11,\"294\":8,\"295\":2}}],[\"stu\",{\"1\":{\"97\":8,\"295\":8}}],[\"state\",{\"1\":{\"224\":3,\"225\":2,\"422\":3,\"423\":2}}],[\"static\",{\"1\":{\"96\":3,\"294\":3}}],[\"start\",{\"1\":{\"87\":1,\"285\":1}}],[\"starting\",{\"1\":{\"42\":1}}],[\"strong>\",{\"1\":{\"187\":1,\"385\":1}}],[\"stringify\",{\"1\":{\"78\":4,\"79\":1,\"83\":2,\"121\":3,\"276\":4,\"277\":1,\"281\":2,\"319\":3}}],[\"string\",{\"1\":{\"76\":3,\"274\":3}}],[\"str\",{\"1\":{\"76\":6,\"274\":6}}],[\"structure\",{\"1\":{\"22\":1}}],[\"s\",{\"1\":{\"40\":1,\"41\":1,\"158\":1,\"356\":1}}],[\"suspense\",{\"1\":{\"219\":1,\"417\":1}}],[\"subsequence\",{\"1\":{\"217\":1,\"415\":1}}],[\"subscript\",{\"0\":{\"35\":1}}],[\"super\",{\"1\":{\"96\":2,\"294\":2}}],[\"superscript\",{\"0\":{\"35\":1}}],[\"support\",{\"1\":{\"34\":1}}],[\"supports\",{\"1\":{\"25\":1}}],[\"sum\",{\"1\":{\"32\":1}}],[\"size\",{\"1\":{\"34\":1}}],[\"sites\",{\"1\":{\"22\":1}}],[\"sidebar\",{\"1\":{\"13\":1,\"19\":1}}],[\"source\",{\"1\":{\"204\":1,\"402\":1}}],[\"solid\",{\"1\":{\"68\":2,\"266\":2}}],[\"son\",{\"1\":{\"55\":2,\"56\":2,\"57\":2,\"58\":2,\"59\":2,\"253\":2,\"254\":2,\"255\":2,\"256\":2,\"257\":2}}],[\"so\",{\"1\":{\"22\":2}}],[\"some\",{\"1\":{\"13\":1}}],[\"self代表子线程自身\",{\"1\":{\"207\":1,\"405\":1}}],[\"self\",{\"1\":{\"207\":4,\"405\":4}}],[\"seconds\",{\"1\":{\"173\":1,\"174\":1,\"371\":1,\"372\":1}}],[\"see\",{\"1\":{\"2\":1}}],[\"setinterval\",{\"0\":{\"174\":1,\"372\":1},\"1\":{\"172\":1,\"174\":2,\"176\":1,\"370\":1,\"372\":2,\"374\":1}}],[\"settimeout来实现setinterval\",{\"0\":{\"178\":1,\"376\":1}}],[\"settimeout\",{\"0\":{\"173\":1,\"371\":1},\"1\":{\"172\":1,\"173\":2,\"176\":2,\"178\":1,\"220\":1,\"370\":1,\"371\":2,\"374\":2,\"376\":1,\"418\":1}}],[\"settimeout和setinterval的区别及用法是什么\",{\"0\":{\"172\":1,\"370\":1}}],[\"setting\",{\"1\":{\"13\":1,\"34\":1}}],[\"setattribute\",{\"1\":{\"130\":1,\"328\":1}}],[\"set\",{\"1\":{\"2\":1,\"40\":1,\"41\":1,\"220\":7,\"418\":7}}],[\"ajax\",{\"1\":{\"206\":1,\"404\":1}}],[\"api的优势\",{\"0\":{\"229\":1,\"427\":1}}],[\"api对比\",{\"0\":{\"229\":1,\"427\":1}}],[\"api\",{\"1\":{\"195\":1,\"204\":4,\"219\":6,\"222\":2,\"226\":1,\"393\":1,\"402\":4,\"417\":6,\"420\":2,\"424\":1}}],[\"appversion<\",{\"1\":{\"209\":1,\"407\":1}}],[\"appname<\",{\"1\":{\"209\":1,\"407\":1}}],[\"appcodename<\",{\"1\":{\"209\":1,\"407\":1}}],[\"appendchild\",{\"1\":{\"135\":1,\"137\":1,\"139\":1,\"192\":1,\"333\":1,\"335\":1,\"337\":1,\"390\":1}}],[\"apply\",{\"1\":{\"88\":1,\"203\":4,\"286\":1,\"401\":4}}],[\"aftereach\",{\"1\":{\"228\":1,\"426\":1}}],[\"after\",{\"1\":{\"173\":1,\"371\":1}}],[\"axis\",{\"1\":{\"171\":2,\"369\":2}}],[\"attachevent\",{\"1\":{\"211\":1,\"409\":1}}],[\"attribute不会改变\",{\"1\":{\"133\":1,\"331\":1}}],[\"attribute在html中总是字符串\",{\"1\":{\"132\":1,\"330\":1}}],[\"attribute在html中是作为字符串存储的\",{\"1\":{\"130\":1,\"328\":1}}],[\"attribute通过<span\",{\"1\":{\"132\":1,\"330\":1}}],[\"attribute通常在html标签中可见\",{\"1\":{\"130\":1,\"328\":1}}],[\"attribute来自html标签\",{\"1\":{\"132\":1,\"330\":1}}],[\"attribute存储在dom中\",{\"1\":{\"130\":1,\"328\":1}}],[\"attribute是定义在html标签内的\",{\"1\":{\"130\":1,\"328\":1}}],[\"attribute是html元素在标记中定义的属性\",{\"1\":{\"129\":1,\"327\":1}}],[\"attribute\",{\"0\":{\"130\":1,\"328\":1},\"1\":{\"129\":1,\"133\":1,\"327\":1,\"331\":1}}],[\"attribute表示初始html属性的值\",{\"1\":{\"129\":1,\"327\":1}}],[\"at\",{\"1\":{\"171\":1,\"369\":1}}],[\"add\",{\"1\":{\"220\":1,\"418\":1}}],[\"addeventlistener\",{\"1\":{\"145\":2,\"147\":2,\"149\":2,\"153\":2,\"154\":2,\"158\":1,\"159\":1,\"161\":1,\"164\":1,\"192\":3,\"207\":3,\"211\":1,\"343\":2,\"345\":2,\"347\":2,\"351\":2,\"352\":2,\"356\":1,\"357\":1,\"359\":1,\"362\":1,\"390\":3,\"405\":3,\"409\":1}}],[\"address\",{\"1\":{\"97\":3,\"295\":3}}],[\"am\",{\"1\":{\"88\":2,\"286\":2}}],[\"agent可以被轻易篡改\",{\"1\":{\"210\":1,\"408\":1}}],[\"agent嗅探\",{\"1\":{\"210\":1,\"408\":1}}],[\"age\",{\"1\":{\"76\":12,\"88\":4,\"93\":8,\"96\":6,\"274\":12,\"286\":4,\"291\":8,\"294\":6}}],[\"alert\",{\"1\":{\"211\":3,\"409\":3}}],[\"allocation\",{\"1\":{\"204\":1,\"402\":1}}],[\"alice\",{\"1\":{\"88\":3,\"286\":3}}],[\"align\",{\"1\":{\"57\":2,\"58\":1,\"59\":1,\"61\":2,\"62\":1,\"255\":2,\"256\":1,\"257\":1,\"259\":2,\"260\":1}}],[\"also\",{\"1\":{\"19\":2,\"40\":1,\"43\":1}}],[\"auto\",{\"1\":{\"55\":2,\"62\":1,\"65\":1,\"68\":1,\"71\":1,\"253\":2,\"260\":1,\"263\":1,\"266\":1,\"269\":1}}],[\"author\",{\"1\":{\"41\":1}}],[\"absolute\",{\"1\":{\"42\":1,\"55\":1,\"56\":1,\"71\":1,\"73\":1,\"253\":1,\"254\":1,\"269\":1,\"271\":1}}],[\"as=\",{\"1\":{\"196\":1,\"394\":1}}],[\"assets\",{\"1\":{\"42\":1}}],[\"as\",{\"1\":{\"39\":1,\"40\":1}}],[\"arg2\",{\"1\":{\"172\":2,\"173\":2,\"174\":2,\"370\":2,\"371\":2,\"372\":2}}],[\"arg1\",{\"1\":{\"172\":2,\"173\":1,\"174\":1,\"370\":2,\"371\":1,\"372\":1}}],[\"arguments\",{\"1\":{\"117\":3,\"315\":3}}],[\"args\",{\"1\":{\"88\":3,\"117\":7,\"203\":5,\"286\":3,\"315\":7,\"401\":5}}],[\"arraycopy\",{\"1\":{\"128\":2,\"326\":2}}],[\"array\",{\"1\":{\"76\":4,\"117\":2,\"121\":1,\"128\":7,\"274\":4,\"315\":2,\"319\":1,\"326\":7}}],[\"arr\",{\"1\":{\"76\":8,\"117\":3,\"120\":6,\"121\":1,\"274\":8,\"315\":3,\"318\":6,\"319\":1}}],[\"are\",{\"1\":{\"23\":1,\"41\":1,\"42\":1}}],[\"article\",{\"0\":{\"16\":1},\"1\":{\"16\":1,\"54\":1,\"63\":1,\"88\":3,\"89\":1,\"97\":2,\"194\":2,\"205\":2,\"208\":2,\"252\":1,\"261\":1,\"286\":3,\"287\":1,\"295\":2,\"392\":2,\"403\":2,\"406\":2}}],[\"acc\",{\"1\":{\"120\":3,\"318\":3}}],[\"accessibility\",{\"1\":{\"73\":1,\"271\":1}}],[\"according\",{\"1\":{\"22\":1}}],[\"activeeffect\",{\"1\":{\"220\":6,\"418\":6}}],[\"actions\",{\"1\":{\"8\":1,\"50\":1}}],[\"actual\",{\"1\":{\"16\":1}}],[\"an\",{\"1\":{\"13\":1,\"24\":1}}],[\"and\",{\"0\":{\"13\":1,\"35\":1},\"1\":{\"2\":1,\"3\":1,\"13\":1,\"19\":3,\"22\":1,\"23\":2,\"27\":1,\"34\":1,\"41\":1,\"43\":1,\"88\":2,\"171\":1,\"286\":2,\"369\":1}}],[\"a\",{\"1\":{\"2\":1,\"23\":1,\"33\":1,\"43\":1,\"76\":7,\"78\":6,\"81\":2,\"82\":2,\"113\":2,\"114\":2,\"120\":6,\"121\":6,\"274\":7,\"276\":6,\"279\":2,\"280\":2,\"311\":2,\"312\":2,\"318\":6,\"319\":6}}],[\"two\",{\"1\":{\"216\":1,\"414\":1}}],[\"tdz\",{\"1\":{\"123\":1,\"125\":1,\"321\":1,\"323\":1}}],[\"ts\",{\"1\":{\"96\":5,\"229\":1,\"294\":5,\"427\":1}}],[\"typescript\",{\"1\":{\"219\":2,\"417\":2}}],[\"type<\",{\"1\":{\"133\":1,\"331\":1}}],[\"type=\",{\"1\":{\"130\":1,\"133\":1,\"328\":1,\"331\":1}}],[\"typeerror\",{\"1\":{\"124\":1,\"126\":1,\"322\":1,\"324\":1}}],[\"type\",{\"1\":{\"76\":1,\"159\":1,\"162\":2,\"164\":1,\"274\":1,\"357\":1,\"360\":2,\"362\":1}}],[\"typeof\",{\"1\":{\"76\":10,\"88\":1,\"274\":10,\"286\":1}}],[\"typeof和instanceof的区别\",{\"1\":{\"75\":1,\"273\":1}}],[\"template\",{\"1\":{\"228\":1,\"426\":1}}],[\"template>\",{\"1\":{\"223\":2,\"421\":2}}],[\"tempobj\",{\"1\":{\"220\":4,\"418\":4}}],[\"temporaryvalue\",{\"1\":{\"128\":3,\"326\":3}}],[\"temporal\",{\"1\":{\"123\":1,\"321\":1}}],[\"teleport\",{\"1\":{\"219\":1,\"417\":1}}],[\"terminate\",{\"1\":{\"207\":1,\"405\":1}}],[\"termination\",{\"1\":{\"97\":1,\"295\":1}}],[\"test2\",{\"1\":{\"113\":2,\"311\":2}}],[\"test\",{\"1\":{\"113\":2,\"311\":2}}],[\"testme\",{\"1\":{\"76\":3,\"274\":3}}],[\"teach\",{\"1\":{\"97\":1,\"295\":1}}],[\"tex\",{\"0\":{\"32\":1}}],[\"text<\",{\"1\":{\"187\":1,\"385\":1}}],[\"textcontent\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"text\",{\"1\":{\"16\":26,\"30\":1,\"57\":1,\"61\":6,\"62\":13,\"72\":5,\"73\":22,\"78\":5,\"80\":2,\"81\":3,\"82\":5,\"83\":8,\"84\":2,\"85\":3,\"86\":1,\"87\":18,\"88\":11,\"100\":6,\"101\":9,\"104\":2,\"105\":5,\"106\":2,\"107\":2,\"108\":1,\"109\":4,\"110\":4,\"111\":4,\"112\":10,\"113\":4,\"114\":14,\"116\":2,\"117\":3,\"118\":3,\"120\":1,\"121\":8,\"123\":8,\"124\":5,\"125\":5,\"126\":6,\"128\":7,\"130\":6,\"131\":4,\"132\":3,\"133\":13,\"135\":1,\"136\":1,\"138\":1,\"139\":2,\"140\":2,\"141\":5,\"144\":1,\"145\":1,\"146\":1,\"147\":2,\"148\":1,\"152\":2,\"154\":2,\"155\":2,\"157\":3,\"158\":13,\"159\":6,\"160\":13,\"161\":2,\"162\":3,\"163\":3,\"164\":1,\"167\":6,\"168\":3,\"172\":2,\"173\":4,\"174\":4,\"175\":9,\"176\":4,\"177\":4,\"178\":6,\"179\":13,\"180\":9,\"182\":5,\"183\":4,\"184\":6,\"185\":5,\"186\":9,\"187\":1,\"188\":4,\"191\":4,\"192\":1,\"193\":4,\"195\":3,\"196\":3,\"198\":2,\"199\":1,\"200\":3,\"201\":4,\"202\":8,\"203\":17,\"204\":14,\"207\":7,\"208\":1,\"209\":11,\"210\":6,\"211\":6,\"219\":15,\"220\":6,\"222\":6,\"223\":7,\"224\":5,\"225\":4,\"226\":3,\"255\":1,\"259\":6,\"260\":13,\"270\":5,\"271\":22,\"276\":5,\"278\":2,\"279\":3,\"280\":5,\"281\":8,\"282\":2,\"283\":3,\"284\":1,\"285\":18,\"286\":11,\"298\":6,\"299\":9,\"302\":2,\"303\":5,\"304\":2,\"305\":2,\"306\":1,\"307\":4,\"308\":4,\"309\":4,\"310\":10,\"311\":4,\"312\":14,\"314\":2,\"315\":3,\"316\":3,\"318\":1,\"319\":8,\"321\":8,\"322\":5,\"323\":5,\"324\":6,\"326\":7,\"328\":6,\"329\":4,\"330\":3,\"331\":13,\"333\":1,\"334\":1,\"336\":1,\"337\":2,\"338\":2,\"339\":5,\"342\":1,\"343\":1,\"344\":1,\"345\":2,\"346\":1,\"350\":2,\"352\":2,\"353\":2,\"355\":3,\"356\":13,\"357\":6,\"358\":13,\"359\":2,\"360\":3,\"361\":3,\"362\":1,\"365\":6,\"366\":3,\"370\":2,\"371\":4,\"372\":4,\"373\":9,\"374\":4,\"375\":4,\"376\":6,\"377\":13,\"378\":9,\"380\":5,\"381\":4,\"382\":6,\"383\":5,\"384\":9,\"385\":1,\"386\":4,\"389\":4,\"390\":1,\"391\":4,\"393\":3,\"394\":3,\"396\":2,\"397\":1,\"398\":3,\"399\":4,\"400\":8,\"401\":17,\"402\":14,\"405\":7,\"406\":1,\"407\":11,\"408\":6,\"409\":6,\"417\":15,\"418\":6,\"420\":6,\"421\":7,\"422\":5,\"423\":4,\"424\":3}}],[\"trigger\",{\"1\":{\"220\":2,\"418\":2}}],[\"track\",{\"1\":{\"220\":2,\"418\":2}}],[\"translate\",{\"1\":{\"55\":1,\"62\":1,\"253\":1,\"260\":1}}],[\"transform\",{\"1\":{\"55\":1,\"253\":1}}],[\"tree\",{\"1\":{\"219\":2,\"417\":2}}],[\"true\",{\"1\":{\"0\":1,\"2\":1,\"73\":1,\"76\":14,\"78\":2,\"79\":2,\"82\":2,\"83\":3,\"97\":2,\"105\":1,\"106\":4,\"108\":2,\"149\":1,\"153\":1,\"154\":2,\"188\":1,\"191\":1,\"192\":1,\"271\":1,\"274\":14,\"276\":2,\"277\":2,\"280\":2,\"281\":3,\"295\":2,\"303\":1,\"304\":4,\"306\":2,\"347\":1,\"351\":1,\"352\":2,\"386\":1,\"389\":1,\"390\":1}}],[\"tagname\",{\"1\":{\"158\":1,\"161\":1,\"356\":1,\"359\":1}}],[\"tags\",{\"1\":{\"41\":1}}],[\"target就是span\",{\"1\":{\"158\":1,\"356\":1}}],[\"target\",{\"1\":{\"158\":6,\"159\":2,\"161\":4,\"162\":2,\"164\":1,\"220\":11,\"356\":6,\"357\":2,\"359\":4,\"360\":2,\"362\":1,\"418\":11}}],[\"tasklist\",{\"0\":{\"33\":1}}],[\"tab\",{\"1\":{\"204\":1,\"402\":1}}],[\"tabs\",{\"0\":{\"28\":1,\"29\":1}}],[\"table布局\",{\"0\":{\"57\":1,\"255\":1}}],[\"table\",{\"1\":{\"19\":1,\"57\":1,\"61\":1,\"62\":1,\"65\":3,\"204\":1,\"255\":1,\"259\":1,\"260\":1,\"263\":3,\"402\":1}}],[\"t\",{\"1\":{\"23\":1,\"24\":1}}],[\"title\",{\"0\":{\"40\":1},\"1\":{\"19\":1,\"40\":5}}],[\"timeline\",{\"1\":{\"204\":1,\"402\":1}}],[\"timeworker\",{\"1\":{\"178\":5,\"376\":5}}],[\"timeoutid\",{\"1\":{\"172\":1,\"176\":2,\"370\":1,\"374\":2}}],[\"time\",{\"1\":{\"13\":1,\"19\":1,\"178\":5,\"376\":5}}],[\"that\",{\"1\":{\"13\":1,\"22\":1}}],[\"then方法\",{\"1\":{\"98\":1,\"296\":1}}],[\"these\",{\"1\":{\"26\":1}}],[\"them\",{\"1\":{\"19\":1,\"22\":1}}],[\"theme\",{\"0\":{\"27\":1},\"1\":{\"19\":2,\"27\":1}}],[\"the\",{\"1\":{\"2\":1,\"13\":4,\"16\":1,\"19\":3,\"25\":1,\"27\":1,\"40\":1,\"41\":2,\"171\":3,\"369\":3}}],[\"this是e\",{\"1\":{\"158\":1,\"356\":1}}],[\"this指向\",{\"1\":{\"88\":1,\"286\":1}}],[\"this\",{\"1\":{\"2\":2,\"13\":1,\"30\":2,\"76\":8,\"88\":5,\"93\":5,\"96\":4,\"97\":7,\"176\":2,\"203\":2,\"274\":8,\"286\":5,\"291\":5,\"294\":4,\"295\":7,\"374\":2,\"401\":2}}],[\"torefs\",{\"0\":{\"225\":1,\"423\":1},\"1\":{\"225\":2,\"423\":2}}],[\"torefs总结\",{\"0\":{\"221\":1,\"419\":1}}],[\"toref\",{\"0\":{\"221\":1,\"224\":1,\"419\":1,\"422\":1},\"1\":{\"224\":2,\"422\":2}}],[\"tools\",{\"1\":{\"204\":1,\"402\":1}}],[\"tolocalestring\",{\"1\":{\"114\":2,\"312\":2}}],[\"tolowercase\",{\"1\":{\"76\":1,\"274\":1}}],[\"tostring\",{\"1\":{\"76\":17,\"274\":17}}],[\"toc\",{\"1\":{\"19\":1}}],[\"top<\",{\"1\":{\"62\":1,\"260\":1}}],[\"top\",{\"1\":{\"13\":1,\"19\":1,\"55\":2,\"56\":2,\"67\":2,\"166\":1,\"167\":2,\"171\":1,\"190\":1,\"253\":2,\"254\":2,\"265\":2,\"364\":1,\"365\":2,\"369\":1,\"388\":1}}],[\"to\",{\"1\":{\"2\":1,\"13\":1,\"19\":1,\"22\":3,\"23\":1,\"24\":1,\"26\":1,\"42\":1,\"171\":1,\"228\":12,\"369\":1,\"426\":12}}],[\"介绍页\",{\"0\":{\"1\":1}}],[\"博客主页\",{\"1\":{\"0\":1}}],[\"和冒泡\",{\"1\":{\"211\":1,\"409\":1}}],[\"和预加载\",{\"1\":{\"194\":1,\"392\":1}}],[\"和顶\",{\"1\":{\"166\":1,\"364\":1}}],[\"和特性\",{\"1\":{\"129\":1,\"327\":1}}],[\"和setattribute\",{\"1\":{\"129\":1,\"327\":1}}],[\"和函数提升\",{\"1\":{\"122\":1,\"320\":1}}],[\"和==的区别\",{\"0\":{\"104\":1,\"302\":1}}],[\"和原生对象\",{\"1\":{\"99\":1,\"297\":1}}],[\"和grid\",{\"1\":{\"62\":1,\"260\":1}}],[\"和布局方法\",{\"1\":{\"60\":1,\"258\":1}}],[\"和\",{\"0\":{\"166\":1,\"169\":1,\"170\":1,\"364\":1,\"367\":1,\"368\":1},\"1\":{\"0\":1,\"62\":1,\"72\":1,\"79\":1,\"80\":1,\"84\":1,\"88\":1,\"104\":1,\"108\":2,\"109\":1,\"114\":1,\"163\":1,\"178\":2,\"183\":1,\"198\":1,\"204\":2,\"219\":6,\"222\":1,\"223\":1,\"225\":1,\"260\":1,\"270\":1,\"277\":1,\"278\":1,\"282\":1,\"286\":1,\"302\":1,\"306\":2,\"307\":1,\"312\":1,\"361\":1,\"376\":2,\"381\":1,\"396\":1,\"402\":2,\"417\":6,\"420\":1,\"421\":1,\"423\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
